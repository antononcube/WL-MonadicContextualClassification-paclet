Notebook[{

Cell[CellGroupData[{
Cell["AntonAntonov/MonadicContextualClassification", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->1384948737,ExpressionUUID->"7380021b-481c-4667-b089-93108dc6399f"],

Cell["A monad for machine learning classification workflows", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.932379618928791*^9, 3.932379629247163*^9}},
 CellTags->{"Description", "TemplateCell"},
 CellID->258172926,ExpressionUUID->"5c76a431-43b8-484c-a27f-f0bb9c7b3cee"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"24de689c-4f4d-4565-a1dc-8f1002b90348"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{"PacletDirectoryType" -> "Notebook", "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"75893fc5-321f-40e8-8912-7c8b4889cbae"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1221838546,ExpressionUUID->"921dcb95-a898-4d7a-9ffc-bd7aeadf3649"],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"ecd716aa-f11d-4cae-a4fe-d7997ba2eab5"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1201810008,ExpressionUUID->"b757a595-60d0-4ef2-8685-e197c4af4448"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"d7f5247d-f28f-40c9-99a5-446c8e95a939"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1737104421,ExpressionUUID->"cba902a6-c1fe-4745-a967-5c97edb2973a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ClCon.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "ClCon.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "ClCon.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->167852847,ExpressionUUID->"d44e9763-b252-4fbc-b770-53a83997daa3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MonadicContextualClassification.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "MonadicContextualClassification.wl"}]},
    
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "MonadicContextualClassification.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->473822782,ExpressionUUID->"f42456cf-83e2-4cf4-ac03-8ab5510c1732"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     FileNameJoin[{
       NotebookDirectory[], "LICENSE"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "LICENSE"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1456771018,ExpressionUUID->"e95b5f48-0a1e-44a5-8251-c8b6cd5a9d58"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->670133998,ExpressionUUID->"150231a1-d2f2-47a4-9a7b-07e5ff52fe44"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"README.md\"", 
     FileNameJoin[{
       NotebookDirectory[], "README.md"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "README.md"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->489440079,ExpressionUUID->"8ba742ed-7f60-4d0b-9ad3-3a98eb14db49"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1537859518,ExpressionUUID->"75e4221f-3abc-49a2-98cb-cf393a2bc58d"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1839227381,ExpressionUUID->"2c73450a-d478-45f4-80f0-a7c338714026"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d7438540-ba1e-40a0-b24f-35c34b2bc844"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"0316578b-bd84-4579-945a-c7ce6d4926b6"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "eb7ae8ed-39b5-4217-a58b-f5b5ebbcb8b7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"8cf067d8-3388-47d2-91c3-9207a4555137"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
    InsetBox[
     StyleBox[
      TagBox["\<\"Image Placeholder\"\>",
       Annotation[#, "PlaceholderImage"]& ],
      StripOnInput->False,
      FontFamily->"Source Sans Pro",
      FontSize->16], {0.5, 0.6}], InsetBox[
     StyleBox["\<\"Replace this with an image\\nthat you would like to \
display\\non the landing page for your paclet.\"\>",
      StripOnInput->False,
      TextAlignment->Center,
      FontFamily->"Source Sans Pro",
      FontSize->10,
      FontColor->GrayLevel[0.5]], {0.5, 0.4}]},
   ImageSize->250],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"fcdd9e0c-7793-4a8c-92c2-bd501ca63be1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "33f158dd-fc9f-48a1-8d30-2455ff1f9a0e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"5611ccfa-7cd1-4694-8b15-ab1570d5bedb"],

Cell["A paragraph that describes your paclet in more detail.", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"83504400-d6dc-465d-90cf-af53b615932f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "701c5885-8152-4c8c-9de7-e17906bda10b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"709e000d-ab2b-4089-bffc-83103b7fb263"],

Cell["Additional information about the paclet.", "Notes",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"48c5ac78-f7be-4d8f-bc11-863f5ebc0557"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Primary Context",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PrimaryContext", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify the primary context of your paclet that users should load \
with ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Needs", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Needs", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Get", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Get", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to access the paclet's functionality. If your paclet is \
not meant to be loaded via a context, this section can be left blank. If \
specified, the primary context will also be displayed on the main web page \
for your paclet."}], "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPrimaryContext"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d38f6957-a849-47cb-b227-e90428043701"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PrimaryContext"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Primary Context", "PrimaryContext", "TemplateCellGroup"},
 CellID->945361513,ExpressionUUID->"843d5927-5909-4428-ba96-af1403bc7a0e"],

Cell["AntonAntonov`MonadicContextualClassification`", "Text",
 TaggingRules->{},
 CellID->1195400342,ExpressionUUID->"f58bd7be-1c6c-4901-8ef4-4206750edf84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c9b49ebd-6ea0-45af-9c26-db2591af6d58"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"673a7cd0-c0fe-458c-87ea-0b673a5dd2f2"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{"Refreshing" -> False, "Relative" -> True},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"3f8f2bc6-a421-49d4-bee2-976aaf57cbab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "befc8596-ec2f-455d-8728-00ff46163f5e"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"0cd6214a-0f86-4a5f-93d8-dc927a970d43"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c6f50a27-de91-49bc-b63f-2104b0b2e199"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"e322c663-89ec-47c9-b677-2dd72e2567e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[5]:=",
 CellID->996717066,ExpressionUUID->"8f252686-16bb-4c46-8df2-076a0394f213"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Needs", "[", "\"\<AntonAntonov`MonadicContextualClassification`\>\"", 
   "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.932379751343795*^9, 3.93237976549517*^9}},
 CellLabel->"In[6]:=",
 CellID->172764492,ExpressionUUID->"d5e21182-8766-49c4-a8f8-c1d134291e71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"d0bde7b3-6fd9-4ef1-8240-cda81d6ddfdf"],

Cell["Here is a dataset:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932375791097563*^9, 3.9323757943044443`*^9}, {
  3.93237590626537*^9, 3.9323759118996983`*^9}},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"e6efbab8-09c5-400f-97ed-26c7991b44bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsTitanic", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ExampleDataset\>\"", "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsTitanic", "\[LeftDoubleBracket]", 
  RowBox[{"100", ";;", "108", ";;", "2"}], 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]"}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.93237590321493*^9, 3.932376006548313*^9}},
 CellLabel->"In[7]:=",
 CellID->747542294,ExpressionUUID->"ec31e0e5-d941-48f2-a1e4-0fbcd3a2dfcd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "passenger class" -> "1st", "passenger age" -> 48., "passenger sex" -> 
        "female", "passenger survival" -> "survived"|>, <|
       "passenger class" -> "1st", "passenger age" -> 39., "passenger sex" -> 
        "male", "passenger survival" -> "died"|>, <|
       "passenger class" -> "1st", "passenger age" -> 38., "passenger sex" -> 
        "female", "passenger survival" -> "survived"|>, <|
       "passenger class" -> "1st", "passenger age" -> 36., "passenger sex" -> 
        "female", "passenger survival" -> "died"|>, <|
       "passenger class" -> "1st", "passenger age" -> Missing[], 
        "passenger sex" -> "female", "passenger survival" -> "survived"|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "passenger class"} -> 
        1, {All, "passenger age"} -> 1, {All, "passenger sex"} -> 
        1, {All, "passenger survival"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "passenger class" -> TypeSystem`PackageScope`AtomShape[31.5], 
            "passenger age" -> TypeSystem`PackageScope`AtomShape[60], 
            "passenger sex" -> TypeSystem`PackageScope`AtomShape[63.], 
            "passenger survival" -> TypeSystem`PackageScope`AtomShape[84.]|>], 
          DirectedInfinity[1], 4, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "passenger class", "passenger age", "passenger sex", 
         "passenger survival"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["died", "survived"]]}], 5], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "passenger class"} -> 
        1, {All, "passenger age"} -> 1, {All, "passenger sex"} -> 
        1, {All, "passenger survival"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "passenger class" -> TypeSystem`PackageScope`AtomShape[31.5], 
            "passenger age" -> TypeSystem`PackageScope`AtomShape[60], 
            "passenger sex" -> TypeSystem`PackageScope`AtomShape[63.], 
            "passenger survival" -> TypeSystem`PackageScope`AtomShape[84.]|>], 
          DirectedInfinity[1], 4, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "passenger class", "passenger age", "passenger sex", 
         "passenger survival"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["died", "survived"]]}], 5], "Path" -> {}, 
     "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     5, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger class", 
                  Style[
                  "passenger class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger class"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger age", 
                  Style[
                  "passenger age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger age"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger sex", 
                  Style[
                  "passenger sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger sex"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger survival", 
                  Style[
                  "passenger survival", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger survival"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger survival"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["survived", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["died", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["survived", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["died", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["survived", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{398.778, {77.42755126953125, 83.15948486328125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{398.778, {77.42755126953125, 83.15948486328125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.932375801253854*^9, 3.932375889559682*^9, {3.932375922998856*^9, 
   3.932376006981201*^9}, 3.932379563530409*^9, 3.932379723333009*^9, 
   3.932379771539789*^9},
 CellLabel->"Out[8]=",
 CellID->661902970,ExpressionUUID->"fe8324dc-5ceb-48f2-b90e-59f4f1aee785"]
}, Open  ]],

Cell["Here is a classification pipeline:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9323783809927053`*^9, 3.9323783928392887`*^9}},
 CellID->1464833755,ExpressionUUID->"4ebf4769-0802-454c-90d1-1259036c0fba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clObj", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClCon", "[", 
    RowBox[{"dsTitanic", ",", 
     RowBox[{"<|", "|>"}]}], "]"}], "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", 
   RowBox[{"ClConSplitData", "[", "0.75", "]"}], "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", "ClConEchoDataSummary", "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", 
   RowBox[{"ClConMakeClassifier", "[", "\"\<RandomForest\>\"", "]"}], 
   "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   RowBox[{"ClConClassifierMeasurements", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Accuracy\>\"", ",", "\"\<Precision\>\"", ",", "\"\<Recall\>\""}], 
     "}"}], "]"}], "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   "ClConEchoValue", "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   "ClConROCPlot"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932379541595956*^9, 3.93237954200073*^9}},
 CellLabel->"In[9]:=",
 CellID->1500016384,ExpressionUUID->"9d7895d3-76ac-4c7c-afa3-7c23eafd8788"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"summaries:\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"trainingData\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 passenger class\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"3rd\"\>", "533"},
              {"\<\"1st\"\>", "248"},
              {"\<\"2nd\"\>", "200"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 passenger age\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", "0.1667`"},
              {"\<\"1st Qu\"\>", "20.625`"},
              {"\<\"Median\"\>", "28.`"},
              {"\<\"Mean\"\>", "29.718919524405507`"},
              {"\<\"3rd Qu\"\>", "39.`"},
              {"\<\"Max\"\>", "80.`"},
              {"\<\"Missing[___]\"\>", "182"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 passenger sex\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"male\"\>", "634"},
              {"\<\"female\"\>", "347"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"4 passenger survival\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"died\"\>", "606"},
              {"\<\"survived\"\>", "375"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}], ",", 
    RowBox[{"\<\"testData\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 passenger class\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"3rd\"\>", "176"},
              {"\<\"2nd\"\>", "77"},
              {"\<\"1st\"\>", "75"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 passenger age\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", "0.75`"},
              {"\<\"1st Qu\"\>", "22.`"},
              {"\<\"Median\"\>", "28.5`"},
              {"\<\"Mean\"\>", "30.405870445344128`"},
              {"\<\"3rd Qu\"\>", "38.`"},
              {"\<\"Max\"\>", "76.`"},
              {"\<\"Missing[___]\"\>", "81"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 passenger sex\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"male\"\>", "209"},
              {"\<\"female\"\>", "119"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"4 passenger survival\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"died\"\>", "203"},
              {"\<\"survived\"\>", "125"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}]}], "}"}]}]], "Echo",
 TaggingRules->{},
 CellChangeTimes->{3.932379772916315*^9},
 CellID->1951417128,ExpressionUUID->"4f52e114-eba7-46a9-b6b8-01bc9e704492"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.805668016194332`"}], ",", 
    RowBox[{"\<\"Precision\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"died\"\>", "\[Rule]", "0.7705882352941177`"}], ",", 
       RowBox[{"\<\"survived\"\>", "\[Rule]", "0.8831168831168831`"}]}], 
      "\[RightAssociation]"}]}], ",", 
    RowBox[{"\<\"Recall\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"died\"\>", "\[Rule]", "0.9357142857142857`"}], ",", 
       RowBox[{"\<\"survived\"\>", "\[Rule]", "0.6355140186915886`"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]], "Echo",
 TaggingRules->{},
 CellChangeTimes->{3.932379774299178*^9},
 CellID->1097413312,ExpressionUUID->"9d51cad9-6433-4b7e-a73e-78c9f6bb0c8e"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"ROC plot(s):\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"died\"\>", "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           Rational[67, 107], Rational[69, 70]}, {
           Rational[50, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[45, 107], Rational[137, 140]}, {
           Rational[42, 107], Rational[33, 35]}, {
           Rational[39, 107], Rational[33, 35]}, {
           Rational[39, 107], Rational[131, 140]}, {
           Rational[35, 107], Rational[32, 35]}, {
           Rational[33, 107], Rational[127, 140]}, {
           Rational[31, 107], Rational[9, 10]}, {
           Rational[31, 107], Rational[31, 35]}, {
           Rational[29, 107], Rational[17, 20]}, {
           Rational[29, 107], Rational[59, 70]}, {
           Rational[27, 107], Rational[29, 35]}, {
           Rational[27, 107], Rational[23, 28]}, {
           Rational[25, 107], Rational[111, 140]}, {
           Rational[19, 107], Rational[107, 140]}, {
           Rational[15, 107], Rational[97, 140]}, {
           Rational[9, 107], Rational[51, 140]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           0.6261682242990654, 0.9857142857142858}, {0.4672897196261682, 
           0.9785714285714285}, {0.45794392523364486`, 0.9785714285714285}, {
           0.45794392523364486`, 0.9785714285714285}, {0.45794392523364486`, 
           0.9785714285714285}, {0.45794392523364486`, 0.9785714285714285}, {
           0.4205607476635514, 0.9785714285714285}, {0.3925233644859813, 
           0.9428571428571428}, {0.3644859813084112, 0.9428571428571428}, {
           0.3644859813084112, 0.9357142857142857}, {0.32710280373831774`, 
           0.9142857142857143}, {0.308411214953271, 0.9071428571428571}, {
           0.2897196261682243, 0.9}, {0.2897196261682243, 
           0.8857142857142857}, {0.27102803738317754`, 0.85}, {
           0.27102803738317754`, 0.8428571428571429}, {0.2523364485981308, 
           0.8285714285714286}, {0.2523364485981308, 0.8214285714285714}, {
           0.2336448598130841, 0.7928571428571428}, {0.17757009345794392`, 
           0.7642857142857142}, {0.14018691588785046`, 0.6928571428571428}, {
           0.08411214953271028, 0.36428571428571427`}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           Rational[67, 107], Rational[69, 70]}, {
           Rational[50, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[49, 107], Rational[137, 140]}, {
           Rational[45, 107], Rational[137, 140]}, {
           Rational[42, 107], Rational[33, 35]}, {
           Rational[39, 107], Rational[33, 35]}, {
           Rational[39, 107], Rational[131, 140]}, {
           Rational[35, 107], Rational[32, 35]}, {
           Rational[33, 107], Rational[127, 140]}, {
           Rational[31, 107], Rational[9, 10]}, {
           Rational[31, 107], Rational[31, 35]}, {
           Rational[29, 107], Rational[17, 20]}, {
           Rational[29, 107], Rational[59, 70]}, {
           Rational[27, 107], Rational[29, 35]}, {
           Rational[27, 107], Rational[23, 28]}, {
           Rational[25, 107], Rational[111, 140]}, {
           Rational[19, 107], Rational[107, 140]}, {
           Rational[15, 107], Rational[97, 140]}, {
           Rational[9, 107], Rational[51, 140]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           0.6261682242990654, 0.9857142857142858}, {0.4672897196261682, 
           0.9785714285714285}, {0.45794392523364486`, 0.9785714285714285}, {
           0.45794392523364486`, 0.9785714285714285}, {0.45794392523364486`, 
           0.9785714285714285}, {0.45794392523364486`, 0.9785714285714285}, {
           0.4205607476635514, 0.9785714285714285}, {0.3925233644859813, 
           0.9428571428571428}, {0.3644859813084112, 0.9428571428571428}, {
           0.3644859813084112, 0.9357142857142857}, {0.32710280373831774`, 
           0.9142857142857143}, {0.308411214953271, 0.9071428571428571}, {
           0.2897196261682243, 0.9}, {0.2897196261682243, 
           0.8857142857142857}, {0.27102803738317754`, 0.85}, {
           0.27102803738317754`, 0.8428571428571429}, {0.2523364485981308, 
           0.8285714285714286}, {0.2523364485981308, 0.8214285714285714}, {
           0.2336448598130841, 0.7928571428571428}, {0.17757009345794392`, 
           0.7642857142857142}, {0.14018691588785046`, 0.6928571428571428}, {
           0.08411214953271028, 0.36428571428571427`}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[67, 107], Rational[69, 70]}, {0.6261682242990654,
              0.9857142857142858}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[50, 107], Rational[137, 140]}, {
             0.4672897196261682, 0.9785714285714285}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[49, 107], Rational[137, 140]}, {
             0.45794392523364486`, 0.9785714285714285}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[49, 107], Rational[137, 140]}, {
             0.45794392523364486`, 0.9785714285714285}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[49, 107], Rational[137, 140]}, {
             0.45794392523364486`, 0.9785714285714285}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[49, 107], Rational[137, 140]}, {
             0.45794392523364486`, 0.9785714285714285}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[45, 107], Rational[137, 140]}, {
             0.4205607476635514, 0.9785714285714285}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[42, 107], Rational[33, 35]}, {0.3925233644859813,
              0.9428571428571428}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[39, 107], Rational[33, 35]}, {0.3644859813084112,
              0.9428571428571428}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[39, 107], Rational[131, 140]}, {
             0.3644859813084112, 0.9357142857142857}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[35, 107], Rational[32, 35]}, {
             0.32710280373831774`, 0.9142857142857143}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[33, 107], Rational[127, 140]}, {
             0.308411214953271, 0.9071428571428571}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[31, 107], Rational[9, 10]}, {0.2897196261682243, 
             0.9}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[31, 107], Rational[31, 35]}, {0.2897196261682243,
              0.8857142857142857}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[29, 107], Rational[17, 20]}, {
             0.27102803738317754`, 0.85}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[29, 107], Rational[59, 70]}, {
             0.27102803738317754`, 0.8428571428571429}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[27, 107], Rational[29, 35]}, {0.2523364485981308,
              0.8285714285714286}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[27, 107], Rational[23, 28]}, {0.2523364485981308,
              0.8214285714285714}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[25, 107], Rational[111, 140]}, {
             0.2336448598130841, 0.7928571428571428}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[19, 107], Rational[107, 140]}, {
             0.17757009345794392`, 0.7642857142857142}]],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[15, 107], Rational[97, 140]}, {
             0.14018691588785046`, 0.6928571428571428}]],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[9, 107], Rational[51, 140]}, {
             0.08411214953271028, 0.36428571428571427`}]],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], 
         InsetBox["0.`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.025`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.05`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.07500000000000001`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.1`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.125`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.15000000000000002`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.17500000000000002`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.2`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.225`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.25`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.275`", 
          NCache[{Rational[67, 107], Rational[69, 70]}, {0.6261682242990654, 
           0.9857142857142858}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[50, 107], Rational[137, 140]}, {0.4672897196261682,
            0.9785714285714285}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.325`", 
          NCache[{Rational[49, 107], Rational[137, 140]}, {
           0.45794392523364486`, 0.9785714285714285}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[49, 107], Rational[137, 140]}, {
           0.45794392523364486`, 0.9785714285714285}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.375`", 
          NCache[{Rational[49, 107], Rational[137, 140]}, {
           0.45794392523364486`, 0.9785714285714285}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.4`", 
          NCache[{Rational[49, 107], Rational[137, 140]}, {
           0.45794392523364486`, 0.9785714285714285}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[45, 107], Rational[137, 140]}, {0.4205607476635514,
            0.9785714285714285}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.45`", 
          NCache[{Rational[42, 107], Rational[33, 35]}, {0.3925233644859813, 
           0.9428571428571428}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[39, 107], Rational[33, 35]}, {0.3644859813084112, 
           0.9428571428571428}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.5`", 
          NCache[{Rational[39, 107], Rational[131, 140]}, {0.3644859813084112,
            0.9357142857142857}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.525`", 
          NCache[{Rational[35, 107], Rational[32, 35]}, {0.32710280373831774`,
            0.9142857142857143}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.55`", 
          NCache[{Rational[33, 107], Rational[127, 140]}, {0.308411214953271, 
           0.9071428571428571}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[31, 107], Rational[9, 10]}, {0.2897196261682243, 
           0.9}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[31, 107], Rational[31, 35]}, {0.2897196261682243, 
           0.8857142857142857}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.625`", 
          NCache[{Rational[29, 107], Rational[17, 20]}, {0.27102803738317754`,
            0.85}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.65`", 
          NCache[{Rational[29, 107], Rational[59, 70]}, {0.27102803738317754`,
            0.8428571428571429}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.675`", 
          NCache[{Rational[27, 107], Rational[29, 35]}, {0.2523364485981308, 
           0.8285714285714286}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.7000000000000001`", 
          NCache[{Rational[27, 107], Rational[23, 28]}, {0.2523364485981308, 
           0.8214285714285714}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.7250000000000001`", 
          NCache[{Rational[25, 107], Rational[111, 140]}, {0.2336448598130841,
            0.7928571428571428}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.75`", 
          NCache[{Rational[19, 107], Rational[107, 140]}, {
           0.17757009345794392`, 0.7642857142857142}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.775`", 
          NCache[{Rational[15, 107], Rational[97, 140]}, {
           0.14018691588785046`, 0.6928571428571428}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.8`", 
          NCache[{Rational[9, 107], Rational[51, 140]}, {0.08411214953271028, 
           0.36428571428571427`}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.8250000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.8500000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.875`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.9`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.925`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.9500000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.9750000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["1.`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Small]}], ",", 
    RowBox[{"\<\"survived\"\>", "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {Rational[89, 140], Rational[98, 107]}, {
           Rational[43, 140], Rational[92, 107]}, {
           Rational[33, 140], Rational[88, 107]}, {
           Rational[29, 140], Rational[82, 107]}, {
           Rational[5, 28], Rational[80, 107]}, {
           Rational[6, 35], Rational[80, 107]}, {
           Rational[11, 70], Rational[78, 107]}, {
           Rational[3, 20], Rational[78, 107]}, {
           Rational[4, 35], Rational[76, 107]}, {
           Rational[1, 10], Rational[76, 107]}, {
           Rational[13, 140], Rational[74, 107]}, {
           Rational[3, 35], Rational[72, 107]}, {
           Rational[9, 140], Rational[68, 107]}, {
           Rational[2, 35], Rational[68, 107]}, {
           Rational[2, 35], Rational[65, 107]}, {
           Rational[3, 140], Rational[62, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[57, 107]}, {
           Rational[1, 70], Rational[40, 107]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           0.6357142857142857, 0.9158878504672897}, {0.30714285714285716`, 
           0.8598130841121495}, {0.2357142857142857, 0.822429906542056}, {
           0.20714285714285716`, 0.7663551401869159}, {0.17857142857142858`, 
           0.7476635514018691}, {0.17142857142857143`, 0.7476635514018691}, {
           0.15714285714285714`, 0.7289719626168224}, {0.15, 
           0.7289719626168224}, {0.11428571428571428`, 0.7102803738317757}, {
           0.1, 0.7102803738317757}, {0.09285714285714286, 
           0.6915887850467289}, {0.08571428571428572, 0.6728971962616822}, {
           0.06428571428571428, 0.6355140186915887}, {0.05714285714285714, 
           0.6355140186915887}, {0.05714285714285714, 0.6074766355140186}, {
           0.02142857142857143, 0.5794392523364486}, {0.02142857142857143, 
           0.5420560747663551}, {0.02142857142857143, 0.5420560747663551}, {
           0.02142857142857143, 0.5420560747663551}, {0.02142857142857143, 
           0.5420560747663551}, {0.02142857142857143, 0.5327102803738317}, {
           0.014285714285714285`, 0.37383177570093457`}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {Rational[89, 140], Rational[98, 107]}, {
           Rational[43, 140], Rational[92, 107]}, {
           Rational[33, 140], Rational[88, 107]}, {
           Rational[29, 140], Rational[82, 107]}, {
           Rational[5, 28], Rational[80, 107]}, {
           Rational[6, 35], Rational[80, 107]}, {
           Rational[11, 70], Rational[78, 107]}, {
           Rational[3, 20], Rational[78, 107]}, {
           Rational[4, 35], Rational[76, 107]}, {
           Rational[1, 10], Rational[76, 107]}, {
           Rational[13, 140], Rational[74, 107]}, {
           Rational[3, 35], Rational[72, 107]}, {
           Rational[9, 140], Rational[68, 107]}, {
           Rational[2, 35], Rational[68, 107]}, {
           Rational[2, 35], Rational[65, 107]}, {
           Rational[3, 140], Rational[62, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[58, 107]}, {
           Rational[3, 140], Rational[57, 107]}, {
           Rational[1, 70], Rational[40, 107]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 
           1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           0.6357142857142857, 0.9158878504672897}, {0.30714285714285716`, 
           0.8598130841121495}, {0.2357142857142857, 0.822429906542056}, {
           0.20714285714285716`, 0.7663551401869159}, {0.17857142857142858`, 
           0.7476635514018691}, {0.17142857142857143`, 0.7476635514018691}, {
           0.15714285714285714`, 0.7289719626168224}, {0.15, 
           0.7289719626168224}, {0.11428571428571428`, 0.7102803738317757}, {
           0.1, 0.7102803738317757}, {0.09285714285714286, 
           0.6915887850467289}, {0.08571428571428572, 0.6728971962616822}, {
           0.06428571428571428, 0.6355140186915887}, {0.05714285714285714, 
           0.6355140186915887}, {0.05714285714285714, 0.6074766355140186}, {
           0.02142857142857143, 0.5794392523364486}, {0.02142857142857143, 
           0.5420560747663551}, {0.02142857142857143, 0.5420560747663551}, {
           0.02142857142857143, 0.5420560747663551}, {0.02142857142857143, 
           0.5420560747663551}, {0.02142857142857143, 0.5327102803738317}, {
           0.014285714285714285`, 0.37383177570093457`}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[89, 140], Rational[98, 107]}, {
             0.6357142857142857, 0.9158878504672897}]],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[43, 140], Rational[92, 107]}, {
             0.30714285714285716`, 0.8598130841121495}]],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[33, 140], Rational[88, 107]}, {
             0.2357142857142857, 0.822429906542056}]],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[29, 140], Rational[82, 107]}, {
             0.20714285714285716`, 0.7663551401869159}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 28], Rational[80, 107]}, {
             0.17857142857142858`, 0.7476635514018691}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[6, 35], Rational[80, 107]}, {
             0.17142857142857143`, 0.7476635514018691}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 70], Rational[78, 107]}, {
             0.15714285714285714`, 0.7289719626168224}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 20], Rational[78, 107]}, {0.15, 
             0.7289719626168224}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 35], Rational[76, 107]}, {
             0.11428571428571428`, 0.7102803738317757}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 10], Rational[76, 107]}, {0.1, 
             0.7102803738317757}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[13, 140], Rational[74, 107]}, {
             0.09285714285714286, 0.6915887850467289}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 35], Rational[72, 107]}, {0.08571428571428572,
              0.6728971962616822}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[9, 140], Rational[68, 107]}, {
             0.06428571428571428, 0.6355140186915887}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 35], Rational[68, 107]}, {0.05714285714285714,
              0.6355140186915887}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 35], Rational[65, 107]}, {0.05714285714285714,
              0.6074766355140186}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 140], Rational[62, 107]}, {
             0.02142857142857143, 0.5794392523364486}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 140], Rational[58, 107]}, {
             0.02142857142857143, 0.5420560747663551}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 140], Rational[58, 107]}, {
             0.02142857142857143, 0.5420560747663551}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 140], Rational[58, 107]}, {
             0.02142857142857143, 0.5420560747663551}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 140], Rational[58, 107]}, {
             0.02142857142857143, 0.5420560747663551}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 140], Rational[57, 107]}, {
             0.02142857142857143, 0.5327102803738317}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 70], Rational[40, 107]}, {
             0.014285714285714285`, 0.37383177570093457`}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], 
         InsetBox["0.`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.025`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.05`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.07500000000000001`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.1`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.125`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.15000000000000002`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.17500000000000002`", {1, 1}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.2`", 
          NCache[{Rational[89, 140], Rational[98, 107]}, {0.6357142857142857, 
           0.9158878504672897}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.225`", 
          NCache[{Rational[43, 140], Rational[92, 107]}, {
           0.30714285714285716`, 0.8598130841121495}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.25`", 
          NCache[{Rational[33, 140], Rational[88, 107]}, {0.2357142857142857, 
           0.822429906542056}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.275`", 
          NCache[{Rational[29, 140], Rational[82, 107]}, {
           0.20714285714285716`, 0.7663551401869159}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[5, 28], Rational[80, 107]}, {0.17857142857142858`, 
           0.7476635514018691}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.325`", 
          NCache[{Rational[6, 35], Rational[80, 107]}, {0.17142857142857143`, 
           0.7476635514018691}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[11, 70], Rational[78, 107]}, {0.15714285714285714`,
            0.7289719626168224}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.375`", 
          NCache[{Rational[3, 20], Rational[78, 107]}, {0.15, 
           0.7289719626168224}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.4`", 
          NCache[{Rational[4, 35], Rational[76, 107]}, {0.11428571428571428`, 
           0.7102803738317757}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[1, 10], Rational[76, 107]}, {0.1, 
           0.7102803738317757}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.45`", 
          NCache[{Rational[13, 140], Rational[74, 107]}, {0.09285714285714286,
            0.6915887850467289}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[3, 35], Rational[72, 107]}, {0.08571428571428572, 
           0.6728971962616822}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.5`", 
          NCache[{Rational[9, 140], Rational[68, 107]}, {0.06428571428571428, 
           0.6355140186915887}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.525`", 
          NCache[{Rational[2, 35], Rational[68, 107]}, {0.05714285714285714, 
           0.6355140186915887}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.55`", 
          NCache[{Rational[2, 35], Rational[65, 107]}, {0.05714285714285714, 
           0.6074766355140186}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[3, 140], Rational[62, 107]}, {0.02142857142857143, 
           0.5794392523364486}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[3, 140], Rational[58, 107]}, {0.02142857142857143, 
           0.5420560747663551}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.625`", 
          NCache[{Rational[3, 140], Rational[58, 107]}, {0.02142857142857143, 
           0.5420560747663551}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.65`", 
          NCache[{Rational[3, 140], Rational[58, 107]}, {0.02142857142857143, 
           0.5420560747663551}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.675`", 
          NCache[{Rational[3, 140], Rational[58, 107]}, {0.02142857142857143, 
           0.5420560747663551}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.7000000000000001`", 
          NCache[{Rational[3, 140], Rational[57, 107]}, {0.02142857142857143, 
           0.5327102803738317}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.7250000000000001`", 
          NCache[{Rational[1, 70], Rational[40, 107]}, {0.014285714285714285`,
            0.37383177570093457`}], NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.75`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.775`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.8`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.8250000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.8500000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.875`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.9`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.925`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.9500000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["0.9750000000000001`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
         InsetBox["1.`", {0, 0}, NCache[
          ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Small]}]}], "\[RightAssociation]"}]}]], "Echo",
 TaggingRules->{},
 CellChangeTimes->{3.932379774497602*^9},
 CellID->1635974348,ExpressionUUID->"8d66d846-868a-40f6-9d08-71b9ec843aed"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClCon", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Training data dimensions: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"981", ",", "4"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Test data dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"328", ",", "4"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ClassifierFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Numerical\"", ",", 
                    "\"Nominal\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Numerical\"", ",", 
                    "\"Nominal\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["799", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    ClassifierFunction[<|
                    "ExampleNumber" -> 799, "ClassNumber" -> 2, 
                    "Input" -> <|
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                    MachineLearning`MLProcessor[
                    "Transpose", <|"FeatureNumber" -> 3|>], 
                    MachineLearning`MLProcessor[
                    "WrapMLDataset", <|
                    "FeatureTypes" -> {"Nominal", "Numerical", "Nominal"}, 
                    "FeatureKeys" -> {"f1", "f2", "f3"}, "FeatureWeights" -> 
                    Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "SynthesizeMissingValues", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Distribution" -> LearnedDistribution[<|
                    "ExampleNumber" -> 799, "Preprocessor" -> 
                    MachineLearning`MLProcessor[
                    "ToMLDataset", <|"Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 
                    1|>, "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Processor" -> MachineLearning`MLProcessor[
                    "Sequence", <|"Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Processors" -> {
                    MachineLearning`MLProcessor[
                    "Threads", <|"Input" -> <|"f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>, "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "Numerical", "Weight" -> 
                    1|>|>, "Output" -> <|"f2" -> <|"Type" -> 
                    "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 9153322266525338993|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 
                    1|>, "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"(f1f3)" -> <|"Type" -> "NominalVector", 
                    "Weight" -> 2|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    5012684870820858898|>]}, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                    
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"(f1f3)" -> <|"Type" -> "NominalVector", 
                    "Weight" -> 2|>|>, "Index" -> {<|
                    "1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                    "female" -> 1, "male" -> 2|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {14.1, 0}, "ID" -> 
                    8164567873087376931, "Output" -> <|
                    "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 
                    2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>|>, "Mean" -> {29.718919524405504`}, 
                    "StandardDeviation" -> {14.402406360492689`}, 
                    "Output" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    6281077921715581987|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"(f1f3)" -> <|"Type" -> "NominalVector", 
                    "Weight" -> 2, "SetSize" -> {3, 2}|>|>, 
                    "Boundaries" -> {{-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, 0., 0.5}}, 
                    "Version" -> {14.1, 0}, "ID" -> 4040756577587028706, 
                    "Output" -> <|"(f1f3)" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>, "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 3]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Version" -> {14.1, 0}, "ID" -> 4097015177937765665|>]}, 
                    "Invertibility" -> "Approximate", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                    "DirectTraining", "BatchProcessing" -> Automatic, 
                    "Model" -> <|"RotationMatrix" -> {{0.9917148502644403, 
                    0.06287175632235532, -0.11202141769287435`}, \
{-0.1265692971241128, 0.6272548181519941, -0.7684605429887839}, {
                    0.02195150998193674, 0.7762722044244861, 
                    0.6300155520679327}}, 
                    "Precisions" -> {0.9850275205555219, 11.288426462438553`, 
                    15.75545975647324}, "NoisePrecision" -> None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {0.00008586486707616926, 0.06811884470934519, 
                    0.06540693307032462}, "Output" -> <|
                    "(f2(f1f3))" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    3.|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    3182052616854362584|>], "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|"Info" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>, "Key" -> 
                    "(f2(f1f3))", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|"CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 3, "Options" -> <||>|>|>|>, 
                    "TrainingInformation" -> <|
                    "Configurations" -> Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|"CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> MachineLearning`MLProcessor[
                    "ImputeMissing", <|"Invertibility" -> "Perfect", 
                    "Missing" -> "Imputed", "StructurePreserving" -> True, 
                    "Input" -> <|"(f2(f1f3))" -> <|"Type" -> 
                    "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {0.00008586486707621846, 0.06811884470934527, 
                    0.06540693307032454}, "StandardDeviation" -> {
                    0.9997970904899977, 0.2976550432233476, 
                    0.28118264988309083`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 3, "Output" -> <|
                    "(f2(f1f3))" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    3.|>|>, "Type" -> "NumericalVector", 
                    "Version" -> {14.1, 0}, "ID" -> 8708448484904811398|>], 
                    "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{"Value", "Options", "NaiveImputer", 
                    "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|"Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                    "NaiveImputer" -> MachineLearning`MLProcessor[
                    "ImputeMissing", <|"Invertibility" -> "Perfect", 
                    "Missing" -> "Imputed", "StructurePreserving" -> True, 
                    "Input" -> <|"(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {0.00008586486707621846, 0.06811884470934527, 
                    0.06540693307032454}, 
                    "StandardDeviation" -> {0.9997970904899977, 
                    0.2976550432233476, 0.28118264988309083`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14.1, 0}, "ID" -> 
                    8708448484904811398|>], "InputDimension" -> 0, 
                    "OutputDimension" -> 3, 
                    "Log" -> <|"Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"1st"}, "ID" -> 1661388309095108015|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {16.}, "ID" -> 2537690409849976938|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"female"}, "ID" -> 2384008819527855069|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.090449, "MaxTrainingMemory" -> 
                    5907640, "DataMemory" -> 92064, "FunctionMemory" -> 63480,
                     "LanguageVersion" -> {14.1, 0}, "Date" -> 
                    DateObject[{2024, 8, 11, 11, 42, 
                    53.81001`8.483438047459408}, "Instant", "Gregorian", -4.],
                     "ProcessorCount" -> 10, "ProcessorType" -> "ARM64", 
                    "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}|>, "LogPDFDistribution" -> 
                    MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-2.601638468457201, -2.601638468457201, \
-1.9667307567073824`, -1.925931285270367, -1.9159736592477377`, \
-1.8760935867091197`, -1.8709836158591366`, -1.8634431065601027`, \
-1.8597421996114394`, -1.8547668397968364`, -1.622650228341949}, 
                    "LeftBoundary" -> -1.9667307567073824`, "LeftScale" -> 
                    0.31745385587490926`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                    Around[5.8073861239683815`, 0.23837020239606438`], 
                    "EntropySampleSize" -> 10|>], 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "EvaluationStrategy" -> "ModeFinding", 
                    "Version" -> {14.1, 0}, "ID" -> 616651398117295976|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|"Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 
                    2|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "Numerical", "Weight" -> 
                    1|>|>, "Output" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 5896072734193971629|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 
                    1|>, "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 4638787354345331223|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {29.718919524405504`}, 
                    "StandardDeviation" -> {14.402406360492689`}, 
                    "Output" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 7791071911106811572|>], 
                    MachineLearning`MLProcessor[
                    "EmbedNominalVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Index" -> {<|"1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                    "female" -> 1, "male" -> 2|>}, 
                    "Output" -> <|"(f1f3)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                    "EmbeddingVectors" -> {
                    RawArray["Real32",{{0., 0., 0.}, {
                    0.2617093026638031, -1.2387990951538086`, \
-0.9445381164550781}, {0.08440400660037994, 
                    0.4819034934043884, -0.3833095133304596}, \
{-0.7164707183837891, 0.8048402070999146, 0.06659186631441116}}], 
                    RawArray["Real32",{{0., 0.}, {-0.9347169995307922, 
                    0.36226585507392883`}, {-1.355437159538269, \
-0.7404462099075317}}]}, "Version" -> {14.1, 0}, "ID" -> 
                    5988483279055413579|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|"Weight" -> 2, "Type" -> 
                    "NumericalVector"|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 6]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    7619735631186802745|>]}, "Invertibility" -> "Impossible", 
                    "StructurePreserving" -> True, "Missing" -> 
                    "Imputed"|>]|>, 
                    "Output" -> <|
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor[
                    "WrapMLDataset", <|
                    "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 1277826592583279905|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Index" -> {<|"died" -> 1, "survived" -> 2|>}, 
                    "MissingCode" -> 0, "Version" -> {14.1, 0}, "ID" -> 
                    2833981340056725226, 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "FromVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {2}|>|>, 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 6294800060345789738|>], 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 
                    2|>, "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>]}, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "ProbabilityPostprocessor" -> Identity, "Name" -> 
                    "class", 
                    "Marginal" -> <|
                    "died" -> 0.599250936329588, "survived" -> 
                    0.40074906367041196`|>|>, "LabelSplitter" -> 
                    MachineLearning`MLProcessor[
                    "FeatureLabelSplit", <|
                    "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
                    "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
                    "RecalibrationFunction" -> None, "ImputationStrategy" -> 
                    Automatic, "Prior" -> Automatic, "Utility" -> 
                    SparseArray[
                    Automatic, {2, 3}, 0., {
                    1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], "Threshold" -> 0, 
                    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
                    Automatic, "BatchProcessing" -> Automatic, 
                    "Model" -> <|"Trees" -> {
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 1, 3, 4, 1, 1, 1, 1, 1, 3, 3, 
                    2, 4, 3, 2, 1, 2, 4, 2, 2, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, 
                    0.48190261919988764`, 0.5403582933002324, 
                    0.4819028041602005, -0.9445385161162694, 
                    1.7271902290011028`, 
                    0.22223185914743815`, -0.14851843814472865`, 
                    1.2707222148711477`, -1.5761603461802345`, 
                    0.8048404957884818, 0.4819028701865009, 
                    0.08440499194527107, 0.06659244238350315, 
                    0.8048400776018605, 0.08440325791707604, 
                    0.5450550209979799, 0.08440319017193709, 
                    0.0665922616037582, -0.7164702143780808, \
-0.7164701380713883, 0.784296667908154}, "Children" -> 
                    RawArray["Integer16",{{2, -10}, {3, 4}, {5, 6}, {-1, 
                    10}, {7, -11}, {9, -12}, {8, -13}, {-2, -14}, {-3, -15}, {
                    11, 12}, {-4, -16}, {-5, 13}, {14, -17}, {15, -18}, {16, 
                    17}, {18, -19}, {-6, 22}, {19, -20}, {20, -21}, {-7, 
                    21}, {-8, -22}, {-9, -23}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
                     2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 2, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 
                    3, 3, 4, 1, 4, 1, 3, 2, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901623298622, 
                    0.08440499276156221, 
                    0.08661456234785836, -1.5761603461802345`, \
-0.8146664053024129, 0.06659197463186539, 0.26170837233202304`, 
                    0.5110811202831282, 0.2955249313788162, 
                    3.17161541228724, -0.11813095011155161`, \
-0.39043231430471037`, 0.4819042690090245, 
                    0.8048403521031808, -0.3833103221097631, \
-0.15073473436532359`, -0.6639237694673055, 0.012717716763380044`, 
                    0.6433722791931649, 0.08440382951277292, 
                    0.576137139951479, 0.8857577116828903}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {13, 14}, {
                    6, -11}, {-1, 7}, {-2, -12}, {-3, 8}, {9, 10}, {
                    11, -13}, {-4, -14}, {12, -15}, {-5, -16}, {15, 16}, {
                    20, -17}, {17, -18}, {-6, 18}, {-7, -19}, {
                    19, -20}, {-8, -21}, {21, -22}, {-9, 22}, {-10, -23}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 2, 2, 2, 2,
                     1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 4, 1, 4, 4, 1, 1, 2, 1, 4, 1, 
                    1, 6, 1, 2, 1, 6, 4, 3, 1, 3, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452286253411, \
-1.2387981086152688`, 
                    0.06659104317137932, -1.4018508603975857`, \
-0.15835891021833803`, 
                    0.06659099051446427, -1.4325834603896546`, \
-1.7827601048266892`, 
                    0.08440499276156221, -0.6776967164768282, \
-0.3833101093912381, 0.3630665666961099, -0.6665338051302081, 
                    0.3622668309738102, -0.22269162884185034`, \
-0.7164712506762649, 
                    2.0947570523638, -0.1890901678552448, \
-0.9445376554928391, -1.2388000440890874`, -1.2609990082675324`, \
-1.2387989890912365`, 1.37826530171}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {14, 15}, {5, 
                    6}, {-2, 7}, {9, 10}, {8, -14}, {-3, -15}, {11, 12}, {-4, 
                    13}, {-5, -16}, {-6, -17}, {-7, -18}, {
                    16, -19}, {-8, -20}, {-9, 17}, {18, 19}, {-10, 
                    20}, {-11, -21}, {21, 22}, {-12, -22}, {
                    23, -23}, {-13, -24}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 1, 1, 2, 2, 2, 1, 2,
                     1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 3, 3, 4, 1, 5, 1, 1, 3, 2, 2, 4, 
                    1, 3, 2, 4, 1, 2, 5, 5, 6, 1, 5, 5, 6, 1, 1, 2, 1, 5, 2, 
                    1, 1, 4, 1, 3, 1, 1, 4, 1, 4, 3, 3, 5}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAeKENZ7b62ZvtWfItet0OPjS3kDEgrXx+j37gM6bDsY8
G+01+KqaVZefsBcQag22Cfq0P6Pmqn3X8o/7TyjFC+7Y9G2/hcL9d3ZAfRoH
nzCGvH22X+LGngMgOqPXo00WqD+hVuFSj9/D/RwpTQUtQHMjck1fPba8sn8H
lwWzRseN/QsSfjJ2f/5gHyDzJycUqK/i3aes++u/7u/4VuAIoh98e7t318bn
+xv6GxvWFE+1X3Er8d5doPgM799yIPkP0/Kj4/Sv2184vnnhG/F7+yMOPfQv
X7XQXqPBkLsZ6C+Llp913aWP90/gCvADuf/C+vbTE4DiCTPY2MTmMzpEbNXv
/P//6/6ArKSHKy3f7Xc4s0vVP3erfcCfbb9lL33ef8NGTHe+6D37D//5VBsW
PrZvOKndvQyozmLSnPpNfYf3rzCdmbwCyD9QsOCHPFC9w8e55nVAf2r8lXMF
2QcAwfvAww==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {28, 29}, {6, 7}, {
                    22, -27}, {8, 9}, {-1, 19}, {10, 11}, {
                    16, -28}, {-2, -29}, {-3, 12}, {13, -30}, {14, -31}, {-4, 
                    15}, {-5, -32}, {-6, 17}, {18, -33}, {-7, -34}, {-8, 
                    20}, {-9, 21}, {-10, -35}, {23, 24}, {-11, 25}, {-12, 
                    27}, {26, -36}, {-13, -37}, {-14, -38}, {-15, 30}, {-16, 
                    44}, {31, 32}, {33, 34}, {40, -39}, {-17, -40}, {35, 
                    36}, {-18, 37}, {-19, 39}, {-20, 
                    38}, {-21, -41}, {-22, -42}, {41, -43}, {-23, 42}, {-24, 
                    43}, {-25, -44}, {-26, -45}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
                     1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
                    1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 1, 1, 3, 2, 1, 4, 3, 2, 4, 2, 2, 
                    4, 3, 3, 1, 3, 2, 4, 3, 2, 3}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, \
-1.7153847949014285`, -1.0428384712934875`, 0.8048394987076373, 
                    0.08440490388880761, -1.9934772225667725`, 
                    0.06659270480800084, 
                    0.8048405864813315, -0.7164715905333523, 
                    0.06659111526874073, -0.7164711755986488, 
                    0.08440392085528658, -0.6639238482297092, 
                    0.8048406402197479, 
                    0.804839834168968, -1.9592931686934634`, 
                    0.8048396954688624, -0.7164712494807377, \
-0.9445378088230276, 0.48190344156753184`, -0.7164699041519542, 
                    0.8048404822541997}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {-1, 6}, {
                    7, -14}, {-2, -15}, {8, -16}, {9, -17}, {-3, 
                    10}, {-4, -18}, {-5, 13}, {18, 19}, {-6, 14}, {15, -19}, {
                    16, -20}, {-7, 17}, {-8, -21}, {-9, 20}, {-10, -22}, {-11,
                     21}, {-12, 22}, {-13, -23}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 1, 2, 1, 2,
                     2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 1, 1, 1, 2, 6, 4, 3, 3, 1, 1, 
                    1, 1, 1, 4, 1, 1, 6, 3, 6, 2, 1, 4, 1, 1, 3, 4, 4, 1, 2, 
                    4, 1, 1, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.9445372652198092, 
                    0.06565169184785269, -1.0192934839941046`, \
-1.2291302824899066`, -0.7164705197019448, -0.7404466636574432, 
                    0.06659281657808724, 0.48190285566882984`, 
                    0.8048404175998929, -0.6106964066935507, \
-0.7119644559011302, 0.09177810731503622, 
                    0.020707719449085005`, -0.7507498697537818, 
                    0.0665927120308134, 
                    0.9521145478256923, -0.25449003727991837`, \
-0.7404453656478447, 0.8048402986166749, -0.7404453292210773, 
                    0.08440335228845508, 0.3673462681692494, 
                    0.06659092964863844, -0.8814380513354418, \
-0.18878199588704114`, 
                    0.8048399030448055, -0.38331007116046, \
-0.15835900129873637`, 0.021238463337153318`, 
                    0.0844030980575955, -0.15835905502684944`, 
                    1.3451345488902273`, 
                    1.0616501002221774`, -0.9445383685788356}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {22, 
                    23}, {-1, -20}, {6, 7}, {-2, -21}, {8, 9}, {10, -22}, {15,
                     16}, {11, -23}, {12, 13}, {-3, -24}, {
                    14, -25}, {-4, -26}, {-5, 17}, {18, -27}, {-6, -28}, {19, 
                    20}, {-7, 21}, {-8, -29}, {-9, -30}, {24, -31}, {-10, 
                    31}, {25, 26}, {-11, 27}, {-12, 30}, {28, -32}, {-13, 
                    29}, {-14, -33}, {-15, -34}, {32, 33}, {-16, 34}, {-17, 
                    35}, {-18, -35}, {-19, -36}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 2, 1, 1, 1, 2, 2,
                     2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 
                    1, 2, 1, 2, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 2, 2, 1, 3, 1, 1, 2, 3, 2, 1, 4, 
                    3, 1, 6, 5, 6, 1, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452307497795, 
                    0.26170976235412535`, 0.08440335228845508, 
                    2.1089352469494678`, 0.80484086254702, 
                    2.2026787253153515`, -0.43251049263962127`, \
-0.7164712438439329, 0.4819035653421335, -0.7164706250073696, 
                    0.6050471434721567, -0.3833086150236018, \
-1.238799774863116, -1.3694228361675815`, 
                    0.3622668124318187, -0.9347162629135068, 
                    0.36226520192373624`, 
                    0.04841188520198886, -0.9445380372388783, \
-0.38330986355317753`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {5, 6}, {-2, -9}, {
                    7, -10}, {12, -11}, {8, 9}, {-3, -12}, {-4, 10}, {
                    11, -13}, {-5, -14}, {13, -15}, {14, 15}, {-6, -16}, {
                    16, -17}, {17, 18}, {19, -18}, {
                    20, -19}, {-7, -20}, {-8, -21}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 2, 1, 2,
                     1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 3, 2, 1, 1, 3, 4, 1, 4, 1, 4, 
                    1, 2, 4, 2, 4, 2, 2, 3, 1, 3, 1, 1, 1, 1, 2, 4, 2}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-0.9445375549766322, 
                    0.4819042622466623, -0.716471017631914, \
-1.4018508603975857`, -1.5015979765205163`, 
                    0.8048400822134578, -0.15835908943838928`, 
                    1.1264728322740432`, -0.6639238034608894, 
                    0.9546590372198276, 0.06659196031082437, 
                    0.47019164372282907`, 0.0844037958080549, 
                    0.0665914124925826, 0.08440307584557027, 
                    0.06659203155773397, 0.2617090355482148, 
                    0.2617089131431456, 
                    0.48190265072469574`, -0.2886746243696767, \
-1.23879974447744, -1.914893618042358, -0.4000361830596426, \
-0.6017901573826023, 0.12233019577325466`, -0.7164702950010886, 
                    0.0665909087338099, 0.08440366740067418}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {16, 17}, {-2, 
                    5}, {6, 7}, {8, -12}, {9, -13}, {-3, -14}, {10, -15}, {11,
                     12}, {13, -16}, {14, -17}, {-4, -18}, {
                    15, -19}, {-5, -20}, {-6, 18}, {23, -21}, {19, -22}, {
                    20, -23}, {21, -24}, {22, -25}, {-7, -26}, {-8, 24}, {25, 
                    26}, {27, -27}, {29, -28}, {-9, 
                    28}, {-10, -29}, {-11, -30}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 2, 1, 1, 2, 1, 2, 2,
                     1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 
                    2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 3, 3, 3, 4, 3, 1, 1, 2, 3, 5, 2, 
                    4, 4, 3, 2, 3, 1, 2, 2, 4, 4, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.3784478009287384, 0.481904292589614, 0.8048408719025781, 
                    0.06659246002639596, 
                    0.8048408680923389, -1.5071458300493727`, \
-1.9936274740575843`, 0.08440490388880761, 
                    0.8048395930387287, -1.3554369767901058`, 
                    0.08440327947148463, -0.3833093555255713, 
                    0.06659154000733525, 
                    0.8048396814525978, -0.7164702242656018, 
                    0.8048396099685293, 
                    2.2026787253153515`, -0.7164712339849144, 
                    0.26170894098705855`, 0.06659185341125362, 
                    0.06659113351083301, -1.1626909061865582`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {18, 19}, {
                    5, -10}, {6, -11}, {7, -12}, {8, 9}, {-2, 10}, {
                    11, -13}, {-3, -14}, {12, -15}, {13, -16}, {-4, 14}, {
                    15, -17}, {16, -18}, {-5, 17}, {-6, -19}, {20, -20}, {-7, 
                    21}, {-8, -21}, {22, -22}, {23, -23}, {-9, -24}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 2, 1, 1, 1, 2, 1, 1,
                     1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 2, 2, 4, 4, 4, 1, 4, 6, 4, 2, 6, 
                    4, 6, 1, 3, 2, 1, 3, 1, 1, 3, 3, 4, 2, 4}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, 
                    0.17305667026296945`, 0.08440308855260936, 
                    0.06659281657808724, 0.06659233637797202, 
                    0.06659225370668354, -1.5761603461802345`, 
                    0.06659197463186539, -0.7404458027817897, 
                    0.06659166996210486, -0.7164699907084904, \
-0.740445751390375, -0.38331022989100205`, 
                    0.36226607099708863`, -0.29377893225918905`, 
                    0.8048405867770416, 
                    0.26170894098705855`, -0.39721850370023315`, 
                    0.6433717837034774, 0.08661456234785836, 
                    0.36532894361318213`, -1.2388000433243906`, 
                    0.4819034278430361, -0.383309778357368, 
                    0.2617089131431456, -0.3833099033493994}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -10}, {16, 17}, {
                    5, -11}, {6, -12}, {7, -13}, {8, 9}, {10, -14}, {11, 
                    12}, {-1, -15}, {-2, -16}, {13, 14}, {-3, -17}, {
                    15, -18}, {-4, -19}, {18, -20}, {22, -21}, {19, 
                    20}, {-5, -22}, {-6, 21}, {-7, -23}, {-8, 23}, {
                    24, -24}, {25, -25}, {26, -26}, {-9, -27}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
                     2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 5, 1, 1, 4, 1, 3, 1, 3, 1, 4, 1, 
                    5, 5, 5, 4, 5, 2, 3, 1, 1, 1, 2, 3, 2, 1, 4, 2, 3, 3, 3, 
                    1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.48190341790763824`, -1.1450770691300658`, \
-1.4786207366998045`, -1.0567527928391591`, -0.944537844108277, 
                    3.17161541228724, -1.2387982175858578`, 
                    1.5506494076425934`, 
                    0.48190316218698914`, -0.3587598947674322, \
-0.38330940039232253`, 
                    1.1667866784522474`, -1.355436747429703, \
-0.9347179535501668, -0.9347175635994107, -0.15835927475169087`, \
-1.355437258378588, -0.7164710071012346, 
                    0.8048393398968043, -0.6826003252292221, \
-0.5041474435674429, 0.17749843614436145`, 0.0844048322376515, 
                    0.8048401167971653, 
                    0.0844040063792354, -0.4280752945813231, \
-0.383309809143598, -0.7164704545548712, 0.8048408718372899, 
                    0.8048395026772335, 
                    0.8048393333426995, -0.015020650494719193`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {13, 14}, {-1, 
                    6}, {-2, 11}, {7, -18}, {8, 9}, {-3, -19}, {
                    10, -20}, {-4, -21}, {-5, 12}, {-6, -22}, {-7, 15}, {17, 
                    18}, {-8, 16}, {-9, -23}, {19, 20}, {-10, 25}, {21, 
                    22}, {-11, 23}, {-12, -24}, {-13, -25}, {
                    24, -26}, {-14, -27}, {26, -28}, {27, 28}, {-15, 29}, {
                    32, -29}, {30, -30}, {31, -31}, {-16, -32}, {-17, -33}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 2, 2, 1, 2, 2, 2,
                     1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 
                    1, 2, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 5, 3, 4, 3, 3, 2, 1, 2, 1, 1, 1, 
                    1, 1, 2, 2, 2, 6, 6, 1, 1, 4, 5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440475076547038, -1.1450770781540704`, \
-1.2387997893253004`, 0.06659244238350315, 0.48190419933156337`, 
                    0.48190261919988764`, -0.7164702242656018, \
-1.8187402309462755`, -0.716470119449772, -0.6728661161292182, \
-0.1879192274545156, -0.29304359594838525`, 
                    0.08661456234785836, -0.39721850370023315`, \
-0.7164712339849144, -0.7164698851528657, -0.7164697853148434, 
                    0.362265773476782, -0.740445435393398, \
-0.2900327910791818, -0.15140446937597685`, -0.9445383700387238, \
-1.1450780105730765`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {18, 19}, {
                    6, -13}, {-1, 11}, {-2, 7}, {8, 9}, {-3, 
                    10}, {-4, -14}, {-5, -15}, {12, 13}, {
                    14, -16}, {-6, -17}, {15, -18}, {-7, 16}, {-8, 
                    17}, {-9, -19}, {20, -20}, {21, 
                    22}, {-10, -21}, {-11, -22}, {23, -23}, {-12, -24}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 1, 1, 1, 2, 1, 1,
                     2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 3, 1, 4, 1, 1, 5, 1, 4, 2, 1, 
                    1, 2, 4, 3, 4, 4, 2, 2, 4, 4, 1, 3, 1, 1, 3, 2, 4, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, \
-0.6639238034608894, 0.48190424871182413`, -1.0192934839941046`, 
                    0.06659269353470376, 
                    1.894388066259216, -1.7153847949014285`, \
-1.355437258378588, -0.5431718089802118, -0.3833095212246924, 
                    0.08440433517869839, -0.040070699294831036`, \
-0.5719541040836695, -0.716470850904579, 0.0665914936731179, 
                    0.8048402986166749, 0.06659191366372841, 
                    0.0665914427611044, -0.7164701692386766, 0.26170902991753,
                     0.06659180055610725, -0.38330938368866896`, 
                    1.7909219576953035`, 
                    0.4819036182726779, -0.1879192274545156, \
-0.12167430614032626`, 
                    0.8048408749755698, -0.7164701937817863, \
-0.1583590292731376, 0.08661456234785836}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {20, 21}, {-1, 6}, {
                    7, -15}, {-2, -16}, {-3, 8}, {9, 10}, {11, 12}, {-4, 
                    18}, {13, -17}, {-5, 16}, {14, -18}, {-6, 
                    15}, {-7, -19}, {17, -20}, {-8, -21}, {
                    19, -22}, {-9, -23}, {22, -24}, {25, 26}, {23, -25}, {
                    24, -26}, {-10, -27}, {27, -28}, {-11, 30}, {
                    28, -29}, {-12, 29}, {-13, -30}, {-14, -31}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 1, 2, 1, 1, 1, 2,
                     2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 
                    2, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 2, 2, 2, 4, 3, 3, 1, 1, 3, 1, 
                    1, 4, 4, 4, 1, 2, 2, 1, 3}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-1.6103043627385922`, -0.3160333560047319, -0.7164703348310608, 
                    0.0844048322376515, 
                    0.06659101985490201, -1.2387991510292942`, 
                    0.48190285566882984`, -0.3932291294918677, 
                    1.7918905584149165`, -1.238798978115037, 
                    1.3117204349090752`, -0.1581388451387331, \
-0.3833094789561864, -0.9445390705447174, -0.6639242964145025, \
-0.4648333309336259, 0.2617096780601522, 0.261709031979136, 
                    3.17161541228724, -1.2387988325697261`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 
                    5}, {-1, -10}, {-2, -11}, {6, 7}, {8, 9}, {10, 
                    11}, {-3, -12}, {-4, -13}, {12, -14}, {-5, 
                    13}, {-6, -15}, {14, 15}, {16, -16}, {-7, 18}, {
                    17, -17}, {-8, -18}, {19, -19}, {20, -20}, {
                    21, -21}, {-9, -22}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 1, 2, 1, 2, 2, 2, 2,
                     2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 5, 5, 1, 4, 4, 1, 4, 4, 3, 5, 1, 
                    4, 1, 3, 1, 1, 1, 4, 2, 1, 1, 3, 2, 4, 6, 1, 6, 5, 4, 4, 
                    1, 1, 1, 4, 2, 4, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQB+KM39ffN1y/Z7+DyTTUJujT/hn1b6aZvny7P8PJeKvn
n4/7L3w4kbvc8t3+gKykhyuBNEds/yye+r32AhZqp5YB+Q3c0qkWPBvtf2j7
fG4BmrPiqg7z/fVf9yvUpf3Zmnpvv8Mqo1PGQPmEgvWmHuv+7n+Qry/iePCl
fULGr8vtGg/3H9hdemNl4sP9P8TuVVpdubKfw5D7q2rHjf0TisQeBr19tj/i
muonF9kf+1fMs9n9a+af/QFdan4OQP0XmEMOguQzlK47iLse2b9iwvWGXRuf
76/QFpKz/fvYXuOdWyqIbzAvN/Ie0D0Sy1qMzYDu4Lgy5YUmkD5wZ/fh9qnP
9n8wuhozvf3m/hs2qz5FFv/eH3Hc/ocUUH7HL9X+qtlb7QUW9tyVBPJvlP/8
JwsSdypvAdEArEeqRA==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {9, 10}, {-1, 
                    6}, {-2, -22}, {7, 8}, {-3, -23}, {-4, -24}, {11, 
                    12}, {-5, 30}, {13, 14}, {-6, -25}, {15, 16}, {25, 26}, {
                    17, 18}, {-7, -26}, {19, 20}, {-8, -27}, {-9, 21}, {-10, 
                    24}, {22, 
                    23}, {-11, -28}, {-12, -29}, {-13, -30}, {-14, -31}, {27, 
                    28}, {-15, -32}, {-16, 29}, {-17, -33}, {31, 32}, {33, 
                    34}, {-18, -34}, {35, 36}, {-19, -35}, {37, -36}, {
                    38, -37}, {-20, -38}, {39, -39}, {-21, -40}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
                     1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 
                    1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 2, 4, 4, 4, 4, 1, 2, 3, 4, 1, 
                    1, 3, 1, 1, 1, 1, 5, 5, 1, 1, 3, 4, 4, 2, 2, 1, 1, 6, 1}],
                     "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440451346399702, -0.18909013564129928`, 
                    0.2617097469253693, 0.06659215413599306, 
                    0.0665908971683431, 0.0665918429166299, 
                    0.0665918335435941, -1.5761603461802345`, \
-0.7164702463034338, 0.48190261919988764`, 0.06659099051446427, 
                    1.651026519853481, -0.1879192274545156, 
                    0.4819042622466623, 
                    0.020773425834017173`, -1.2651155967275791`, \
-1.4384902395349215`, -0.7042541459950389, -1.1450770357399342`, \
-1.3554373860851072`, -0.8146664053024129, 
                    2.2006368537430276`, -1.2388000155813348`, \
-0.9445390535162597, -0.3833096886345171, 0.26170850893206055`, 
                    0.26170847596941504`, 2.133723490849647, 
                    0.29731181598444456`, -0.740445300141026, 
                    1.65457461522994}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {19, 20}, {
                    6, -16}, {12, 13}, {7, -17}, {8, -18}, {9, 
                    10}, {-1, -19}, {-2, 11}, {-3, -20}, {14, -21}, {
                    17, -22}, {15, 16}, {-4, -23}, {-5, -24}, {-6, 
                    18}, {-7, -25}, {21, 22}, {-8, 28}, {-9, 23}, {
                    26, -26}, {-10, 24}, {-11, 25}, {-12, -27}, {
                    27, -28}, {-13, -29}, {29, -30}, {-14, 30}, {
                    31, -31}, {-15, -32}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
                     2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 
                    1, 2, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 3, 3, 4, 4, 2, 1, 4, 3, 4, 1, 1, 
                    4, 1, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-1.1450770691300658`, 
                    0.48190285566882984`, 0.4819027706725376, 
                    0.0665926999694646, -0.3833101921762543, 
                    0.26170882210548685`, 
                    1.0870041445668157`, -0.9445383097872506, 
                    0.8048396073880157, 
                    0.0665919528570007, -1.4018508603975857`, \
-1.5439548912572842`, -0.38330952272742325`, -0.5408386329690238, 
                    0.08679171913262895, -0.6746621346699362}, "Children" -> 
                    RawArray["Integer16",{{2, -7}, {3, 4}, {5, -8}, {9, -9}, {
                    6, -10}, {7, -11}, {8, -12}, {-1, -13}, {10, 11}, {
                    12, -14}, {-2, 16}, {-3, 13}, {14, -15}, {-4, 
                    15}, {-5, -16}, {-6, -17}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 1, 1, 2, 2, 1, 1,
                     1, 1, 2, 1, 1, 1, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 5, 1, 2, 4, 3, 1, 1, 3, 1, 1, 
                    2, 2, 3, 2, 3, 4, 1, 4, 4, 1, 1, 2, 1, 4, 1, 1, 2, 3, 1, 
                    3, 3, 1, 2, 1, 4, 4, 3, 3, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQBOIdZzUn983eav+iLtNS2uTEfgG+GT42QZ/2X+h0fPnZ
/Od+g7wDrqVA+QXFvoYWPBvtOVKaClqu37O/obyMk/fye3sLY6fpKmwv9n8I
fTgbJL6gNaciiPHlfo3oe689ap/YN0THzAl5+2x/QdLLhiAg3eE2kcXh4Ev7
Hdd6nEHiE7SF19gD+T9M1qcpAs3XyDZZZ7Zor73EshZjMyB/xxK1faZA+sah
Qyszc27un+A1/X6q+qv9HazzJUKB+gM+Gm2rkV1jv6LJ8Ig+UJ1D4o0v1jKf
9ydM+qN56OCL/RYqzn0gdQqxXAzNQPcFfHqn9YDn4f4Ak5vrQPZq5ArtBLnn
gURXQwbPC/sMmf8/ruy/YJ8wg41NbD6jw4k2YT2Vjhv7JWaw8a60fLf/R+iu
f/KXPu/vaJDeA6I5pm5TXFp5aT8A58Om5w==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {35, 36}, {-1, 6}, {
                    20, -21}, {7, 8}, {9, 10}, {19, -22}, {11, -23}, {-2, 
                    12}, {-3, -24}, {13, 14}, {-4, 15}, {-5, -25}, {
                    16, -26}, {-6, 17}, {18, -27}, {-7, -28}, {-8, -29}, {21, 
                    22}, {23, -30}, {-9, -31}, {24, 25}, {-10, 26}, {28, 
                    29}, {27, -32}, {-11, -33}, {-12, 30}, {-13, 33}, {-14, 
                    31}, {-15, 32}, {-16, -34}, {34, -35}, {-17, -36}, {
                    37, -37}, {39, -38}, {38, -39}, {-18, -40}, {-19, 40}, {
                    41, -41}, {-20, -42}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 2, 1, 1, 1, 1,
                     2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 
                    2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2}], "RootIndex" -> 1,
                     "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 6, 2, 3, 1, 4, 1, 6, 3, 1, 1, 
                    1, 2, 1, 2, 2, 3, 3, 6, 5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.084404798983167, -0.1890901318453273, \
-0.740445307268998, -0.7164715905333523, 
                    0.48190261919988764`, -1.5761603461802345`, 
                    0.06659098419627696, -0.8146664053024129, 
                    0.36226520192373624`, -1.2387999370702687`, 
                    1.0230660440571935`, 1.055725206299666, 
                    0.3616612976808913, 
                    0.08440499276156221, -0.39043231430471037`, 
                    0.26170837233202304`, 
                    0.26170959887187273`, -1.2387997959085926`, \
-1.2387983722594775`, 0.3622650134604881, -1.145077898741306}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -12}, {8, 9}, {-1, 
                    5}, {-2, 6}, {-3, 7}, {-4, -13}, {-5, 10}, {17, 18}, {11, 
                    12}, {13, -14}, {14, -15}, {-6, -16}, {-7, 15}, {-8, 
                    16}, {-9, -17}, {19, -18}, {-10, -19}, {20, -20}, {
                    21, -21}, {-11, -22}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 2, 1, 2, 1, 1, 1, 2, 2,
                     1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 3, 4, 2, 1, 2, 1, 1, 2, 4, 2, 
                    1, 4, 1, 3, 3, 1, 4, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452286253411, \
-1.3440702023788447`, 0.8048393333426995, 0.06659166996210486, 
                    0.17305666339149228`, -1.9934772225667725`, \
-0.7164699716864735, 1.6545602934186228`, -0.6769070275065099, 
                    0.0844037958080549, 0.06659148664406789, 
                    0.08440311076463469, -0.8400222088051104, \
-0.38330960427103644`, -1.7177794638029802`, 
                    0.48190334162362625`, -1.2387997959085926`, \
-0.2886746243696767, -0.9445383685788356, 1.37826530171, 1.5518940518913613`},
                     "Children" -> RawArray["Integer16",{{2, 3}, {4, 5}, {
                    11, -11}, {-1, 6}, {7, 8}, {-2, -12}, {9, 
                    10}, {-3, -13}, {-4, -14}, {-5, -15}, {12, -16}, {13, 
                    14}, {-6, -17}, {15, -18}, {-7, 16}, {17, -19}, {18, 
                    19}, {-8, -20}, {20, -21}, {-9, 21}, {-10, -22}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 2, 1, 2, 2, 1,
                     1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{4, 6, 1, 1, 5, 1, 5, 5, 3, 4, 1, 1, 
                    3, 3, 4, 6, 4, 1, 1, 1, 1, 6, 4, 2, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.6639237976144488, \
-0.740445307268998, -0.36281291301271157`, -1.0192934839941046`, \
-1.355437719871313, 1.894388066259216, -1.355436199837337, -0.934717868888761,
                     0.481903033015727, 
                    0.06659105625495532, -1.85504933329414, \
-1.998964821178511, 0.8048395122204743, 0.8048402707611002, 
                    0.0665908971683431, 
                    0.3622662293177732, -0.3833099564839877, \
-1.038072473901254, -1.062332114537483, -1.9904202277061422`, \
-1.8181813925810868`, 0.36226520123439077`, 
                    0.06659103600886407, -0.31603341018431275`, \
-0.14766967848101364`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {7, 8}, {-1, 
                    6}, {-2, -16}, {-3, -17}, {9, 10}, {23, 24}, {-4, 11}, {
                    15, 16}, {12, 13}, {-5, 14}, {-6, -18}, {-7, -19}, {17, 
                    18}, {19, -20}, {-8, -21}, {-9, -22}, {20, -23}, {-10, 
                    21}, {-11, 22}, {-12, -24}, {-13, -25}, {-14, 
                    25}, {-15, -26}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 2, 2, 1, 2, 2, 1, 2,
                     1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 6, 3, 1, 4, 3, 3, 2, 5, 2, 1, 
                    5, 2, 3, 5, 1, 5, 3, 2, 3, 1, 1, 2, 6, 3, 6, 2, 6, 3, 1, 
                    3, 4, 3, 3, 1, 4, 4, 1, 1, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAuKCmyXvGq7fsy9w3hOxa+Pz/R6zdA1B9IK2K9kg8Rmf
Dvw18P9rP+FtSu4yy3f7FepDROtA4qXSF2pB9GGBdVf2X7C/8c5W6v76r/sn
lEWYb1M7Zl+x+1mdlPfP/Tv0ZKNNXr7dz3Dd/V3R7K32ExJvvwbpM6hwSwCJ
B7QsCjYv+r0/IybgsRGQfyOncovDwZf2HtYnBILePtvf4bf+sB2Q32Cxxmbp
6/f2HB4mmkxaJ/Z3sM6XCAXKT/jXbBejf90+QO1YMkhdRYTYlSggPyOhhAsk
v0FgrgOIX6CeudceKL9hyUxpybgn+wsmrBYC2aNgo+um0nFjv8XMyS6NQHe9
WG4p7AgUP+AV/Plk2k37CKa+62pAeYmZQhuUeTbad9wzPBA45+/+Dauv8yZK
Pty/oeKIssTa5fsN5kpL7Fe+uR8AbgSxWg==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {17, 18}, {
                    6, -23}, {10, 11}, {-1, 7}, {8, -24}, {
                    9, -25}, {-2, -26}, {-3, 12}, {-4, -27}, {-5, 13}, {14, 
                    15}, {-6, 16}, {-7, -28}, {-8, -29}, {19, 20}, {23, 24}, {
                    21, -30}, {22, -31}, {-9, -32}, {-10, -33}, {25, 
                    26}, {-11, 35}, {27, 28}, {33, -34}, {29, -35}, {-12, 
                    31}, {30, -36}, {-13, -37}, {-14, 32}, {-15, -38}, {-16, 
                    34}, {-17, -39}, {36, -40}, {37, -41}, {-18, 38}, {-19, 
                    39}, {-20, 40}, {-21, 41}, {42, -42}, {-22, -43}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 1, 1, 1, 1, 2, 2, 2, 1,
                     1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 
                    1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 1, 3, 3, 3, 5, 4, 1, 6, 4, 1, 6, 
                    1, 5, 1, 5, 6, 6, 1, 5, 4, 4, 2, 2, 3, 1, 4, 6, 1, 1, 3, 
                    5, 1, 5, 1, 6}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440392622893067, -1.5761603461802345`, 
                    0.48190332593291085`, 0.8048395611093166, 
                    0.48190378968683545`, -0.9347178191360674, 
                    0.06659270480800084, -0.9501271737937662, \
-0.7404454830814311, 0.06659101985490201, -0.5408386329690238, 
                    0.36226517652951795`, -0.5719541040836695, \
-0.9347163556673914, -0.8135253064873895, -0.9347179368278296, \
-0.7404454557862934, -0.7404452542168043, -0.7507498697537818, \
-1.3554373840145448`, -0.9445385161162694, -0.9445390131034603, 
                    0.26170882210548685`, 
                    0.08440499194527107, -1.2387991200868225`, 
                    0.5046524866553668, -0.944538482631458, 
                    0.3622652704482525, 
                    1.3799515198206045`, -0.31841099331878064`, 
                    0.48190265113204944`, -0.9347167971819479, 
                    1.6209710047735388`, -1.145076751541474, \
-0.3218089304831082, -0.1890898199085287}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {17, 
                    18}, {-1, -21}, {6, 7}, {-2, -22}, {8, 9}, {-3, 10}, {-4, 
                    16}, {11, 12}, {13, -23}, {14, 
                    15}, {-5, -24}, {-6, -25}, {-7, -26}, {-8, -27}, {19, 
                    20}, {-9, 36}, {21, 22}, {-10, 28}, {-11, -28}, {-12, 
                    23}, {24, -29}, {-13, 25}, {-14, 26}, {
                    27, -30}, {-15, -31}, {29, 30}, {31, 32}, {
                    35, -32}, {-16, -33}, {33, -34}, {-17, 
                    34}, {-18, -35}, {-19, -36}, {-20, -37}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
                     1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 
                    1, 2, 2, 2, 2, 1, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 1, 1, 3, 5, 6, 4, 1, 1, 5, 2, 4, 
                    4, 1, 3, 1, 4, 4, 1, 1, 1, 5, 1, 1, 3, 4, 4, 1, 3, 1, 3, 
                    1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.0844047863457108, -0.6117118359292695, 
                    2.128233535087409, 
                    0.4819042595143177, -1.1450770761843039`, \
-0.7404460370261257, 
                    0.06659132112786326, -0.8447965806096596, \
-0.883059625773325, -0.9347177947969856, -0.7164716828168398, \
-0.158358815234231, 0.06659225127634505, -0.5431718089802118, 
                    
                    0.6433719840692227, -0.2918345174732111, \
-0.38330995834411663`, 0.06659135919696557, -0.32416092367819216`, 
                    0.6294411345959787, 
                    0.7518894816661801, -1.1450770225192706`, 
                    3.17161541228724, -0.9523327570564861, \
-1.2387989890912365`, -0.944539045763567, -0.9445384566809345, 
                    1.44323236484529, 
                    0.48190435493188, -0.25303564761354513`, \
-1.2387981083960877`, 1.3451345488902273`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {22, 23}, {6, 7}, {
                    11, 12}, {-1, 8}, {10, -18}, {
                    9, -19}, {-2, -20}, {-3, -21}, {-4, 13}, {-5, -22}, {
                    14, -23}, {15, 16}, {-6, -24}, {17, 18}, {-7, 19}, {-8, 
                    20}, {-9, -25}, {-10, 21}, {-11, -26}, {24, 
                    25}, {-12, -27}, {-13, 26}, {32, -28}, {-14, 27}, {28, 
                    29}, {30, -29}, {
                    31, -30}, {-15, -31}, {-16, -32}, {-17, -33}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 1, 2, 2, 1, 1, 1, 1,
                     2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 
                    2, 1, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 3, 6, 1, 4, 4, 3, 2, 6, 5, 1, 
                    5, 1, 6, 1, 5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, \
-0.38331013197147756`, -1.2387998654475396`, -0.7404466101435387, \
-1.2734673194528767`, 0.06659146212978007, 0.0665926999694646, 
                    0.481903033015727, -0.7164699716864735, \
-0.7404459587789765, -1.3554367745856482`, 
                    1.0180505256400956`, -1.3554374063892087`, 
                    0.15949424913308174`, -0.7404458716825362, 
                    0.26160381969853086`, -1.3554366871703376`}, "Children" -> 
                    RawArray["Integer16",{{2, -9}, {3, 4}, {5, -10}, {6, 
                    7}, {-1, -11}, {8, -12}, {9, -13}, {-2, -14}, {10, 11}, {
                    12, 13}, {-3, 17}, {-4, -15}, {14, 15}, {-5, 
                    16}, {-6, -16}, {-7, -17}, {-8, -18}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 2, 2, 2, 2, 1,
                     1, 1, 2, 1, 1, 1, 1, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 5, 2, 2, 3, 1, 3, 1, 1, 1, 3, 
                    1, 4, 4, 1, 2, 1, 1, 2, 1, 4, 2, 1, 4, 3, 1, 6, 4, 4, 1}],
                     "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.4819032995437085, -0.18909017891254698`, \
-0.9347179697683687, 0.2617095351368146, 
                    0.26170902991753, -1.2387986531889545`, 
                    1.6865512456466654`, 0.4819031624067178, 
                    0.05319943798860233, 1.0892883209816393`, 
                    0.43336532701670194`, -1.2387982504591655`, \
-0.750577020355272, -0.38331021274971855`, -0.38331024081898146`, 
                    2.2006368537430276`, 
                    0.2617089131431456, -0.15003433727850002`, \
-0.21946771893070882`, 0.2617084555464779, -1.440025879100249, 
                    0.0665924608652998, -0.7164712302446565, \
-1.7855841529070702`, -0.15835848489793425`, 
                    0.8048400822134578, -1.3732032365038283`, \
-0.7404470652995094, 0.06659159970419071, 0.06659225163990357, 
                    0.2332741187931915}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {22, -14}, {
                    6, -15}, {16, -16}, {7, 8}, {9, -17}, {12, -18}, {-1, 
                    10}, {11, -19}, {-2, -20}, {-3, 13}, {-4, 14}, {
                    15, -21}, {-5, -22}, {17, -23}, {18, -24}, {19, -25}, {
                    20, -26}, {-6, 21}, {-7, -27}, {23, -28}, {-8, 24}, {25, 
                    26}, {-9, -29}, {27, -30}, {-10, 28}, {29, 
                    30}, {-11, -31}, {-12, 31}, {-13, -32}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
                     1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 
                    1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 1, 2, 2, 1, 3, 1, 3, 3, 1, 3, 
                    2, 1, 3, 5, 5, 1, 3, 1, 2, 1, 2, 3, 3, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440375662390498, -0.18909016795207334`, 
                    2.133723490849647, -0.716470259437294, 
                    0.08440308855260936, -1.725463575236887, 
                    0.8048406663857426, -0.18505671345490904`, 
                    0.8048395026772335, 
                    0.8048393328389221, -1.8245288184571926`, 
                    0.48190415108193596`, -0.31603358701139284`, \
-2.0157022129509823`, -1.2387988208763723`, -1.1450770370437375`, \
-1.1450770864599953`, -0.8437522444979662, 
                    0.4819036182726779, -1.1240937307485641`, 
                    0.26170960649753416`, -0.9864273789944917, 
                    0.08440381240301986, 0.481904380405751, 
                    0.4819028041602005, -0.6821912654291795}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {15, -14}, {-1, 
                    6}, {8, -15}, {-2, 7}, {-3, -16}, {9, -17}, {10, 11}, {
                    12, -18}, {14, -19}, {-4, 13}, {-5, -20}, {-6, -21}, {16, 
                    17}, {-7, -22}, {18, 19}, {20, 21}, {-8, -23}, {-9, 22}, {
                    23, -24}, {-10, -25}, {-11, 24}, {25, -26}, {-12, 
                    26}, {-13, -27}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 2, 1, 2, 2, 1,
                     2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{4, 2, 3, 1, 4, 1, 5, 1, 1, 1, 1, 1, 
                    1, 6, 4, 1, 6, 4, 5, 5, 2, 1, 1, 2, 3, 3, 1, 1, 1, 5, 1, 
                    5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.3833091020484476, 
                    0.08440499276156221, 
                    0.4819032982517433, -1.0548223340861007`, \
-0.9445372851892424, 
                    0.8139132334608794, -1.1450772723828333`, \
-0.3587598947674322, -0.4708561813082772, 1.9568930525649932`, 
                    0.5377795027936241, 2.1362026051953755`, 
                    0.43267759073388046`, -0.7404469465504304, 
                    0.06659247076980956, -1.9885325190581291`, \
-0.7404461286821515, 
                    0.06659226275902141, -1.1450770605718699`, \
-1.3554370414404033`, -0.7164700048261476, 
                    0.32742790853350856`, -1.4389058301089364`, \
-0.7164703429294645, 0.4819040460939825, 
                    0.80484086254702, -0.8184770814939739, \
-1.7153847949014285`, -1.158065735330915, -1.355437448929024, 
                    0.6842103345239918, -1.145077127482578}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 15}, {-2, 6}, {
                    10, 11}, {7, -18}, {8, 9}, {-3, -19}, {-4, -20}, {-5, 
                    12}, {13, -21}, {-6, -22}, {14, -23}, {-7, -24}, {16, 
                    17}, {18, 19}, {28, 29}, {20, -25}, {21, 
                    22}, {-8, -26}, {-9, -27}, {23, -28}, {-10, 24}, {-11, 
                    25}, {-12, 26}, {27, -29}, {-13, -30}, {-14, -31}, {-15, 
                    30}, {-16, 31}, {32, -32}, {-17, -33}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 2, 1, 1, 2, 1, 1,
                     2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 
                    1, 1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 4, 6, 1, 6, 3, 1, 1, 4, 2, 3, 4, 
                    1, 1, 3, 3, 1, 2, 1, 1, 4, 2}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.48190341790763824`, -0.9445375338243638, \
-0.1890901623298622, -1.1640702927604085`, -0.18909011591602232`, \
-1.2387990218916478`, -0.15003433727850002`, 
                    0.47019164372282907`, -0.383309728517637, 
                    0.08440307919932366, 
                    0.8048393328389221, -0.3833089602724131, \
-1.3878331527072856`, -0.7950080276934077, 0.8048402606020382, 
                    0.8048402551534348, -0.07575079074728541, \
-0.7164698309536348, -0.8128486075554822, -0.012800824232553243`, \
-0.38331013255519775`, 0.0844033626923042}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {10, 11}, {-2, 
                    5}, {6, 7}, {8, -13}, {9, -14}, {-3, -15}, {-4, -16}, {12,
                     13}, {21, -17}, {14, 15}, {-5, -18}, {-6, -19}, {16, 
                    17}, {18, -20}, {-7, 20}, {-8, 
                    19}, {-9, -21}, {-10, -22}, {-11, 22}, {-12, -23}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 2, 2, 1, 1, 2, 2,
                     1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 2, 5, 2, 6, 1, 4, 3, 1, 6, 4, 1, 
                    6, 1, 2, 2, 1, 2, 1, 3, 4, 1, 1, 2, 4, 1, 4, 4, 3, 3}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {0.48190261908532595`, 
                    0.2617094019726429, -0.934717943921088, 
                    0.0844033807217558, -0.7404453633147678, \
-0.14851843814472865`, -0.9445378237103643, -0.3784478009287384, \
-1.4736896173735197`, 0.3622657336936239, 0.0665926999694646, 
                    1.7909219576953035`, -0.740447092824196, \
-0.47118758751679035`, 0.08440475052283913, 
                    0.08440499276156221, -1.478746365599232, \
-0.7164702125502167, -1.4186325720385629`, 0.8048394987076373, 
                    0.06659111526874073, -1.8881896181350513`, \
-0.5408386329690238, -0.7164710965711638, -0.38330950374883965`, \
-1.9878923597917701`, 0.06659088701501592, -0.383309778357368, 
                    0.481904292589614, 0.4819043161660015}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -16}, {11, 12}, {-1, 
                    5}, {6, 7}, {8, -17}, {9, -18}, {-2, -19}, {-3, 
                    10}, {-4, -20}, {13, 14}, {26, -21}, {15, 
                    16}, {-5, -22}, {17, -23}, {19, -24}, {-6, 
                    18}, {-7, -25}, {20, 21}, {-8, 22}, {
                    23, -26}, {-9, -27}, {24, -28}, {-10, 
                    25}, {-11, -29}, {-12, 27}, {28, -30}, {-13, 29}, {-14, 
                    30}, {-15, -31}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
                     1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
                    1, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 2, 4, 1, 3, 1, 2, 1, 1, 1, 1, 
                    1, 4, 6, 5, 6, 1, 1, 1, 1, 1, 1, 4, 1, 2, 1, 1, 1, 6, 1, 
                    2, 1, 1, 4, 2, 5, 1, 3, 1, 3, 3, 3, 1, 4, 1, 2, 1, 3, 4, 
                    3, 1, 3, 2, 1, 3, 2, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJwB3QEi/iFib1JlAQAAADoAAABo+9fvgNfeP1Cyzw4bNMi/OJ/NElXt5r+w
Iov/qTnuv3BqFWRmUgFAeJYt9x3S878oEji+OGHDv4iuO8OFm7U/mMEy0eBU
9D8Yz99qSXP6P6DLGJOwfPU/EAl5kBVq/j/g0TrsTLf8P0gL4dgjiNi/ABdK
dVov1z/ob+SoNentv7jpmjO9see/EF0Wkr1b9b/gFjHs2nvkv+gjvBOjlO0/
mLlT/ffBlD/4bvQq+232vzCMsCgHbNm/IAVUCjQMsT8AZCrNRLjGPwA3UOFS
7ea/AFc9W48Z/b9Y7ENfSOX/v3Qw4FRNGQDAuFVJ372x578Qp+dd64HkP8BN
p/xU7ea/oN8agvEvwD8AeTrHT6LavzCF4UMnDLE/kIjOw+M51L/g8Lq23q/1
v+DnzGExH9i/uFf3/EDB6T/4sXV1Db/Uv+AKqAeBluQ/eMOTNkHB6T/YF+FV
QMHpPyh2IvCaAPu/6PGh1B0MsT8I+ox9Z6P+v3A7INhT7ea/GFOAiHxD4b/Q
p8BSQMHpPwjjC4svDLE/gGYwmoLX3j+Qk5umlvvov+j+jvqE194/+An/MFLt
5r9AYdj0Oxzzv6jHPX6C194/ABrnE3qbtT/Yl31OJYHSv0nu/t4=
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {15, 16}, {-1, 
                    6}, {-2, -31}, {7, 8}, {-3, 9}, {-4, 14}, {-5, 10}, {11, 
                    12}, {-6, -32}, {13, -33}, {-7, -34}, {-8, -35}, {17, 
                    18}, {22, 23}, {19, 20}, {-9, -36}, {-10, 
                    21}, {-11, -37}, {-12, -38}, {24, 25}, {44, 45}, {
                    26, -39}, {30, 31}, {27, -40}, {28, -41}, {
                    29, -42}, {-13, -43}, {-14, 32}, {-15, 42}, {-16, 33}, {
                    34, 35}, {36, 37}, {-17, -44}, {-18, -45}, {38, 
                    39}, {-19, -46}, {40, -47}, {-20, 41}, {-21, -48}, {
                    43, -49}, {-22, -50}, {46, 47}, {
                    56, -51}, {-23, -52}, {-24, 48}, {49, -53}, {50, -54}, {
                    51, 52}, {-25, 53}, {-26, -55}, {-27, 54}, {
                    55, -56}, {-28, -57}, {-29, 57}, {58, -58}, {-30, -59}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 1, 1, 2,
                     1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 
                    1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 
                    2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 2, 1, 4, 2, 3, 3, 2}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909017073719991`, \
-1.2387981086152688`, -0.7164697853148434, -0.19751613507828591`, 
                    0.06659270480800084, 0.08440499276156221, 
                    0.8048392724408098, 0.48190362195185577`, 
                    0.2617090408993037}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 9}, {-2, -5}, {
                    6, -6}, {7, -7}, {8, -8}, {-3, -9}, {-4, -10}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 2, 1, 1, 
                    2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 3, 1, 4, 3, 1, 2, 1, 3, 4, 3, 
                    2, 4, 3, 1, 1, 1, 4, 1, 1, 1, 3, 1, 3, 1, 1, 2, 2, 1, 1}],
                     "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909017073719991`, \
-0.9445379605107025, 0.804839305707576, -0.7443977323591149, 
                    0.06659225127634505, -1.2387992000263601`, \
-1.018085357176206, 0.26170994823730265`, -1.5761603461802345`, 
                    0.8048408396516891, 0.06659101985490201, 
                    0.4819041313333634, 
                    
                    0.08440499276156221, -0.3833092976667114, \
-0.37844749701613667`, 1.0870041445668157`, 
                    0.9521145478256923, -0.6466282816163185, 
                    0.06659148664406789, -0.12508731446824184`, 
                    2.0947570523638, -0.2886746243696767, \
-1.2387987441811426`, -0.3218089304831082, 
                    0.48190303393767575`, -0.8104144219642277, \
-0.7761594285529787, 0.08440473153976924, 0.17305660093729536`, 
                    1.1667866784522474`, -0.29304359594838525`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {19, 
                    20}, {-1, -15}, {6, -16}, {7, 8}, {-2, -17}, {
                    9, -18}, {-3, 10}, {11, -19}, {12, -20}, {13, 14}, {-4, 
                    15}, {18, -21}, {16, -22}, {
                    17, -23}, {-5, -24}, {-6, -25}, {21, -26}, {31, -27}, {22,
                     23}, {24, 25}, {-7, -28}, {26, -29}, {-8, 30}, {-9, 
                    27}, {-10, 28}, {-11, 
                    29}, {-12, -30}, {-13, -31}, {-14, -32}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 2, 2, 1,
                     2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 
                    2, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 2, 4, 3, 3, 1, 3, 1, 2, 1, 
                    1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909013852325463`, 
                    0.0665926999694646, 
                    0.08440308855260936, -0.9445373522271217, 
                    0.8048408325696546, 
                    0.48190265072469574`, -0.22269162884185034`, 
                    0.8048407136663895, 
                    0.5023106161282707, -0.716469913163321, \
-1.9878923597917701`, -0.8152769130446291}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -7}, {5, 6}, {-1, -8}, {
                    7, -9}, {-2, -10}, {8, 9}, {10, -11}, {-3, -12}, {-4, 
                    11}, {-5, 12}, {-6, -13}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
                     1, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 3, 4, 2, 1, 4, 1, 4, 2, 1, 4, 
                    3, 3, 1, 3, 1, 1, 3, 1, 4, 3, 1, 1, 2, 2, 1, 3}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-1.2387988120380253`, 0.8048392826738571, 0.06659270480800084, 
                    0.2617099293464742, -0.19351737207297726`, 
                    0.06659098426338439, -1.7823528905972328`, \
-0.3833092935028142, 0.08440382519528222, 
                    3.17161541228724, -0.3833093224385644, 
                    0.4819043711351245, -1.2387982504591655`, 
                    1.0709011691300603`, -1.2388000564378157`, \
-1.9878923597917701`, -0.38804850657650336`, 
                    0.48190344156753184`, -0.15279227477107482`, \
-0.38331030553951617`, -1.2387997260560883`, 
                    1.37826530171, -0.18162011324768712`, 
                    0.26170900552564547`, 
                    0.26170886510525726`, -0.21611046171043458`, 
                    0.6433717455495556}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {16, 17}, {5, 6}, {
                    7, -16}, {-2, -17}, {8, -18}, {-3, 9}, {10, -19}, {-4, 
                    11}, {12, -20}, {13, -21}, {14, -22}, {
                    15, -23}, {-5, -24}, {-6, 18}, {-7, -25}, {-8, 19}, {20, 
                    21}, {22, 23}, {-9, 27}, {-10, 24}, {-11, 
                    25}, {-12, -26}, {26, -27}, {-13, -28}, {-14, 
                    28}, {-15, -29}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 1, 1, 1, 2, 2, 1, 1,
                     2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 
                    2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 2, 3, 3, 4, 1, 1, 2, 1, 3, 1, 4, 
                    1, 1, 1, 3, 2, 2, 1, 6, 5, 3, 3, 2, 1, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452307497795, 
                    0.08440497902927468, 0.6433718129561274, 
                    0.8048399298404325, -0.9445390692790934, \
-1.337762346840286, -1.4018508603975857`, -0.7164705173885864, 
                    0.15966378557042282`, 
                    0.48190411386154874`, -0.336835588737999, \
-0.38331013197147756`, -0.3335280751530405, 
                    0.017554873674022586`, -0.6117118359292695, \
-1.2387984062137907`, 0.2617092199303759, 0.26170835178382434`, 
                    2.2006368537430276`, 
                    0.36226681151531626`, -0.9347163101982785, \
-1.238799745503286, 0.48190265113204944`, 0.08440382796731083, 
                    1.4055203037824295`, 0.04841188520198886}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {19, -16}, {6, 
                    7}, {-1, 16}, {8, 9}, {-2, 15}, {-3, -17}, {10, -18}, {-4,
                     11}, {12, 13}, {-5, -19}, {-6, 
                    14}, {-7, -20}, {-8, -21}, {-9, 17}, {
                    18, -22}, {-10, -23}, {20, -24}, {21, -25}, {22, 
                    23}, {-11, 24}, {-12, 26}, {-13, 
                    25}, {-14, -26}, {-15, -27}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 1, 1, 2,
                     2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 2, 1, 2, 4, 6, 4, 1, 4, 2, 2, 2, 
                    2, 1, 1, 2, 1, 4, 4, 3, 2, 1, 2, 3, 3, 4, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, 
                    0.08440499276156221, 
                    0.18551914009917714`, -0.716470022957135, \
-0.9445390691378037, -0.7404453317752564, -0.38330868946695507`, \
-1.0192934839941046`, -0.9445375393131616, 
                    0.2617086155099586, -0.7164701273721201, 
                    0.0844030980575955, 
                    0.08440335228845508, -0.8184770814939739, \
-0.3218089304831082, -0.7164698523976574, -0.25913396299357583`, 
                    0.06659156577371061, 0.06659271655554488, 
                    0.4819027110364491, 0.26170855979994556`, 
                    0.36532894361318213`, 0.2617089807362887, 
                    0.8048410332269729, 
                    0.8048397550947879, -0.9445381587830628, 
                    1.7565149582999808`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {6, 
                    7}, {-1, 8}, {-2, -17}, {-3, -18}, {-4, 9}, {-5, 
                    10}, {-6, -19}, {-7, 13}, {22, 23}, {14, 15}, {16, 
                    17}, {-8, 20}, {-9, 18}, {
                    19, -20}, {-10, -21}, {-11, -22}, {
                    21, -23}, {-12, -24}, {-13, 24}, {26, -25}, {
                    25, -26}, {-14, -27}, {-15, 27}, {-16, -28}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 2, 1, 2, 1, 2, 2, 2,
                     1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 4, 1, 3, 2, 4, 1, 2, 3, 2, 2, 
                    2}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901623298622, \
-1.051060664801943, 0.06659088701501592, -2.0082447199023843`, 
                    0.8048396344366893, -0.7164703868369893, \
-0.15835901232800453`, -1.4325834603896546`, 0.08440308855260936, 
                    0.6433719787984522, 0.08440428709401271, 
                    0.26170850893206055`, 0.26170847596941504`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -8}, {9, -9}, {5, 
                    6}, {-1, -10}, {-2, 7}, {-3, 8}, {-4, -11}, {10, 
                    11}, {-5, -12}, {-6, 12}, {13, -13}, {-7, -14}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 1, 2, 2, 1, 1, 1,
                     2, 2, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 1, 1, 5, 3, 1, 1, 2, 1, 1, 2, 3, 
                    1, 1, 1, 4, 1, 6, 5, 1, 5, 3, 1, 4, 3, 2, 1, 1, 1, 1, 4, 
                    2, 3, 4, 3, 2, 4, 4, 4, 6, 5, 6, 4, 6, 1, 5, 6, 1, 3, 3, 
                    1, 4, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+IGw/COxuv37ENMbqSVhzM67LhY8Lmr9/H+HUymoTZB
n/b/iG7eKXfp834PwabJEVzf9384aiEg6PZlv8RPoxsls7fa33gr1vKw76u9
wscz2kdT3u3nYOv/eH3/BfsZvDNiGoDmSqjwmK1RXGNf8fTAq3jeb/YOGz7a
Bpsc3h+R3v5GpePGfo12x87gmd/sPWbpGu7a+Hy/gGHoL+OXb/dPaL772K//
6X4Js1n3jYD8GUcM2e0PvrRfcez/3tXXnuw3SL7TrwrUv8CyvMgOKD5hg356
FdA9E07vXPow7e9+jl89temL/+3fwDynecfW//t/JIpYZJz7vz/jjWuIJs9G
+wXf5yeGvn22f4HqdWaQuQ6yV6vVgOZ1HDVcAjJvRgS/fS/QvID7HleNgepf
xFyItgDSFal3DWWAdEFsX3is/nV7Ae93PPfXf90/IcemejfQ/RP0U1XVgeZY
qNjvA/FfTPgmoFp2Zj9D5PIvd4HqChZsmQ0St3Cbpsv26749w5WIm83AcNIo
f/rXEWivwcuXM15NnrK/4XGqhx7QngOzDYTUgPSFWyrTZYE0AD015h0=
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -28}, {18, 19}, {5, 
                    6}, {7, 8}, {-1, 14}, {-2, 9}, {-3, 10}, {-4, -29}, {-5, 
                    11}, {12, -30}, {-6, 13}, {-7, -31}, {15, 
                    16}, {-8, -32}, {17, -33}, {-9, -34}, {20, 21}, {36, 
                    37}, {22, 23}, {28, 29}, {24, -35}, {-10, -36}, {-11, 
                    25}, {26, 27}, {-12, -37}, {-13, -38}, {30, 31}, {-14, 
                    32}, {-15, -39}, {-16, -40}, {-17, 33}, {34, -41}, {-18, 
                    35}, {-19, -42}, {38, -43}, {48, -44}, {39, -45}, {40, 
                    41}, {42, -46}, {-20, 44}, {-21, 43}, {-22, -47}, {-23, 
                    45}, {46, 47}, {-24, -48}, {-25, -49}, {49, -50}, {-26, 
                    50}, {51, -51}, {52, -52}, {53, -53}, {
                    54, -54}, {-27, -55}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 2, 1, 2, 1, 1, 2, 1, 2,
                     1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 
                    1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 
                    1, 1, 1, 2, 1, 2, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 5, 6, 1, 2, 1, 4, 2, 3, 6, 3, 6, 
                    3, 6, 2, 5, 6, 1, 1, 4, 1, 1, 2, 4, 1, 2, 4, 4, 3, 4, 3, 
                    1, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.4819033142497786, -0.9347178972370296, \
-0.18909015944790686`, -0.6445808576955052, 
                    0.26170902991753, -1.1240937307485641`, \
-0.9445378159072586, 
                    0.08440406735797601, -1.2387992289515406`, \
-0.7404453023064956, 
                    0.4819031765965551, -0.7404463979264726, \
-1.2387995952937167`, -0.7404463005006701, 
                    0.2617097828660837, -1.355437951192357, \
-0.1890901614213587, 2.1652343577418875`, -1.580835815151401, 
                    0.06659270480800084, 
                    0.576137139951479, -2.0143439070430524`, 
                    0.0844048322376515, 
                    0.06659103600886407, -1.4018508603975857`, 
                    0.0844039151649425, 
                    0.0665924933641786, -0.38331004713219974`, 
                    0.48190425643468826`, 0.06659177897156843, 
                    0.8048406160205142, -0.46677277342462187`, \
-1.1943931164042425`, -0.8135253064873895}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {20, 21}, {6, 7}, {
                    18, -18}, {-1, 8}, {10, 11}, {-2, 
                    9}, {-3, -19}, {-4, -20}, {12, -21}, {13, 
                    14}, {-5, -22}, {-6, 15}, {16, -23}, {-7, 
                    17}, {-8, -24}, {19, -25}, {-9, -26}, {22, -27}, {26, 
                    27}, {-10, 23}, {24, -28}, {-11, 25}, {-12, -29}, {
                    28, -30}, {-13, -31}, {-14, 29}, {-15, 30}, {31, -32}, {
                    32, -33}, {33, -34}, {-16, 34}, {-17, -35}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 2, 1, 1, 1, 2,
                     1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 
                    2, 2, 2, 2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 1, 1, 3, 1, 4, 2, 4, 1, 5, 1, 
                    2, 4, 4, 1, 1, 4, 5, 5, 2, 4, 3, 2, 1, 4, 1, 2, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.9445388281940801, 
                    0.15301526668831267`, -0.39043231430471037`, \
-1.238799191085299, 
                    0.6134644244957581, -0.9445379770192561, \
-0.7164711676857438, 
                    0.06659101900359599, -1.1743955014598306`, \
-1.3554363376809313`, -0.38813170915059514`, 
                    0.08440374611857115, -0.38330954109502, \
-0.3833097569303838, -0.7507498697537818, -0.4236800263554641, \
-0.3833095212246924, -1.355436303466277, -1.3554362132845252`, \
-0.7164697732279786, -0.15835882181139294`, 0.48190265072469574`, 
                    0.0844046988372158, -0.807528445533122, \
-0.9445378090650793, 2.1971887695531134`, 0.08440382951277292, 
                    1.480180009077758}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {21, 22}, {-1, 
                    6}, {-2, 7}, {-3, -20}, {-4, 8}, {-5, 9}, {10, 11}, {-6, 
                    12}, {-7, 19}, {13, 14}, {15, 16}, {-8, 
                    18}, {-9, -21}, {-10, 17}, {-11, -22}, {-12, -23}, {-13, 
                    20}, {-14, -24}, {-15, 23}, {26, -25}, {-16, 24}, {
                    25, -26}, {-17, -27}, {27, 28}, {-18, -28}, {
                    29, -29}, {-19, -30}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 1, 1, 2, 1, 1, 1, 2,
                     1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 
                    1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 4, 1, 3, 1, 3, 1, 3, 3, 3, 1, 
                    4, 2}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909017073719991`, 
                    0.48190261919988764`, 
                    0.06659091706106945, -1.0888891460719048`, 
                    0.8048394199062043, 
                    0.5403582933002324, -1.238799154561553, 
                    0.2958716170522959, -1.2387988986445624`, \
-1.2387983595889143`, -0.3784478270144316, -1.4053402820162635`, 
                    0.06659213854904389, 0.08440499276156221}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, -9}, {-2, 6}, {
                    12, -10}, {7, -11}, {8, 9}, {-3, -12}, {-4, 10}, {-5, 
                    11}, {-6, -13}, {-7, 13}, {14, -14}, {-8, -15}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 1, 2, 2, 1, 1, 1,
                     1, 2, 2, 2, 2}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 2, 2, 2, 1, 2, 1, 4, 1, 1, 3, 
                    1, 1, 1, 1, 1, 3, 5, 1, 2, 4, 2, 4}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452307497795, \
-1.7153847949014285`, -0.7164697772026223, -0.716471225077397, 
                    0.08440499276156221, -2.032190148559282, 
                    0.26170863021919466`, 
                    1.72321074999655, -0.9445383467884154, 
                    0.29621266766163723`, -0.49957317456417316`, \
-1.2388000564378157`, -1.4384902395349215`, -0.7042541459950389, \
-1.1943931164042425`, -0.5678759312755668, -0.5328217352430986, 
                    0.8048408957525277, -0.9347178972370296, \
-0.1831548147535409, 0.26170894098705855`, -0.383309778357368, 
                    0.2617089131431456, -0.6639237812088021}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {-1, 
                    6}, {-2, 7}, {-3, -12}, {8, -13}, {9, -14}, {
                    10, -15}, {-4, -16}, {13, -17}, {-5, 18}, {-6, 14}, {15, 
                    16}, {-7, -18}, {-8, 17}, {-9, -19}, {19, -20}, {20, 
                    21}, {-10, -21}, {22, -22}, {23, -23}, {
                    24, -24}, {-11, -25}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 1, 1, 1, 2, 2, 1, 2, 2,
                     2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 5, 1, 3, 4, 6, 1, 2, 2, 1, 3, 1, 
                    1, 1, 3, 3, 2, 6, 3, 1, 5, 1, 4, 2, 4, 3, 1, 2, 1, 3, 3, 
                    1, 2, 2, 5, 1, 6}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440392622893067, -0.9347179535501668, 
                    2.137920022529727, 0.8048399484929023, 
                    0.0665908971683431, -0.7404455846557649, \
-1.337762346840286, -0.7164701925225874, -0.7164708442057508, 
                    0.16264291233650163`, 0.8048396533283437, 
                    0.05442385930298632, -0.6401190388794156, \
-0.6769070275065099, 0.48190414431957374`, 0.6433719787984522, 
                    0.08440418088931911, -0.1890901477085023, 
                    0.48190331815911547`, -1.3300060854291438`, \
-1.1450770370437375`, -0.3247971435804433, -0.9445390692790934, 
                    0.08440437325484218, -0.9445383467884154, \
-1.2387981083960877`, 0.47019164372282907`, 0.0844045341673203, 
                    1.6559887204108428`, 
                    0.48190315891603275`, -1.2388000564378157`, \
-1.2609990082675324`, 0.2617085180265244, 
                    0.26170847596941504`, -1.3554367818499244`, 
                    1.1276555460128517`, -0.7404457239870235}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {17, -19}, {
                    6, -20}, {15, -21}, {7, -22}, {8, 9}, {-1, -23}, {10, 
                    11}, {12, -24}, {-2, -25}, {13, -26}, {
                    14, -27}, {-3, -28}, {-4, 16}, {-5, -29}, {18, 19}, {
                    20, -30}, {21, 22}, {-6, -31}, {23, 24}, {35, 36}, {-7, 
                    25}, {-8, 31}, {-9, 26}, {27, 28}, {-10, 29}, {-11, 
                    30}, {-12, -32}, {-13, -33}, {32, 33}, {-14, -34}, {
                    34, -35}, {-15, -36}, {-16, 37}, {-17, -37}, {-18, -38}}],
                     "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 1, 2, 1, 2, 2, 1, 1, 2,
                     2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 
                    2, 1, 1, 2, 2, 2, 1, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 1, 6, 2, 2, 3, 4, 5, 1, 5, 5, 5, 
                    1, 1, 3, 1, 6, 2, 4, 4, 3, 1, 4, 3, 1, 1, 4, 2, 2, 1, 2, 
                    1, 1, 1, 4, 4, 2, 2, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAOIVGz0P1s7eas9gVVawa9n3/R1V5d7SJif2a0hckA59
+2y/xUJJURB9IejQP4eDL+0bGvfcVOLZaH9AZsNPk5dv96tErFmUbsJwYEds
YosxkJ/wTnq2KZCeUHxG/976r/s7Kl7Yvz34bP8G7y23y1cfsV+hUSTYcv2e
vUUae9lrz632Eu0Kt/dsfL7/wOmSiSFAe17cvZyjDjS/gVs61QJIK3A9la4D
qn+xz/T2Mc9H+zeci0oxAYpzrDokbQ9yz8LdpxZZPtjv0d+hFMx8dX+CaawV
yH0FDLUFzyyv7A8wNQ0KApqrUCa1Zw/vif0exyaxgPgzxMSOJoQ+3j9BJsz0
i/zr/QGf3mk94Hm4v4NfP1LK9cj+HzPN+ldYvtvvUKx0txsYPjf4fof0AukK
mQltIPEd1x8HLwfSACpLqVY=
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 36}, {-2, 6}, {
                    10, 11}, {7, -24}, {-3, 8}, {9, -25}, {-4, -26}, {12, 
                    13}, {14, 15}, {-5, -27}, {-6, -28}, {16, 17}, {-7, 29}, {
                    18, 19}, {27, -29}, {-8, 20}, {-9, -30}, {21, -31}, {-10, 
                    22}, {-11, 23}, {24, -32}, {25, -33}, {-12, 
                    26}, {-13, -34}, {28, -35}, {-14, -36}, {30, 31}, {
                    32, -37}, {-15, 35}, {33, 
                    34}, {-16, -38}, {-17, -39}, {-18, -40}, {-19, 37}, {-20, 
                    38}, {-21, 39}, {-22, 40}, {-23, -41}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 1, 1, 2, 2, 1, 1, 2,
                     1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 
                    2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 3, 3, 1, 1, 1, 5, 4, 3, 3, 4, 4, 
                    4, 4, 3, 6, 1, 5, 1, 6, 3, 3, 4, 3, 1, 1, 1, 4, 4, 4, 1, 
                    4, 3, 2, 4, 2, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347178935551099, \
-1.2387989112736548`, 
                    0.481904292589614, -1.2671061166441824`, \
-0.611889229891176, 0.2740036617649686, -1.3554362173661296`, 
                    0.06659271686934964, 0.8048403900998684, 
                    0.8048399298404325, -0.6639237597992027, \
-0.3833096824681492, -0.38330934499496694`, -0.15835884750195794`, \
-1.2387982175858578`, -0.18909012248715595`, 
                    1.0709011691300603`, -0.9347179440951088, 
                    0.6397029021552338, -0.7404468551060264, 
                    0.8048394520417919, 0.8048393953994779, 
                    0.06659144299285624, 
                    0.48190338779380104`, -0.39067147302791927`, \
-0.23687890811694157`, -0.43632476038088264`, -0.9445383670980751, \
-0.3833087804669031, -0.38330977590075044`, -1.8210620322576077`, \
-0.3833097886729271, 0.48190334162362625`, -0.7164715682296698, 
                    0.06659105625495532, -0.71647138098671, \
-1.038072473901254}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {28, 29}, {-1, 6}, {
                    7, 8}, {-2, -20}, {9, -21}, {15, 16}, {10, -22}, {
                    11, -23}, {-3, 12}, {-4, 13}, {-5, 14}, {-6, -24}, {17, 
                    18}, {27, -25}, {19, -26}, {20, -27}, {-7, -28}, {21, 
                    22}, {23, -29}, {-8, 25}, {24, -30}, {-9, -31}, {-10, 
                    26}, {-11, -32}, {-12, -33}, {-13, 30}, {-14, 34}, {
                    31, -34}, {-15, 32}, {33, -35}, {-16, -36}, {-17, 35}, {
                    36, -37}, {-18, 37}, {-19, -38}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
                     1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 
                    2, 1, 1, 2, 2, 1, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 5, 4, 6, 2, 5, 1, 6, 4, 1, 1, 
                    1, 4, 4, 3, 1, 1, 4, 4, 1, 1, 3}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.48190344156753184`, -0.1890901526545501, \
-0.9347179697683687, -0.9445390849006374, -0.740447092824196, \
-0.7164712339849144, -1.3554378811764654`, 
                    0.15914891039816825`, -0.7404454718958, 
                    0.06659270777545134, 
                    0.1558982959967723, -1.85504933329414, \
-1.9937851761325192`, 0.06659141634595922, -0.38331013197147756`, 
                    0.8048408232908733, -1.914893618042358, \
-1.9878923597917701`, -0.38331023976142564`, 
                    0.06659093670821103, -0.7392928000182382, 
                    0.39689873468629955`, 0.6433719787984522}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -12}, {5, 
                    6}, {-1, -13}, {-2, 7}, {-3, 17}, {-4, 8}, {9, -14}, {
                    10, -15}, {11, -16}, {12, -17}, {13, 14}, {-5, -18}, {
                    15, -19}, {-6, 16}, {-7, -20}, {18, 19}, {-8, -21}, {-9, 
                    20}, {21, 22}, {23, -22}, {-10, -23}, {-11, -24}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 1, 2, 1, 2,
                     1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 2, 4, 2, 4, 4, 3, 3, 1, 1, 2, 
                    2, 3, 1, 1, 3, 3, 4, 1, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-1.4007476177258482`, 0.08440308855260936, 0.06659166996210486, 
                    0.08440490388880761, 
                    0.06659249779945109, -0.9445390692790934, 
                    0.48190264268781524`, 
                    0.8048400776018605, -0.5766611704661297, \
-0.7099513764028407, 0.26170848369117694`, 0.26170844605940013`, 
                    0.48190316218698914`, 
                    1.1970088048090126`, -0.1879192274545156, \
-1.2388000440890874`, 
                    0.8048395825423693, -0.15835942463487074`, \
-0.6755856270415146, -0.6639237694673055}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {16, 
                    17}, {-1, -11}, {6, 7}, {8, -12}, {-2, 12}, {-3, 9}, {-4, 
                    10}, {11, -13}, {-5, -14}, {13, -15}, {14, -16}, {
                    15, -17}, {-6, -18}, {18, -19}, {-7, 21}, {19, -20}, {-8, 
                    20}, {-9, -21}, {-10, -22}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 1, 2, 1, 2, 2,
                     1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 3, 1, 3, 2, 3, 1, 3, 4, 3, 1, 
                    1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-0.9445375393131616, 0.4819042690090245, -1.7497066815672788`, 
                    0.8048396344366893, 0.08440382796731083, 
                    0.8048395026772335, -1.8210620322576077`, 
                    0.4819036182726779, -0.9445378090650793, 
                    0.643371819386358, 
                    0.39689873468629955`, -1.4042768052449954`, 
                    0.3604018476939399}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {6, 7}, {
                    5, -10}, {-2, -11}, {-3, 8}, {11, 12}, {-4, 9}, {
                    10, -12}, {-5, -13}, {-6, 13}, {-7, -14}, {-8, 
                    14}, {-9, -15}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 2, 1, 2, 2, 2, 2, 1, 1,
                     1, 2, 2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 6, 1, 4, 4, 4, 3, 4, 1, 1, 1, 3, 
                    2, 1, 1, 1, 4, 2, 2, 1, 2, 3, 1, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.7404469353468155, -1.2348886012143723`, -0.9445390849006374, \
-0.3833091357124223, -0.38330966448682213`, 0.8048402398913765, 
                    0.06659178979635627, -0.3982031720471384, \
-0.7845214053319047, -0.571112723213477, 0.4819028701865009, 
                    0.08440466880028596, -1.7132949244396194`, \
-0.8146664053024129, 1.273627225385285, -0.15835837170194145`, 
                    0.08440325791707604, 
                    0.08440317684708531, -0.6466282816163185, \
-0.7164705057388465, 
                    0.8048399315679138, -0.3629793334350686, \
-1.1901669112339448`}, "Children" -> 
                    RawArray["Integer16",{{2, -15}, {3, 4}, {-1, 5}, {-2, 
                    12}, {6, 7}, {-3, -16}, {8, 9}, {-4, -17}, {10, -18}, {-5,
                     11}, {-6, -19}, {13, 14}, {-7, 15}, {17, 18}, {-8, 
                    16}, {-9, -20}, {-10, -21}, {19, 20}, {
                    21, -22}, {-11, -23}, {-12, 22}, {-13, 23}, {
                    24, -24}, {-14, -25}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 2, 2, 2, 1, 2,
                     1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>]}, 
                    "Processor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, 
                    "Type" -> "NumericalVector"|>, "Key" -> "(f2(f1f3))", 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"|>], 
                    "OOBConfusionMatrix" -> {{0.7446044355309039, 
                    0.31349816742548714`}, {0.25539556446909595`, 
                    0.6865018325745129}}, "Calibrator" -> 
                    MachineLearning`CalibratorFunction[
                    "TemperatureScaling", <|"Theta" -> 1.3294620149061904`|>],
                     "Method" -> "RandomForest", "PostProcessor" -> 
                    MachineLearning`MLProcessor["Identity"], 
                    "Options" -> <|
                    "FeatureFraction" -> <|
                    "Value" -> 6^Rational[-1, 2], "Options" -> <||>|>, 
                    "LeafSize" -> <|"Value" -> 5, "Options" -> <||>|>, 
                    "TreeNumber" -> <|"Value" -> 50, "Options" -> <||>|>, 
                    "DistributionSmoothing" -> <|
                    "Value" -> 0.5, "Options" -> <||>|>, 
                    "Implementation" -> <|
                    "Value" -> "Default", "Options" -> <||>|>|>|>, 
                    "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|"Value" -> "RandomForest", 
                    "Options" -> <|"FeatureFraction" -> <|
                    "Value" -> Automatic|>, 
                    "LeafSize" -> <|"Value" -> Automatic|>, 
                    "TreeNumber" -> <|"Value" -> Automatic|>, 
                    "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
                    "Implementation" -> <|"Value" -> Automatic|>|>, 
                    "NaiveImputer" -> Missing["KeyAbsent", "NaiveImputer"], 
                    "EMIterations" -> 
                    Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 5], 
                    TypeSystem`UnknownType, TypeSystem`UnknownType}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|"Configuration" -> {
                    "RandomForest", "FeatureFraction" -> Automatic, 
                    "LeafSize" -> Automatic, "TreeNumber" -> Automatic, 
                    "DistributionSmoothing" -> 0.5, "Implementation" -> 
                    Automatic}, "ModelUtility" -> Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType, TypeSystem`AnyType}], 
                    TypeSystem`UnknownType}], <||>], "InputDimension" -> 6, 
                    "OutputDimension" -> 1|>, "AnomalyDetector" -> None, 
                    "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"1st"}, "ID" -> 7168142382301173801|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {16.}, "ID" -> 1978735388468315165|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"female"}, "ID" -> 9071588231046195481|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.36496, "MaxTrainingMemory" -> 7111904,
                     "DataMemory" -> 194584, "FunctionMemory" -> 268544, 
                    "LanguageVersion" -> {14.1, 0}, "Date" -> 
                    DateObject[{
                    2024, 8, 11, 11, 42, 54.079285`8.48560591545275}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 10, 
                    "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX",
                     "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Training data dimensions: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"981", ",", "4"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Test data dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"328", ",", "4"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ClassifierFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Numerical\"", ",", 
                    "\"Nominal\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                    GrayLevel[0.94]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"Nominal\"", ",", "\"Numerical\"", ",", 
                    "\"Nominal\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["799", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    ClassifierFunction[<|
                    "ExampleNumber" -> 799, "ClassNumber" -> 2, 
                    "Input" -> <|
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                    MachineLearning`MLProcessor[
                    "Transpose", <|"FeatureNumber" -> 3|>], 
                    MachineLearning`MLProcessor[
                    "WrapMLDataset", <|
                    "FeatureTypes" -> {"Nominal", "Numerical", "Nominal"}, 
                    "FeatureKeys" -> {"f1", "f2", "f3"}, "FeatureWeights" -> 
                    Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                    "NumericalVector"|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "SynthesizeMissingValues", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Distribution" -> LearnedDistribution[<|
                    "ExampleNumber" -> 799, "Preprocessor" -> 
                    MachineLearning`MLProcessor[
                    "ToMLDataset", <|"Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 
                    1|>, "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Processor" -> MachineLearning`MLProcessor[
                    "Sequence", <|"Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Processors" -> {
                    MachineLearning`MLProcessor[
                    "Threads", <|"Input" -> <|"f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>, "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "Numerical", "Weight" -> 
                    1|>|>, "Output" -> <|"f2" -> <|"Type" -> 
                    "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 9153322266525338993|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 
                    1|>, "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"(f1f3)" -> <|"Type" -> "NominalVector", 
                    "Weight" -> 2|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    5012684870820858898|>]}, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                    
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"(f1f3)" -> <|"Type" -> "NominalVector", 
                    "Weight" -> 2|>|>, "Index" -> {<|
                    "1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                    "female" -> 1, "male" -> 2|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {14.1, 0}, "ID" -> 
                    8164567873087376931, "Output" -> <|
                    "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 
                    2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>|>, "Mean" -> {29.718919524405504`}, 
                    "StandardDeviation" -> {14.402406360492689`}, 
                    "Output" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    6281077921715581987|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"(f1f3)" -> <|"Type" -> "NominalVector", 
                    "Weight" -> 2, "SetSize" -> {3, 2}|>|>, 
                    "Boundaries" -> {{-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, 0., 0.5}}, 
                    "Version" -> {14.1, 0}, "ID" -> 4040756577587028706, 
                    "Output" -> <|"(f1f3)" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "NumericalVector", 
                    "Weight" -> 1|>, "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 3]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Version" -> {14.1, 0}, "ID" -> 4097015177937765665|>]}, 
                    "Invertibility" -> "Approximate", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                    "DirectTraining", "BatchProcessing" -> Automatic, 
                    "Model" -> <|"RotationMatrix" -> {{0.9917148502644403, 
                    0.06287175632235532, -0.11202141769287435`}, \
{-0.1265692971241128, 0.6272548181519941, -0.7684605429887839}, {
                    0.02195150998193674, 0.7762722044244861, 
                    0.6300155520679327}}, 
                    "Precisions" -> {0.9850275205555219, 11.288426462438553`, 
                    15.75545975647324}, "NoisePrecision" -> None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {0.00008586486707616926, 0.06811884470934519, 
                    0.06540693307032462}, "Output" -> <|
                    "(f2(f1f3))" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    3.|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    3182052616854362584|>], "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|"Info" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>, "Key" -> 
                    "(f2(f1f3))", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|"CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 3, "Options" -> <||>|>|>|>, 
                    "TrainingInformation" -> <|
                    "Configurations" -> Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|"CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> MachineLearning`MLProcessor[
                    "ImputeMissing", <|"Invertibility" -> "Perfect", 
                    "Missing" -> "Imputed", "StructurePreserving" -> True, 
                    "Input" -> <|"(f2(f1f3))" -> <|"Type" -> 
                    "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {0.00008586486707621846, 0.06811884470934527, 
                    0.06540693307032454}, "StandardDeviation" -> {
                    0.9997970904899977, 0.2976550432233476, 
                    0.28118264988309083`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 3, "Output" -> <|
                    "(f2(f1f3))" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    3.|>|>, "Type" -> "NumericalVector", 
                    "Version" -> {14.1, 0}, "ID" -> 8708448484904811398|>], 
                    "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{"Value", "Options", "NaiveImputer", 
                    "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|"Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                    "NaiveImputer" -> MachineLearning`MLProcessor[
                    "ImputeMissing", <|"Invertibility" -> "Perfect", 
                    "Missing" -> "Imputed", "StructurePreserving" -> True, 
                    "Input" -> <|"(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {0.00008586486707621846, 0.06811884470934527, 
                    0.06540693307032454}, 
                    "StandardDeviation" -> {0.9997970904899977, 
                    0.2976550432233476, 0.28118264988309083`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14.1, 0}, "ID" -> 
                    8708448484904811398|>], "InputDimension" -> 0, 
                    "OutputDimension" -> 3, 
                    "Log" -> <|"Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"1st"}, "ID" -> 1661388309095108015|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {16.}, "ID" -> 2537690409849976938|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"female"}, "ID" -> 2384008819527855069|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.090449, "MaxTrainingMemory" -> 
                    5907640, "DataMemory" -> 92064, "FunctionMemory" -> 63480,
                     "LanguageVersion" -> {14.1, 0}, "Date" -> 
                    DateObject[{2024, 8, 11, 11, 42, 
                    53.81001`8.483438047459408}, "Instant", "Gregorian", -4.],
                     "ProcessorCount" -> 10, "ProcessorType" -> "ARM64", 
                    "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}|>, "LogPDFDistribution" -> 
                    MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-2.601638468457201, -2.601638468457201, \
-1.9667307567073824`, -1.925931285270367, -1.9159736592477377`, \
-1.8760935867091197`, -1.8709836158591366`, -1.8634431065601027`, \
-1.8597421996114394`, -1.8547668397968364`, -1.622650228341949}, 
                    "LeftBoundary" -> -1.9667307567073824`, "LeftScale" -> 
                    0.31745385587490926`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                    Around[5.8073861239683815`, 0.23837020239606438`], 
                    "EntropySampleSize" -> 10|>], 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "EvaluationStrategy" -> "ModeFinding", 
                    "Version" -> {14.1, 0}, "ID" -> 616651398117295976|>], 
                    MachineLearning`MLProcessor[
                    "Threads", <|"Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 
                    2|>|>, "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|"Type" -> "Numerical", "Weight" -> 
                    1|>|>, "Output" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 5896072734193971629|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 
                    1|>, "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 4638787354345331223|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {29.718919524405504`}, 
                    "StandardDeviation" -> {14.402406360492689`}, 
                    "Output" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 7791071911106811572|>], 
                    MachineLearning`MLProcessor[
                    "EmbedNominalVector", <|
                    "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Index" -> {<|"1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                    "female" -> 1, "male" -> 2|>}, 
                    "Output" -> <|"(f1f3)" -> <|
                    "Weight" -> 2, "Type" -> "NumericalVector"|>|>, 
                    "EmbeddingVectors" -> {
                    RawArray["Real32",{{0., 0., 0.}, {
                    0.2617093026638031, -1.2387990951538086`, \
-0.9445381164550781}, {0.08440400660037994, 
                    0.4819034934043884, -0.3833095133304596}, \
{-0.7164707183837891, 0.8048402070999146, 0.06659186631441116}}], 
                    RawArray["Real32",{{0., 0.}, {-0.9347169995307922, 
                    0.36226585507392883`}, {-1.355437159538269, \
-0.7404462099075317}}]}, "Version" -> {14.1, 0}, "ID" -> 
                    5988483279055413579|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|"Weight" -> 2, "Type" -> 
                    "NumericalVector"|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 6]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|"(f2(f1f3))" -> <|
                    "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    7619735631186802745|>]}, "Invertibility" -> "Impossible", 
                    "StructurePreserving" -> True, "Missing" -> 
                    "Imputed"|>]|>, 
                    "Output" -> <|
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor[
                    "WrapMLDataset", <|
                    "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>], "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|"Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed", "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 1277826592583279905|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Index" -> {<|"died" -> 1, "survived" -> 2|>}, 
                    "MissingCode" -> 0, "Version" -> {14.1, 0}, "ID" -> 
                    2833981340056725226, 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "FromVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|"f1" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {2}|>|>, 
                    "Output" -> <|"f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 6294800060345789738|>], 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 
                    2|>, "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"|>]}, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "ProbabilityPostprocessor" -> Identity, "Name" -> 
                    "class", 
                    "Marginal" -> <|
                    "died" -> 0.599250936329588, "survived" -> 
                    0.40074906367041196`|>|>, "LabelSplitter" -> 
                    MachineLearning`MLProcessor[
                    "FeatureLabelSplit", <|
                    "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
                    "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
                    "RecalibrationFunction" -> None, "ImputationStrategy" -> 
                    Automatic, "Prior" -> Automatic, "Utility" -> 
                    SparseArray[
                    Automatic, {2, 3}, 0., {
                    1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], "Threshold" -> 0, 
                    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
                    Automatic, "BatchProcessing" -> Automatic, 
                    "Model" -> <|"Trees" -> {
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 1, 3, 4, 1, 1, 1, 1, 1, 3, 3, 
                    2, 4, 3, 2, 1, 2, 4, 2, 2, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, 
                    0.48190261919988764`, 0.5403582933002324, 
                    0.4819028041602005, -0.9445385161162694, 
                    1.7271902290011028`, 
                    0.22223185914743815`, -0.14851843814472865`, 
                    1.2707222148711477`, -1.5761603461802345`, 
                    0.8048404957884818, 0.4819028701865009, 
                    0.08440499194527107, 0.06659244238350315, 
                    0.8048400776018605, 0.08440325791707604, 
                    0.5450550209979799, 0.08440319017193709, 
                    0.0665922616037582, -0.7164702143780808, \
-0.7164701380713883, 0.784296667908154}, "Children" -> 
                    RawArray["Integer16",{{2, -10}, {3, 4}, {5, 6}, {-1, 
                    10}, {7, -11}, {9, -12}, {8, -13}, {-2, -14}, {-3, -15}, {
                    11, 12}, {-4, -16}, {-5, 13}, {14, -17}, {15, -18}, {16, 
                    17}, {18, -19}, {-6, 22}, {19, -20}, {20, -21}, {-7, 
                    21}, {-8, -22}, {-9, -23}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
                     2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 2, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 
                    3, 3, 4, 1, 4, 1, 3, 2, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901623298622, 
                    0.08440499276156221, 
                    0.08661456234785836, -1.5761603461802345`, \
-0.8146664053024129, 0.06659197463186539, 0.26170837233202304`, 
                    0.5110811202831282, 0.2955249313788162, 
                    3.17161541228724, -0.11813095011155161`, \
-0.39043231430471037`, 0.4819042690090245, 
                    0.8048403521031808, -0.3833103221097631, \
-0.15073473436532359`, -0.6639237694673055, 0.012717716763380044`, 
                    0.6433722791931649, 0.08440382951277292, 
                    0.576137139951479, 0.8857577116828903}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {13, 14}, {
                    6, -11}, {-1, 7}, {-2, -12}, {-3, 8}, {9, 10}, {
                    11, -13}, {-4, -14}, {12, -15}, {-5, -16}, {15, 16}, {
                    20, -17}, {17, -18}, {-6, 18}, {-7, -19}, {
                    19, -20}, {-8, -21}, {21, -22}, {-9, 22}, {-10, -23}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 2, 2, 2, 2,
                     1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 4, 1, 4, 4, 1, 1, 2, 1, 4, 1, 
                    1, 6, 1, 2, 1, 6, 4, 3, 1, 3, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452286253411, \
-1.2387981086152688`, 
                    0.06659104317137932, -1.4018508603975857`, \
-0.15835891021833803`, 
                    0.06659099051446427, -1.4325834603896546`, \
-1.7827601048266892`, 
                    0.08440499276156221, -0.6776967164768282, \
-0.3833101093912381, 0.3630665666961099, -0.6665338051302081, 
                    0.3622668309738102, -0.22269162884185034`, \
-0.7164712506762649, 
                    2.0947570523638, -0.1890901678552448, \
-0.9445376554928391, -1.2388000440890874`, -1.2609990082675324`, \
-1.2387989890912365`, 1.37826530171}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {14, 15}, {5, 
                    6}, {-2, 7}, {9, 10}, {8, -14}, {-3, -15}, {11, 12}, {-4, 
                    13}, {-5, -16}, {-6, -17}, {-7, -18}, {
                    16, -19}, {-8, -20}, {-9, 17}, {18, 19}, {-10, 
                    20}, {-11, -21}, {21, 22}, {-12, -22}, {
                    23, -23}, {-13, -24}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 1, 1, 2, 2, 2, 1, 2,
                     1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 3, 3, 4, 1, 5, 1, 1, 3, 2, 2, 4, 
                    1, 3, 2, 4, 1, 2, 5, 5, 6, 1, 5, 5, 6, 1, 1, 2, 1, 5, 2, 
                    1, 1, 4, 1, 3, 1, 1, 4, 1, 4, 3, 3, 5}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAeKENZ7b62ZvtWfItet0OPjS3kDEgrXx+j37gM6bDsY8
G+01+KqaVZefsBcQag22Cfq0P6Pmqn3X8o/7TyjFC+7Y9G2/hcL9d3ZAfRoH
nzCGvH22X+LGngMgOqPXo00WqD+hVuFSj9/D/RwpTQUtQHMjck1fPba8sn8H
lwWzRseN/QsSfjJ2f/5gHyDzJycUqK/i3aes++u/7u/4VuAIoh98e7t318bn
+xv6GxvWFE+1X3Er8d5doPgM799yIPkP0/Kj4/Sv2184vnnhG/F7+yMOPfQv
X7XQXqPBkLsZ6C+Llp913aWP90/gCvADuf/C+vbTE4DiCTPY2MTmMzpEbNXv
/P//6/6ArKSHKy3f7Xc4s0vVP3erfcCfbb9lL33ef8NGTHe+6D37D//5VBsW
PrZvOKndvQyozmLSnPpNfYf3rzCdmbwCyD9QsOCHPFC9w8e55nVAf2r8lXMF
2QcAwfvAww==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {28, 29}, {6, 7}, {
                    22, -27}, {8, 9}, {-1, 19}, {10, 11}, {
                    16, -28}, {-2, -29}, {-3, 12}, {13, -30}, {14, -31}, {-4, 
                    15}, {-5, -32}, {-6, 17}, {18, -33}, {-7, -34}, {-8, 
                    20}, {-9, 21}, {-10, -35}, {23, 24}, {-11, 25}, {-12, 
                    27}, {26, -36}, {-13, -37}, {-14, -38}, {-15, 30}, {-16, 
                    44}, {31, 32}, {33, 34}, {40, -39}, {-17, -40}, {35, 
                    36}, {-18, 37}, {-19, 39}, {-20, 
                    38}, {-21, -41}, {-22, -42}, {41, -43}, {-23, 42}, {-24, 
                    43}, {-25, -44}, {-26, -45}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
                     1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
                    1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 1, 1, 3, 2, 1, 4, 3, 2, 4, 2, 2, 
                    4, 3, 3, 1, 3, 2, 4, 3, 2, 3}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, \
-1.7153847949014285`, -1.0428384712934875`, 0.8048394987076373, 
                    0.08440490388880761, -1.9934772225667725`, 
                    0.06659270480800084, 
                    0.8048405864813315, -0.7164715905333523, 
                    0.06659111526874073, -0.7164711755986488, 
                    0.08440392085528658, -0.6639238482297092, 
                    0.8048406402197479, 
                    0.804839834168968, -1.9592931686934634`, 
                    0.8048396954688624, -0.7164712494807377, \
-0.9445378088230276, 0.48190344156753184`, -0.7164699041519542, 
                    0.8048404822541997}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {-1, 6}, {
                    7, -14}, {-2, -15}, {8, -16}, {9, -17}, {-3, 
                    10}, {-4, -18}, {-5, 13}, {18, 19}, {-6, 14}, {15, -19}, {
                    16, -20}, {-7, 17}, {-8, -21}, {-9, 20}, {-10, -22}, {-11,
                     21}, {-12, 22}, {-13, -23}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 1, 2, 1, 2,
                     2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 1, 1, 1, 2, 6, 4, 3, 3, 1, 1, 
                    1, 1, 1, 4, 1, 1, 6, 3, 6, 2, 1, 4, 1, 1, 3, 4, 4, 1, 2, 
                    4, 1, 1, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.9445372652198092, 
                    0.06565169184785269, -1.0192934839941046`, \
-1.2291302824899066`, -0.7164705197019448, -0.7404466636574432, 
                    0.06659281657808724, 0.48190285566882984`, 
                    0.8048404175998929, -0.6106964066935507, \
-0.7119644559011302, 0.09177810731503622, 
                    0.020707719449085005`, -0.7507498697537818, 
                    0.0665927120308134, 
                    0.9521145478256923, -0.25449003727991837`, \
-0.7404453656478447, 0.8048402986166749, -0.7404453292210773, 
                    0.08440335228845508, 0.3673462681692494, 
                    0.06659092964863844, -0.8814380513354418, \
-0.18878199588704114`, 
                    0.8048399030448055, -0.38331007116046, \
-0.15835900129873637`, 0.021238463337153318`, 
                    0.0844030980575955, -0.15835905502684944`, 
                    1.3451345488902273`, 
                    1.0616501002221774`, -0.9445383685788356}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {22, 
                    23}, {-1, -20}, {6, 7}, {-2, -21}, {8, 9}, {10, -22}, {15,
                     16}, {11, -23}, {12, 13}, {-3, -24}, {
                    14, -25}, {-4, -26}, {-5, 17}, {18, -27}, {-6, -28}, {19, 
                    20}, {-7, 21}, {-8, -29}, {-9, -30}, {24, -31}, {-10, 
                    31}, {25, 26}, {-11, 27}, {-12, 30}, {28, -32}, {-13, 
                    29}, {-14, -33}, {-15, -34}, {32, 33}, {-16, 34}, {-17, 
                    35}, {-18, -35}, {-19, -36}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 2, 1, 1, 1, 2, 2,
                     2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 
                    1, 2, 1, 2, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 2, 2, 1, 3, 1, 1, 2, 3, 2, 1, 4, 
                    3, 1, 6, 5, 6, 1, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452307497795, 
                    0.26170976235412535`, 0.08440335228845508, 
                    2.1089352469494678`, 0.80484086254702, 
                    2.2026787253153515`, -0.43251049263962127`, \
-0.7164712438439329, 0.4819035653421335, -0.7164706250073696, 
                    0.6050471434721567, -0.3833086150236018, \
-1.238799774863116, -1.3694228361675815`, 
                    0.3622668124318187, -0.9347162629135068, 
                    0.36226520192373624`, 
                    0.04841188520198886, -0.9445380372388783, \
-0.38330986355317753`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {5, 6}, {-2, -9}, {
                    7, -10}, {12, -11}, {8, 9}, {-3, -12}, {-4, 10}, {
                    11, -13}, {-5, -14}, {13, -15}, {14, 15}, {-6, -16}, {
                    16, -17}, {17, 18}, {19, -18}, {
                    20, -19}, {-7, -20}, {-8, -21}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 2, 1, 2,
                     1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 3, 2, 1, 1, 3, 4, 1, 4, 1, 4, 
                    1, 2, 4, 2, 4, 2, 2, 3, 1, 3, 1, 1, 1, 1, 2, 4, 2}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-0.9445375549766322, 
                    0.4819042622466623, -0.716471017631914, \
-1.4018508603975857`, -1.5015979765205163`, 
                    0.8048400822134578, -0.15835908943838928`, 
                    1.1264728322740432`, -0.6639238034608894, 
                    0.9546590372198276, 0.06659196031082437, 
                    0.47019164372282907`, 0.0844037958080549, 
                    0.0665914124925826, 0.08440307584557027, 
                    0.06659203155773397, 0.2617090355482148, 
                    0.2617089131431456, 
                    0.48190265072469574`, -0.2886746243696767, \
-1.23879974447744, -1.914893618042358, -0.4000361830596426, \
-0.6017901573826023, 0.12233019577325466`, -0.7164702950010886, 
                    0.0665909087338099, 0.08440366740067418}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {16, 17}, {-2, 
                    5}, {6, 7}, {8, -12}, {9, -13}, {-3, -14}, {10, -15}, {11,
                     12}, {13, -16}, {14, -17}, {-4, -18}, {
                    15, -19}, {-5, -20}, {-6, 18}, {23, -21}, {19, -22}, {
                    20, -23}, {21, -24}, {22, -25}, {-7, -26}, {-8, 24}, {25, 
                    26}, {27, -27}, {29, -28}, {-9, 
                    28}, {-10, -29}, {-11, -30}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 2, 1, 1, 2, 1, 2, 2,
                     1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 
                    2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 3, 3, 3, 4, 3, 1, 1, 2, 3, 5, 2, 
                    4, 4, 3, 2, 3, 1, 2, 2, 4, 4, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.3784478009287384, 0.481904292589614, 0.8048408719025781, 
                    0.06659246002639596, 
                    0.8048408680923389, -1.5071458300493727`, \
-1.9936274740575843`, 0.08440490388880761, 
                    0.8048395930387287, -1.3554369767901058`, 
                    0.08440327947148463, -0.3833093555255713, 
                    0.06659154000733525, 
                    0.8048396814525978, -0.7164702242656018, 
                    0.8048396099685293, 
                    2.2026787253153515`, -0.7164712339849144, 
                    0.26170894098705855`, 0.06659185341125362, 
                    0.06659113351083301, -1.1626909061865582`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {18, 19}, {
                    5, -10}, {6, -11}, {7, -12}, {8, 9}, {-2, 10}, {
                    11, -13}, {-3, -14}, {12, -15}, {13, -16}, {-4, 14}, {
                    15, -17}, {16, -18}, {-5, 17}, {-6, -19}, {20, -20}, {-7, 
                    21}, {-8, -21}, {22, -22}, {23, -23}, {-9, -24}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 2, 1, 1, 1, 2, 1, 1,
                     1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 2, 2, 4, 4, 4, 1, 4, 6, 4, 2, 6, 
                    4, 6, 1, 3, 2, 1, 3, 1, 1, 3, 3, 4, 2, 4}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, 
                    0.17305667026296945`, 0.08440308855260936, 
                    0.06659281657808724, 0.06659233637797202, 
                    0.06659225370668354, -1.5761603461802345`, 
                    0.06659197463186539, -0.7404458027817897, 
                    0.06659166996210486, -0.7164699907084904, \
-0.740445751390375, -0.38331022989100205`, 
                    0.36226607099708863`, -0.29377893225918905`, 
                    0.8048405867770416, 
                    0.26170894098705855`, -0.39721850370023315`, 
                    0.6433717837034774, 0.08661456234785836, 
                    0.36532894361318213`, -1.2388000433243906`, 
                    0.4819034278430361, -0.383309778357368, 
                    0.2617089131431456, -0.3833099033493994}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -10}, {16, 17}, {
                    5, -11}, {6, -12}, {7, -13}, {8, 9}, {10, -14}, {11, 
                    12}, {-1, -15}, {-2, -16}, {13, 14}, {-3, -17}, {
                    15, -18}, {-4, -19}, {18, -20}, {22, -21}, {19, 
                    20}, {-5, -22}, {-6, 21}, {-7, -23}, {-8, 23}, {
                    24, -24}, {25, -25}, {26, -26}, {-9, -27}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
                     2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 5, 1, 1, 4, 1, 3, 1, 3, 1, 4, 1, 
                    5, 5, 5, 4, 5, 2, 3, 1, 1, 1, 2, 3, 2, 1, 4, 2, 3, 3, 3, 
                    1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.48190341790763824`, -1.1450770691300658`, \
-1.4786207366998045`, -1.0567527928391591`, -0.944537844108277, 
                    3.17161541228724, -1.2387982175858578`, 
                    1.5506494076425934`, 
                    0.48190316218698914`, -0.3587598947674322, \
-0.38330940039232253`, 
                    1.1667866784522474`, -1.355436747429703, \
-0.9347179535501668, -0.9347175635994107, -0.15835927475169087`, \
-1.355437258378588, -0.7164710071012346, 
                    0.8048393398968043, -0.6826003252292221, \
-0.5041474435674429, 0.17749843614436145`, 0.0844048322376515, 
                    0.8048401167971653, 
                    0.0844040063792354, -0.4280752945813231, \
-0.383309809143598, -0.7164704545548712, 0.8048408718372899, 
                    0.8048395026772335, 
                    0.8048393333426995, -0.015020650494719193`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {13, 14}, {-1, 
                    6}, {-2, 11}, {7, -18}, {8, 9}, {-3, -19}, {
                    10, -20}, {-4, -21}, {-5, 12}, {-6, -22}, {-7, 15}, {17, 
                    18}, {-8, 16}, {-9, -23}, {19, 20}, {-10, 25}, {21, 
                    22}, {-11, 23}, {-12, -24}, {-13, -25}, {
                    24, -26}, {-14, -27}, {26, -28}, {27, 28}, {-15, 29}, {
                    32, -29}, {30, -30}, {31, -31}, {-16, -32}, {-17, -33}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 2, 2, 1, 2, 2, 2,
                     1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 
                    1, 2, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 5, 3, 4, 3, 3, 2, 1, 2, 1, 1, 1, 
                    1, 1, 2, 2, 2, 6, 6, 1, 1, 4, 5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440475076547038, -1.1450770781540704`, \
-1.2387997893253004`, 0.06659244238350315, 0.48190419933156337`, 
                    0.48190261919988764`, -0.7164702242656018, \
-1.8187402309462755`, -0.716470119449772, -0.6728661161292182, \
-0.1879192274545156, -0.29304359594838525`, 
                    0.08661456234785836, -0.39721850370023315`, \
-0.7164712339849144, -0.7164698851528657, -0.7164697853148434, 
                    0.362265773476782, -0.740445435393398, \
-0.2900327910791818, -0.15140446937597685`, -0.9445383700387238, \
-1.1450780105730765`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {18, 19}, {
                    6, -13}, {-1, 11}, {-2, 7}, {8, 9}, {-3, 
                    10}, {-4, -14}, {-5, -15}, {12, 13}, {
                    14, -16}, {-6, -17}, {15, -18}, {-7, 16}, {-8, 
                    17}, {-9, -19}, {20, -20}, {21, 
                    22}, {-10, -21}, {-11, -22}, {23, -23}, {-12, -24}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 1, 1, 1, 2, 1, 1,
                     2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 3, 1, 4, 1, 1, 5, 1, 4, 2, 1, 
                    1, 2, 4, 3, 4, 4, 2, 2, 4, 4, 1, 3, 1, 1, 3, 2, 4, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, \
-0.6639238034608894, 0.48190424871182413`, -1.0192934839941046`, 
                    0.06659269353470376, 
                    1.894388066259216, -1.7153847949014285`, \
-1.355437258378588, -0.5431718089802118, -0.3833095212246924, 
                    0.08440433517869839, -0.040070699294831036`, \
-0.5719541040836695, -0.716470850904579, 0.0665914936731179, 
                    0.8048402986166749, 0.06659191366372841, 
                    0.0665914427611044, -0.7164701692386766, 0.26170902991753,
                     0.06659180055610725, -0.38330938368866896`, 
                    1.7909219576953035`, 
                    0.4819036182726779, -0.1879192274545156, \
-0.12167430614032626`, 
                    0.8048408749755698, -0.7164701937817863, \
-0.1583590292731376, 0.08661456234785836}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {20, 21}, {-1, 6}, {
                    7, -15}, {-2, -16}, {-3, 8}, {9, 10}, {11, 12}, {-4, 
                    18}, {13, -17}, {-5, 16}, {14, -18}, {-6, 
                    15}, {-7, -19}, {17, -20}, {-8, -21}, {
                    19, -22}, {-9, -23}, {22, -24}, {25, 26}, {23, -25}, {
                    24, -26}, {-10, -27}, {27, -28}, {-11, 30}, {
                    28, -29}, {-12, 29}, {-13, -30}, {-14, -31}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 1, 2, 1, 1, 1, 2,
                     2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 
                    2, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 2, 2, 2, 4, 3, 3, 1, 1, 3, 1, 
                    1, 4, 4, 4, 1, 2, 2, 1, 3}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-1.6103043627385922`, -0.3160333560047319, -0.7164703348310608, 
                    0.0844048322376515, 
                    0.06659101985490201, -1.2387991510292942`, 
                    0.48190285566882984`, -0.3932291294918677, 
                    1.7918905584149165`, -1.238798978115037, 
                    1.3117204349090752`, -0.1581388451387331, \
-0.3833094789561864, -0.9445390705447174, -0.6639242964145025, \
-0.4648333309336259, 0.2617096780601522, 0.261709031979136, 
                    3.17161541228724, -1.2387988325697261`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 
                    5}, {-1, -10}, {-2, -11}, {6, 7}, {8, 9}, {10, 
                    11}, {-3, -12}, {-4, -13}, {12, -14}, {-5, 
                    13}, {-6, -15}, {14, 15}, {16, -16}, {-7, 18}, {
                    17, -17}, {-8, -18}, {19, -19}, {20, -20}, {
                    21, -21}, {-9, -22}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 1, 2, 1, 2, 2, 2, 2,
                     2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 5, 5, 1, 4, 4, 1, 4, 4, 3, 5, 1, 
                    4, 1, 3, 1, 1, 1, 4, 2, 1, 1, 3, 2, 4, 6, 1, 6, 5, 4, 4, 
                    1, 1, 1, 4, 2, 4, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQB+KM39ffN1y/Z7+DyTTUJujT/hn1b6aZvny7P8PJeKvn
n4/7L3w4kbvc8t3+gKykhyuBNEds/yye+r32AhZqp5YB+Q3c0qkWPBvtf2j7
fG4BmrPiqg7z/fVf9yvUpf3Zmnpvv8Mqo1PGQPmEgvWmHuv+7n+Qry/iePCl
fULGr8vtGg/3H9hdemNl4sP9P8TuVVpdubKfw5D7q2rHjf0TisQeBr19tj/i
muonF9kf+1fMs9n9a+af/QFdan4OQP0XmEMOguQzlK47iLse2b9iwvWGXRuf
76/QFpKz/fvYXuOdWyqIbzAvN/Ie0D0Sy1qMzYDu4Lgy5YUmkD5wZ/fh9qnP
9n8wuhozvf3m/hs2qz5FFv/eH3Hc/ocUUH7HL9X+qtlb7QUW9tyVBPJvlP/8
JwsSdypvAdEArEeqRA==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {9, 10}, {-1, 
                    6}, {-2, -22}, {7, 8}, {-3, -23}, {-4, -24}, {11, 
                    12}, {-5, 30}, {13, 14}, {-6, -25}, {15, 16}, {25, 26}, {
                    17, 18}, {-7, -26}, {19, 20}, {-8, -27}, {-9, 21}, {-10, 
                    24}, {22, 
                    23}, {-11, -28}, {-12, -29}, {-13, -30}, {-14, -31}, {27, 
                    28}, {-15, -32}, {-16, 29}, {-17, -33}, {31, 32}, {33, 
                    34}, {-18, -34}, {35, 36}, {-19, -35}, {37, -36}, {
                    38, -37}, {-20, -38}, {39, -39}, {-21, -40}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
                     1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 
                    1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 2, 4, 4, 4, 4, 1, 2, 3, 4, 1, 
                    1, 3, 1, 1, 1, 1, 5, 5, 1, 1, 3, 4, 4, 2, 2, 1, 1, 6, 1}],
                     "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440451346399702, -0.18909013564129928`, 
                    0.2617097469253693, 0.06659215413599306, 
                    0.0665908971683431, 0.0665918429166299, 
                    0.0665918335435941, -1.5761603461802345`, \
-0.7164702463034338, 0.48190261919988764`, 0.06659099051446427, 
                    1.651026519853481, -0.1879192274545156, 
                    0.4819042622466623, 
                    0.020773425834017173`, -1.2651155967275791`, \
-1.4384902395349215`, -0.7042541459950389, -1.1450770357399342`, \
-1.3554373860851072`, -0.8146664053024129, 
                    2.2006368537430276`, -1.2388000155813348`, \
-0.9445390535162597, -0.3833096886345171, 0.26170850893206055`, 
                    0.26170847596941504`, 2.133723490849647, 
                    0.29731181598444456`, -0.740445300141026, 
                    1.65457461522994}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {19, 20}, {
                    6, -16}, {12, 13}, {7, -17}, {8, -18}, {9, 
                    10}, {-1, -19}, {-2, 11}, {-3, -20}, {14, -21}, {
                    17, -22}, {15, 16}, {-4, -23}, {-5, -24}, {-6, 
                    18}, {-7, -25}, {21, 22}, {-8, 28}, {-9, 23}, {
                    26, -26}, {-10, 24}, {-11, 25}, {-12, -27}, {
                    27, -28}, {-13, -29}, {29, -30}, {-14, 30}, {
                    31, -31}, {-15, -32}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
                     2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 
                    1, 2, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 3, 3, 4, 4, 2, 1, 4, 3, 4, 1, 1, 
                    4, 1, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-1.1450770691300658`, 
                    0.48190285566882984`, 0.4819027706725376, 
                    0.0665926999694646, -0.3833101921762543, 
                    0.26170882210548685`, 
                    1.0870041445668157`, -0.9445383097872506, 
                    0.8048396073880157, 
                    0.0665919528570007, -1.4018508603975857`, \
-1.5439548912572842`, -0.38330952272742325`, -0.5408386329690238, 
                    0.08679171913262895, -0.6746621346699362}, "Children" -> 
                    RawArray["Integer16",{{2, -7}, {3, 4}, {5, -8}, {9, -9}, {
                    6, -10}, {7, -11}, {8, -12}, {-1, -13}, {10, 11}, {
                    12, -14}, {-2, 16}, {-3, 13}, {14, -15}, {-4, 
                    15}, {-5, -16}, {-6, -17}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 1, 1, 2, 2, 1, 1,
                     1, 1, 2, 1, 1, 1, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 5, 1, 2, 4, 3, 1, 1, 3, 1, 1, 
                    2, 2, 3, 2, 3, 4, 1, 4, 4, 1, 1, 2, 1, 4, 1, 1, 2, 3, 1, 
                    3, 3, 1, 2, 1, 4, 4, 3, 3, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQBOIdZzUn983eav+iLtNS2uTEfgG+GT42QZ/2X+h0fPnZ
/Od+g7wDrqVA+QXFvoYWPBvtOVKaClqu37O/obyMk/fye3sLY6fpKmwv9n8I
fTgbJL6gNaciiPHlfo3oe689ap/YN0THzAl5+2x/QdLLhiAg3eE2kcXh4Ev7
Hdd6nEHiE7SF19gD+T9M1qcpAs3XyDZZZ7Zor73EshZjMyB/xxK1faZA+sah
Qyszc27un+A1/X6q+qv9HazzJUKB+gM+Gm2rkV1jv6LJ8Ig+UJ1D4o0v1jKf
9ydM+qN56OCL/RYqzn0gdQqxXAzNQPcFfHqn9YDn4f4Ak5vrQPZq5ArtBLnn
gURXQwbPC/sMmf8/ruy/YJ8wg41NbD6jw4k2YT2Vjhv7JWaw8a60fLf/R+iu
f/KXPu/vaJDeA6I5pm5TXFp5aT8A58Om5w==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {35, 36}, {-1, 6}, {
                    20, -21}, {7, 8}, {9, 10}, {19, -22}, {11, -23}, {-2, 
                    12}, {-3, -24}, {13, 14}, {-4, 15}, {-5, -25}, {
                    16, -26}, {-6, 17}, {18, -27}, {-7, -28}, {-8, -29}, {21, 
                    22}, {23, -30}, {-9, -31}, {24, 25}, {-10, 26}, {28, 
                    29}, {27, -32}, {-11, -33}, {-12, 30}, {-13, 33}, {-14, 
                    31}, {-15, 32}, {-16, -34}, {34, -35}, {-17, -36}, {
                    37, -37}, {39, -38}, {38, -39}, {-18, -40}, {-19, 40}, {
                    41, -41}, {-20, -42}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 2, 1, 1, 1, 1,
                     2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 
                    2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2}], "RootIndex" -> 1,
                     "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 6, 2, 3, 1, 4, 1, 6, 3, 1, 1, 
                    1, 2, 1, 2, 2, 3, 3, 6, 5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.084404798983167, -0.1890901318453273, \
-0.740445307268998, -0.7164715905333523, 
                    0.48190261919988764`, -1.5761603461802345`, 
                    0.06659098419627696, -0.8146664053024129, 
                    0.36226520192373624`, -1.2387999370702687`, 
                    1.0230660440571935`, 1.055725206299666, 
                    0.3616612976808913, 
                    0.08440499276156221, -0.39043231430471037`, 
                    0.26170837233202304`, 
                    0.26170959887187273`, -1.2387997959085926`, \
-1.2387983722594775`, 0.3622650134604881, -1.145077898741306}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -12}, {8, 9}, {-1, 
                    5}, {-2, 6}, {-3, 7}, {-4, -13}, {-5, 10}, {17, 18}, {11, 
                    12}, {13, -14}, {14, -15}, {-6, -16}, {-7, 15}, {-8, 
                    16}, {-9, -17}, {19, -18}, {-10, -19}, {20, -20}, {
                    21, -21}, {-11, -22}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 2, 1, 2, 1, 1, 1, 2, 2,
                     1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 3, 4, 2, 1, 2, 1, 1, 2, 4, 2, 
                    1, 4, 1, 3, 3, 1, 4, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452286253411, \
-1.3440702023788447`, 0.8048393333426995, 0.06659166996210486, 
                    0.17305666339149228`, -1.9934772225667725`, \
-0.7164699716864735, 1.6545602934186228`, -0.6769070275065099, 
                    0.0844037958080549, 0.06659148664406789, 
                    0.08440311076463469, -0.8400222088051104, \
-0.38330960427103644`, -1.7177794638029802`, 
                    0.48190334162362625`, -1.2387997959085926`, \
-0.2886746243696767, -0.9445383685788356, 1.37826530171, 1.5518940518913613`},
                     "Children" -> RawArray["Integer16",{{2, 3}, {4, 5}, {
                    11, -11}, {-1, 6}, {7, 8}, {-2, -12}, {9, 
                    10}, {-3, -13}, {-4, -14}, {-5, -15}, {12, -16}, {13, 
                    14}, {-6, -17}, {15, -18}, {-7, 16}, {17, -19}, {18, 
                    19}, {-8, -20}, {20, -21}, {-9, 21}, {-10, -22}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 2, 1, 2, 2, 1,
                     1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{4, 6, 1, 1, 5, 1, 5, 5, 3, 4, 1, 1, 
                    3, 3, 4, 6, 4, 1, 1, 1, 1, 6, 4, 2, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.6639237976144488, \
-0.740445307268998, -0.36281291301271157`, -1.0192934839941046`, \
-1.355437719871313, 1.894388066259216, -1.355436199837337, -0.934717868888761,
                     0.481903033015727, 
                    0.06659105625495532, -1.85504933329414, \
-1.998964821178511, 0.8048395122204743, 0.8048402707611002, 
                    0.0665908971683431, 
                    0.3622662293177732, -0.3833099564839877, \
-1.038072473901254, -1.062332114537483, -1.9904202277061422`, \
-1.8181813925810868`, 0.36226520123439077`, 
                    0.06659103600886407, -0.31603341018431275`, \
-0.14766967848101364`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {7, 8}, {-1, 
                    6}, {-2, -16}, {-3, -17}, {9, 10}, {23, 24}, {-4, 11}, {
                    15, 16}, {12, 13}, {-5, 14}, {-6, -18}, {-7, -19}, {17, 
                    18}, {19, -20}, {-8, -21}, {-9, -22}, {20, -23}, {-10, 
                    21}, {-11, 22}, {-12, -24}, {-13, -25}, {-14, 
                    25}, {-15, -26}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 2, 2, 1, 2, 2, 1, 2,
                     1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 6, 3, 1, 4, 3, 3, 2, 5, 2, 1, 
                    5, 2, 3, 5, 1, 5, 3, 2, 3, 1, 1, 2, 6, 3, 6, 2, 6, 3, 1, 
                    3, 4, 3, 3, 1, 4, 4, 1, 1, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAuKCmyXvGq7fsy9w3hOxa+Pz/R6zdA1B9IK2K9kg8Rmf
Dvw18P9rP+FtSu4yy3f7FepDROtA4qXSF2pB9GGBdVf2X7C/8c5W6v76r/sn
lEWYb1M7Zl+x+1mdlPfP/Tv0ZKNNXr7dz3Dd/V3R7K32ExJvvwbpM6hwSwCJ
B7QsCjYv+r0/IybgsRGQfyOncovDwZf2HtYnBILePtvf4bf+sB2Q32Cxxmbp
6/f2HB4mmkxaJ/Z3sM6XCAXKT/jXbBejf90+QO1YMkhdRYTYlSggPyOhhAsk
v0FgrgOIX6CeudceKL9hyUxpybgn+wsmrBYC2aNgo+um0nFjv8XMyS6NQHe9
WG4p7AgUP+AV/Plk2k37CKa+62pAeYmZQhuUeTbad9wzPBA45+/+Dauv8yZK
Pty/oeKIssTa5fsN5kpL7Fe+uR8AbgSxWg==
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {17, 18}, {
                    6, -23}, {10, 11}, {-1, 7}, {8, -24}, {
                    9, -25}, {-2, -26}, {-3, 12}, {-4, -27}, {-5, 13}, {14, 
                    15}, {-6, 16}, {-7, -28}, {-8, -29}, {19, 20}, {23, 24}, {
                    21, -30}, {22, -31}, {-9, -32}, {-10, -33}, {25, 
                    26}, {-11, 35}, {27, 28}, {33, -34}, {29, -35}, {-12, 
                    31}, {30, -36}, {-13, -37}, {-14, 32}, {-15, -38}, {-16, 
                    34}, {-17, -39}, {36, -40}, {37, -41}, {-18, 38}, {-19, 
                    39}, {-20, 40}, {-21, 41}, {42, -42}, {-22, -43}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 1, 1, 1, 1, 2, 2, 2, 1,
                     1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 
                    1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 1, 3, 3, 3, 5, 4, 1, 6, 4, 1, 6, 
                    1, 5, 1, 5, 6, 6, 1, 5, 4, 4, 2, 2, 3, 1, 4, 6, 1, 1, 3, 
                    5, 1, 5, 1, 6}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440392622893067, -1.5761603461802345`, 
                    0.48190332593291085`, 0.8048395611093166, 
                    0.48190378968683545`, -0.9347178191360674, 
                    0.06659270480800084, -0.9501271737937662, \
-0.7404454830814311, 0.06659101985490201, -0.5408386329690238, 
                    0.36226517652951795`, -0.5719541040836695, \
-0.9347163556673914, -0.8135253064873895, -0.9347179368278296, \
-0.7404454557862934, -0.7404452542168043, -0.7507498697537818, \
-1.3554373840145448`, -0.9445385161162694, -0.9445390131034603, 
                    0.26170882210548685`, 
                    0.08440499194527107, -1.2387991200868225`, 
                    0.5046524866553668, -0.944538482631458, 
                    0.3622652704482525, 
                    1.3799515198206045`, -0.31841099331878064`, 
                    0.48190265113204944`, -0.9347167971819479, 
                    1.6209710047735388`, -1.145076751541474, \
-0.3218089304831082, -0.1890898199085287}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {17, 
                    18}, {-1, -21}, {6, 7}, {-2, -22}, {8, 9}, {-3, 10}, {-4, 
                    16}, {11, 12}, {13, -23}, {14, 
                    15}, {-5, -24}, {-6, -25}, {-7, -26}, {-8, -27}, {19, 
                    20}, {-9, 36}, {21, 22}, {-10, 28}, {-11, -28}, {-12, 
                    23}, {24, -29}, {-13, 25}, {-14, 26}, {
                    27, -30}, {-15, -31}, {29, 30}, {31, 32}, {
                    35, -32}, {-16, -33}, {33, -34}, {-17, 
                    34}, {-18, -35}, {-19, -36}, {-20, -37}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
                     1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 
                    1, 2, 2, 2, 2, 1, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 1, 1, 3, 5, 6, 4, 1, 1, 5, 2, 4, 
                    4, 1, 3, 1, 4, 4, 1, 1, 1, 5, 1, 1, 3, 4, 4, 1, 3, 1, 3, 
                    1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.0844047863457108, -0.6117118359292695, 
                    2.128233535087409, 
                    0.4819042595143177, -1.1450770761843039`, \
-0.7404460370261257, 
                    0.06659132112786326, -0.8447965806096596, \
-0.883059625773325, -0.9347177947969856, -0.7164716828168398, \
-0.158358815234231, 0.06659225127634505, -0.5431718089802118, 
                    0.6433719840692227, -0.2918345174732111, \
-0.38330995834411663`, 0.06659135919696557, -0.32416092367819216`, 
                    0.6294411345959787, 
                    0.7518894816661801, -1.1450770225192706`, 
                    3.17161541228724, -0.9523327570564861, \
-1.2387989890912365`, -0.944539045763567, -0.9445384566809345, 
                    1.44323236484529, 
                    0.48190435493188, -0.25303564761354513`, \
-1.2387981083960877`, 1.3451345488902273`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {22, 23}, {6, 7}, {
                    11, 12}, {-1, 8}, {10, -18}, {
                    9, -19}, {-2, -20}, {-3, -21}, {-4, 13}, {-5, -22}, {
                    14, -23}, {15, 16}, {-6, -24}, {17, 18}, {-7, 19}, {-8, 
                    20}, {-9, -25}, {-10, 21}, {-11, -26}, {24, 
                    25}, {-12, -27}, {-13, 26}, {32, -28}, {-14, 27}, {28, 
                    29}, {30, -29}, {
                    31, -30}, {-15, -31}, {-16, -32}, {-17, -33}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 1, 2, 2, 1, 1, 1, 1,
                     2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 
                    2, 1, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 3, 6, 1, 4, 4, 3, 2, 6, 5, 1, 
                    5, 1, 6, 1, 5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179535501668, \
-0.38331013197147756`, -1.2387998654475396`, -0.7404466101435387, \
-1.2734673194528767`, 0.06659146212978007, 0.0665926999694646, 
                    0.481903033015727, -0.7164699716864735, \
-0.7404459587789765, -1.3554367745856482`, 
                    1.0180505256400956`, -1.3554374063892087`, 
                    0.15949424913308174`, -0.7404458716825362, 
                    0.26160381969853086`, -1.3554366871703376`}, "Children" -> 
                    RawArray["Integer16",{{2, -9}, {3, 4}, {5, -10}, {6, 
                    7}, {-1, -11}, {8, -12}, {9, -13}, {-2, -14}, {10, 11}, {
                    12, 13}, {-3, 17}, {-4, -15}, {14, 15}, {-5, 
                    16}, {-6, -16}, {-7, -17}, {-8, -18}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 2, 2, 2, 2, 1,
                     1, 1, 2, 1, 1, 1, 1, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 5, 2, 2, 3, 1, 3, 1, 1, 1, 3, 
                    1, 4, 4, 1, 2, 1, 1, 2, 1, 4, 2, 1, 4, 3, 1, 6, 4, 4, 1}],
                     "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.4819032995437085, -0.18909017891254698`, \
-0.9347179697683687, 0.2617095351368146, 
                    0.26170902991753, -1.2387986531889545`, 
                    1.6865512456466654`, 0.4819031624067178, 
                    0.05319943798860233, 1.0892883209816393`, 
                    0.43336532701670194`, -1.2387982504591655`, \
-0.750577020355272, -0.38331021274971855`, -0.38331024081898146`, 
                    2.2006368537430276`, 
                    0.2617089131431456, -0.15003433727850002`, \
-0.21946771893070882`, 0.2617084555464779, -1.440025879100249, 
                    0.0665924608652998, -0.7164712302446565, \
-1.7855841529070702`, -0.15835848489793425`, 
                    0.8048400822134578, -1.3732032365038283`, \
-0.7404470652995094, 0.06659159970419071, 0.06659225163990357, 
                    0.2332741187931915}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {22, -14}, {
                    6, -15}, {16, -16}, {7, 8}, {9, -17}, {12, -18}, {-1, 
                    10}, {11, -19}, {-2, -20}, {-3, 13}, {-4, 14}, {
                    15, -21}, {-5, -22}, {17, -23}, {18, -24}, {19, -25}, {
                    20, -26}, {-6, 21}, {-7, -27}, {23, -28}, {-8, 24}, {25, 
                    26}, {-9, -29}, {27, -30}, {-10, 28}, {29, 
                    30}, {-11, -31}, {-12, 31}, {-13, -32}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
                     1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 
                    1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 6, 1, 2, 2, 1, 3, 1, 3, 3, 1, 3, 
                    2, 1, 3, 5, 5, 1, 3, 1, 2, 1, 2, 3, 3, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440375662390498, -0.18909016795207334`, 
                    2.133723490849647, -0.716470259437294, 
                    0.08440308855260936, -1.725463575236887, 
                    0.8048406663857426, -0.18505671345490904`, 
                    0.8048395026772335, 
                    0.8048393328389221, -1.8245288184571926`, 
                    0.48190415108193596`, -0.31603358701139284`, \
-2.0157022129509823`, -1.2387988208763723`, -1.1450770370437375`, \
-1.1450770864599953`, -0.8437522444979662, 
                    0.4819036182726779, -1.1240937307485641`, 
                    0.26170960649753416`, -0.9864273789944917, 
                    0.08440381240301986, 0.481904380405751, 
                    0.4819028041602005, -0.6821912654291795}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {15, -14}, {-1, 
                    6}, {8, -15}, {-2, 7}, {-3, -16}, {9, -17}, {10, 11}, {
                    12, -18}, {14, -19}, {-4, 13}, {-5, -20}, {-6, -21}, {16, 
                    17}, {-7, -22}, {18, 19}, {20, 21}, {-8, -23}, {-9, 22}, {
                    23, -24}, {-10, -25}, {-11, 24}, {25, -26}, {-12, 
                    26}, {-13, -27}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 2, 1, 2, 2, 1,
                     2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{4, 2, 3, 1, 4, 1, 5, 1, 1, 1, 1, 1, 
                    1, 6, 4, 1, 6, 4, 5, 5, 2, 1, 1, 2, 3, 3, 1, 1, 1, 5, 1, 
                    5}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.3833091020484476, 
                    0.08440499276156221, 
                    0.4819032982517433, -1.0548223340861007`, \
-0.9445372851892424, 
                    0.8139132334608794, -1.1450772723828333`, \
-0.3587598947674322, -0.4708561813082772, 1.9568930525649932`, 
                    0.5377795027936241, 2.1362026051953755`, 
                    0.43267759073388046`, -0.7404469465504304, 
                    0.06659247076980956, -1.9885325190581291`, \
-0.7404461286821515, 
                    0.06659226275902141, -1.1450770605718699`, \
-1.3554370414404033`, -0.7164700048261476, 
                    0.32742790853350856`, -1.4389058301089364`, \
-0.7164703429294645, 0.4819040460939825, 
                    0.80484086254702, -0.8184770814939739, \
-1.7153847949014285`, -1.158065735330915, -1.355437448929024, 
                    0.6842103345239918, -1.145077127482578}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 15}, {-2, 6}, {
                    10, 11}, {7, -18}, {8, 9}, {-3, -19}, {-4, -20}, {-5, 
                    12}, {13, -21}, {-6, -22}, {14, -23}, {-7, -24}, {16, 
                    17}, {18, 19}, {28, 29}, {20, -25}, {21, 
                    22}, {-8, -26}, {-9, -27}, {23, -28}, {-10, 24}, {-11, 
                    25}, {-12, 26}, {27, -29}, {-13, -30}, {-14, -31}, {-15, 
                    30}, {-16, 31}, {32, -32}, {-17, -33}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 2, 1, 1, 2, 1, 1,
                     2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 
                    1, 1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 4, 6, 1, 6, 3, 1, 1, 4, 2, 3, 4, 
                    1, 1, 3, 3, 1, 2, 1, 1, 4, 2}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.48190341790763824`, -0.9445375338243638, \
-0.1890901623298622, -1.1640702927604085`, -0.18909011591602232`, \
-1.2387990218916478`, -0.15003433727850002`, 
                    0.47019164372282907`, -0.383309728517637, 
                    0.08440307919932366, 
                    0.8048393328389221, -0.3833089602724131, \
-1.3878331527072856`, -0.7950080276934077, 0.8048402606020382, 
                    0.8048402551534348, -0.07575079074728541, \
-0.7164698309536348, -0.8128486075554822, -0.012800824232553243`, \
-0.38331013255519775`, 0.0844033626923042}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {10, 11}, {-2, 
                    5}, {6, 7}, {8, -13}, {9, -14}, {-3, -15}, {-4, -16}, {12,
                     13}, {21, -17}, {14, 15}, {-5, -18}, {-6, -19}, {16, 
                    17}, {18, -20}, {-7, 20}, {-8, 
                    19}, {-9, -21}, {-10, -22}, {-11, 22}, {-12, -23}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 2, 2, 1, 1, 2, 2,
                     1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 2, 5, 2, 6, 1, 4, 3, 1, 6, 4, 1, 
                    6, 1, 2, 2, 1, 2, 1, 3, 4, 1, 1, 2, 4, 1, 4, 4, 3, 3}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {0.48190261908532595`, 
                    0.2617094019726429, -0.934717943921088, 
                    0.0844033807217558, -0.7404453633147678, \
-0.14851843814472865`, -0.9445378237103643, -0.3784478009287384, \
-1.4736896173735197`, 0.3622657336936239, 0.0665926999694646, 
                    1.7909219576953035`, -0.740447092824196, \
-0.47118758751679035`, 0.08440475052283913, 
                    0.08440499276156221, -1.478746365599232, \
-0.7164702125502167, -1.4186325720385629`, 0.8048394987076373, 
                    0.06659111526874073, -1.8881896181350513`, \
-0.5408386329690238, -0.7164710965711638, -0.38330950374883965`, \
-1.9878923597917701`, 0.06659088701501592, -0.383309778357368, 
                    0.481904292589614, 0.4819043161660015}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -16}, {11, 12}, {-1, 
                    5}, {6, 7}, {8, -17}, {9, -18}, {-2, -19}, {-3, 
                    10}, {-4, -20}, {13, 14}, {26, -21}, {15, 
                    16}, {-5, -22}, {17, -23}, {19, -24}, {-6, 
                    18}, {-7, -25}, {20, 21}, {-8, 22}, {
                    23, -26}, {-9, -27}, {24, -28}, {-10, 
                    25}, {-11, -29}, {-12, 27}, {28, -30}, {-13, 29}, {-14, 
                    30}, {-15, -31}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
                     1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
                    1, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 2, 4, 1, 3, 1, 2, 1, 1, 1, 1, 
                    1, 4, 6, 5, 6, 1, 1, 1, 1, 1, 1, 4, 1, 2, 1, 1, 1, 6, 1, 
                    2, 1, 1, 4, 2, 5, 1, 3, 1, 3, 3, 3, 1, 4, 1, 2, 1, 3, 4, 
                    3, 1, 3, 2, 1, 3, 2, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJwB3QEi/iFib1JlAQAAADoAAABo+9fvgNfeP1Cyzw4bNMi/OJ/NElXt5r+w
Iov/qTnuv3BqFWRmUgFAeJYt9x3S878oEji+OGHDv4iuO8OFm7U/mMEy0eBU
9D8Yz99qSXP6P6DLGJOwfPU/EAl5kBVq/j/g0TrsTLf8P0gL4dgjiNi/ABdK
dVov1z/ob+SoNentv7jpmjO9see/EF0Wkr1b9b/gFjHs2nvkv+gjvBOjlO0/
mLlT/ffBlD/4bvQq+232vzCMsCgHbNm/IAVUCjQMsT8AZCrNRLjGPwA3UOFS
7ea/AFc9W48Z/b9Y7ENfSOX/v3Qw4FRNGQDAuFVJ372x578Qp+dd64HkP8BN
p/xU7ea/oN8agvEvwD8AeTrHT6LavzCF4UMnDLE/kIjOw+M51L/g8Lq23q/1
v+DnzGExH9i/uFf3/EDB6T/4sXV1Db/Uv+AKqAeBluQ/eMOTNkHB6T/YF+FV
QMHpPyh2IvCaAPu/6PGh1B0MsT8I+ox9Z6P+v3A7INhT7ea/GFOAiHxD4b/Q
p8BSQMHpPwjjC4svDLE/gGYwmoLX3j+Qk5umlvvov+j+jvqE194/+An/MFLt
5r9AYdj0Oxzzv6jHPX6C194/ABrnE3qbtT/Yl31OJYHSv0nu/t4=
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {15, 16}, {-1, 
                    6}, {-2, -31}, {7, 8}, {-3, 9}, {-4, 14}, {-5, 10}, {11, 
                    12}, {-6, -32}, {13, -33}, {-7, -34}, {-8, -35}, {17, 
                    18}, {22, 23}, {19, 20}, {-9, -36}, {-10, 
                    21}, {-11, -37}, {-12, -38}, {24, 25}, {44, 45}, {
                    26, -39}, {30, 31}, {27, -40}, {28, -41}, {
                    29, -42}, {-13, -43}, {-14, 32}, {-15, 42}, {-16, 33}, {
                    34, 35}, {36, 37}, {-17, -44}, {-18, -45}, {38, 
                    39}, {-19, -46}, {40, -47}, {-20, 41}, {-21, -48}, {
                    43, -49}, {-22, -50}, {46, 47}, {
                    56, -51}, {-23, -52}, {-24, 48}, {49, -53}, {50, -54}, {
                    51, 52}, {-25, 53}, {-26, -55}, {-27, 54}, {
                    55, -56}, {-28, -57}, {-29, 57}, {58, -58}, {-30, -59}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 1, 1, 2,
                     1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 
                    1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 
                    2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 2, 1, 4, 2, 3, 3, 2}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909017073719991`, \
-1.2387981086152688`, -0.7164697853148434, -0.19751613507828591`, 
                    0.06659270480800084, 0.08440499276156221, 
                    0.8048392724408098, 0.48190362195185577`, 
                    0.2617090408993037}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 9}, {-2, -5}, {
                    6, -6}, {7, -7}, {8, -8}, {-3, -9}, {-4, -10}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 2, 1, 1, 
                    2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 3, 1, 4, 3, 1, 2, 1, 3, 4, 3, 
                    2, 4, 3, 1, 1, 1, 4, 1, 1, 1, 3, 1, 3, 1, 1, 2, 2, 1, 1}],
                     "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909017073719991`, \
-0.9445379605107025, 0.804839305707576, -0.7443977323591149, 
                    0.06659225127634505, -1.2387992000263601`, \
-1.018085357176206, 0.26170994823730265`, -1.5761603461802345`, 
                    0.8048408396516891, 0.06659101985490201, 
                    0.4819041313333634, 
                    0.08440499276156221, -0.3833092976667114, \
-0.37844749701613667`, 1.0870041445668157`, 
                    0.9521145478256923, -0.6466282816163185, 
                    0.06659148664406789, -0.12508731446824184`, 
                    2.0947570523638, -0.2886746243696767, \
-1.2387987441811426`, -0.3218089304831082, 
                    0.48190303393767575`, -0.8104144219642277, \
-0.7761594285529787, 0.08440473153976924, 0.17305660093729536`, 
                    1.1667866784522474`, -0.29304359594838525`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {19, 
                    20}, {-1, -15}, {6, -16}, {7, 8}, {-2, -17}, {
                    9, -18}, {-3, 10}, {11, -19}, {12, -20}, {13, 14}, {-4, 
                    15}, {18, -21}, {16, -22}, {
                    17, -23}, {-5, -24}, {-6, -25}, {21, -26}, {31, -27}, {22,
                     23}, {24, 25}, {-7, -28}, {26, -29}, {-8, 30}, {-9, 
                    27}, {-10, 28}, {-11, 
                    29}, {-12, -30}, {-13, -31}, {-14, -32}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 2, 2, 1,
                     2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 
                    2, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 2, 4, 3, 3, 1, 3, 1, 2, 1, 
                    1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909013852325463`, 
                    0.0665926999694646, 
                    0.08440308855260936, -0.9445373522271217, 
                    0.8048408325696546, 
                    0.48190265072469574`, -0.22269162884185034`, 
                    0.8048407136663895, 
                    0.5023106161282707, -0.716469913163321, \
-1.9878923597917701`, -0.8152769130446291}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -7}, {5, 6}, {-1, -8}, {
                    7, -9}, {-2, -10}, {8, 9}, {10, -11}, {-3, -12}, {-4, 
                    11}, {-5, 12}, {-6, -13}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
                     1, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 3, 4, 2, 1, 4, 1, 4, 2, 1, 4, 
                    3, 3, 1, 3, 1, 1, 3, 1, 4, 3, 1, 1, 2, 2, 1, 3}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-1.2387988120380253`, 0.8048392826738571, 0.06659270480800084, 
                    0.2617099293464742, -0.19351737207297726`, 
                    0.06659098426338439, -1.7823528905972328`, \
-0.3833092935028142, 0.08440382519528222, 
                    3.17161541228724, -0.3833093224385644, 
                    0.4819043711351245, -1.2387982504591655`, 
                    1.0709011691300603`, -1.2388000564378157`, \
-1.9878923597917701`, -0.38804850657650336`, 
                    0.48190344156753184`, -0.15279227477107482`, \
-0.38331030553951617`, -1.2387997260560883`, 
                    1.37826530171, -0.18162011324768712`, 
                    0.26170900552564547`, 
                    0.26170886510525726`, -0.21611046171043458`, 
                    0.6433717455495556}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {16, 17}, {5, 6}, {
                    7, -16}, {-2, -17}, {8, -18}, {-3, 9}, {10, -19}, {-4, 
                    11}, {12, -20}, {13, -21}, {14, -22}, {
                    15, -23}, {-5, -24}, {-6, 18}, {-7, -25}, {-8, 19}, {20, 
                    21}, {22, 23}, {-9, 27}, {-10, 24}, {-11, 
                    25}, {-12, -26}, {26, -27}, {-13, -28}, {-14, 
                    28}, {-15, -29}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 1, 1, 1, 2, 2, 1, 1,
                     2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 
                    2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 2, 3, 3, 4, 1, 1, 2, 1, 3, 1, 4, 
                    1, 1, 1, 3, 2, 2, 1, 6, 5, 3, 3, 2, 1, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452307497795, 
                    0.08440497902927468, 0.6433718129561274, 
                    0.8048399298404325, -0.9445390692790934, \
-1.337762346840286, -1.4018508603975857`, -0.7164705173885864, 
                    0.15966378557042282`, 
                    0.48190411386154874`, -0.336835588737999, \
-0.38331013197147756`, -0.3335280751530405, 
                    0.017554873674022586`, -0.6117118359292695, \
-1.2387984062137907`, 0.2617092199303759, 0.26170835178382434`, 
                    2.2006368537430276`, 
                    0.36226681151531626`, -0.9347163101982785, \
-1.238799745503286, 0.48190265113204944`, 0.08440382796731083, 
                    1.4055203037824295`, 0.04841188520198886}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {19, -16}, {6, 
                    7}, {-1, 16}, {8, 9}, {-2, 15}, {-3, -17}, {10, -18}, {-4,
                     11}, {12, 13}, {-5, -19}, {-6, 
                    14}, {-7, -20}, {-8, -21}, {-9, 17}, {
                    18, -22}, {-10, -23}, {20, -24}, {21, -25}, {22, 
                    23}, {-11, 24}, {-12, 26}, {-13, 
                    25}, {-14, -26}, {-15, -27}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 1, 1, 2,
                     2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 2, 1, 2, 4, 6, 4, 1, 4, 2, 2, 2, 
                    2, 1, 1, 2, 1, 4, 4, 3, 2, 1, 2, 3, 3, 4, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, 
                    0.08440499276156221, 
                    0.18551914009917714`, -0.716470022957135, \
-0.9445390691378037, -0.7404453317752564, -0.38330868946695507`, \
-1.0192934839941046`, -0.9445375393131616, 
                    0.2617086155099586, -0.7164701273721201, 
                    0.0844030980575955, 
                    0.08440335228845508, -0.8184770814939739, \
-0.3218089304831082, -0.7164698523976574, -0.25913396299357583`, 
                    0.06659156577371061, 0.06659271655554488, 
                    0.4819027110364491, 0.26170855979994556`, 
                    0.36532894361318213`, 0.2617089807362887, 
                    0.8048410332269729, 
                    0.8048397550947879, -0.9445381587830628, 
                    1.7565149582999808`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {6, 
                    7}, {-1, 8}, {-2, -17}, {-3, -18}, {-4, 9}, {-5, 
                    10}, {-6, -19}, {-7, 13}, {22, 23}, {14, 15}, {16, 
                    17}, {-8, 20}, {-9, 18}, {
                    19, -20}, {-10, -21}, {-11, -22}, {
                    21, -23}, {-12, -24}, {-13, 24}, {26, -25}, {
                    25, -26}, {-14, -27}, {-15, 27}, {-16, -28}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 2, 1, 2, 1, 2, 2, 2,
                     1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 4, 1, 3, 2, 4, 1, 2, 3, 2, 2, 
                    2}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901623298622, \
-1.051060664801943, 0.06659088701501592, -2.0082447199023843`, 
                    0.8048396344366893, -0.7164703868369893, \
-0.15835901232800453`, -1.4325834603896546`, 0.08440308855260936, 
                    0.6433719787984522, 0.08440428709401271, 
                    0.26170850893206055`, 0.26170847596941504`}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -8}, {9, -9}, {5, 
                    6}, {-1, -10}, {-2, 7}, {-3, 8}, {-4, -11}, {10, 
                    11}, {-5, -12}, {-6, 12}, {13, -13}, {-7, -14}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 1, 2, 2, 1, 1, 1,
                     2, 2, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 1, 1, 5, 3, 1, 1, 2, 1, 1, 2, 3, 
                    1, 1, 1, 4, 1, 6, 5, 1, 5, 3, 1, 4, 3, 2, 1, 1, 1, 1, 4, 
                    2, 3, 4, 3, 2, 4, 4, 4, 6, 5, 6, 4, 6, 1, 5, 6, 1, 3, 3, 
                    1, 4, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwA+IGw/COxuv37ENMbqSVhzM67LhY8Lmr9/H+HUymoTZB
n/b/iG7eKXfp834PwabJEVzf9384aiEg6PZlv8RPoxsls7fa33gr1vKw76u9
wscz2kdT3u3nYOv/eH3/BfsZvDNiGoDmSqjwmK1RXGNf8fTAq3jeb/YOGz7a
Bpsc3h+R3v5GpePGfo12x87gmd/sPWbpGu7a+Hy/gGHoL+OXb/dPaL772K//
6X4Js1n3jYD8GUcM2e0PvrRfcez/3tXXnuw3SL7TrwrUv8CyvMgOKD5hg356
FdA9E07vXPow7e9+jl89temL/+3fwDynecfW//t/JIpYZJz7vz/jjWuIJs9G
+wXf5yeGvn22f4HqdWaQuQ6yV6vVgOZ1HDVcAjJvRgS/fS/QvID7HleNgepf
xFyItgDSFal3DWWAdEFsX3is/nV7Ae93PPfXf90/IcemejfQ/RP0U1XVgeZY
qNjvA/FfTPgmoFp2Zj9D5PIvd4HqChZsmQ0St3Cbpsv26749w5WIm83AcNIo
f/rXEWivwcuXM15NnrK/4XGqhx7QngOzDYTUgPSFWyrTZYE0AD015h0=
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -28}, {18, 19}, {5, 
                    6}, {7, 8}, {-1, 14}, {-2, 9}, {-3, 10}, {-4, -29}, {-5, 
                    11}, {12, -30}, {-6, 13}, {-7, -31}, {15, 
                    16}, {-8, -32}, {17, -33}, {-9, -34}, {20, 21}, {36, 
                    37}, {22, 23}, {28, 29}, {24, -35}, {-10, -36}, {-11, 
                    25}, {26, 27}, {-12, -37}, {-13, -38}, {30, 31}, {-14, 
                    32}, {-15, -39}, {-16, -40}, {-17, 33}, {34, -41}, {-18, 
                    35}, {-19, -42}, {38, -43}, {48, -44}, {39, -45}, {40, 
                    41}, {42, -46}, {-20, 44}, {-21, 43}, {-22, -47}, {-23, 
                    45}, {46, 47}, {-24, -48}, {-25, -49}, {49, -50}, {-26, 
                    50}, {51, -51}, {52, -52}, {53, -53}, {
                    54, -54}, {-27, -55}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 2, 1, 2, 1, 1, 2, 1, 2,
                     1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 
                    1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 
                    1, 1, 1, 2, 1, 2, 1}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 5, 6, 1, 2, 1, 4, 2, 3, 6, 3, 6, 
                    3, 6, 2, 5, 6, 1, 1, 4, 1, 1, 2, 4, 1, 2, 4, 4, 3, 4, 3, 
                    1, 1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.4819033142497786, -0.9347178972370296, \
-0.18909015944790686`, -0.6445808576955052, 
                    0.26170902991753, -1.1240937307485641`, \
-0.9445378159072586, 
                    0.08440406735797601, -1.2387992289515406`, \
-0.7404453023064956, 
                    0.4819031765965551, -0.7404463979264726, \
-1.2387995952937167`, -0.7404463005006701, 
                    0.2617097828660837, -1.355437951192357, \
-0.1890901614213587, 2.1652343577418875`, -1.580835815151401, 
                    0.06659270480800084, 
                    0.576137139951479, -2.0143439070430524`, 
                    0.0844048322376515, 
                    0.06659103600886407, -1.4018508603975857`, 
                    0.0844039151649425, 
                    0.0665924933641786, -0.38331004713219974`, 
                    0.48190425643468826`, 0.06659177897156843, 
                    0.8048406160205142, -0.46677277342462187`, \
-1.1943931164042425`, -0.8135253064873895}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {20, 21}, {6, 7}, {
                    18, -18}, {-1, 8}, {10, 11}, {-2, 
                    9}, {-3, -19}, {-4, -20}, {12, -21}, {13, 
                    14}, {-5, -22}, {-6, 15}, {16, -23}, {-7, 
                    17}, {-8, -24}, {19, -25}, {-9, -26}, {22, -27}, {26, 
                    27}, {-10, 23}, {24, -28}, {-11, 25}, {-12, -29}, {
                    28, -30}, {-13, -31}, {-14, 29}, {-15, 30}, {31, -32}, {
                    32, -33}, {33, -34}, {-16, 34}, {-17, -35}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 2, 1, 1, 1, 2,
                     1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 
                    2, 2, 2, 2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 4, 1, 1, 3, 1, 4, 2, 4, 1, 5, 1, 
                    2, 4, 4, 1, 1, 4, 5, 5, 2, 4, 3, 2, 1, 4, 1, 2, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.9445388281940801, 
                    0.15301526668831267`, -0.39043231430471037`, \
-1.238799191085299, 
                    0.6134644244957581, -0.9445379770192561, \
-0.7164711676857438, 
                    0.06659101900359599, -1.1743955014598306`, \
-1.3554363376809313`, -0.38813170915059514`, 
                    0.08440374611857115, -0.38330954109502, \
-0.3833097569303838, -0.7507498697537818, -0.4236800263554641, \
-0.3833095212246924, -1.355436303466277, -1.3554362132845252`, \
-0.7164697732279786, -0.15835882181139294`, 0.48190265072469574`, 
                    0.0844046988372158, -0.807528445533122, \
-0.9445378090650793, 2.1971887695531134`, 0.08440382951277292, 
                    1.480180009077758}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {21, 22}, {-1, 
                    6}, {-2, 7}, {-3, -20}, {-4, 8}, {-5, 9}, {10, 11}, {-6, 
                    12}, {-7, 19}, {13, 14}, {15, 16}, {-8, 
                    18}, {-9, -21}, {-10, 17}, {-11, -22}, {-12, -23}, {-13, 
                    20}, {-14, -24}, {-15, 23}, {26, -25}, {-16, 24}, {
                    25, -26}, {-17, -27}, {27, 28}, {-18, -28}, {
                    29, -29}, {-19, -30}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 1, 1, 2, 1, 1, 1, 2,
                     1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 
                    1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 3, 4, 1, 3, 1, 3, 1, 3, 3, 3, 1, 
                    4, 2}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.18909017073719991`, 
                    0.48190261919988764`, 
                    0.06659091706106945, -1.0888891460719048`, 
                    0.8048394199062043, 
                    0.5403582933002324, -1.238799154561553, 
                    0.2958716170522959, -1.2387988986445624`, \
-1.2387983595889143`, -0.3784478270144316, -1.4053402820162635`, 
                    0.06659213854904389, 0.08440499276156221}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, -9}, {-2, 6}, {
                    12, -10}, {7, -11}, {8, 9}, {-3, -12}, {-4, 10}, {-5, 
                    11}, {-6, -13}, {-7, 13}, {14, -14}, {-8, -15}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 2, 1, 2, 2, 1, 1, 1,
                     1, 2, 2, 2, 2}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 2, 2, 2, 1, 2, 1, 4, 1, 1, 3, 
                    1, 1, 1, 1, 1, 3, 5, 1, 2, 4, 2, 4}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.7404452307497795, \
-1.7153847949014285`, -0.7164697772026223, -0.716471225077397, 
                    0.08440499276156221, -2.032190148559282, 
                    0.26170863021919466`, 
                    1.72321074999655, -0.9445383467884154, 
                    0.29621266766163723`, -0.49957317456417316`, \
-1.2388000564378157`, -1.4384902395349215`, -0.7042541459950389, \
-1.1943931164042425`, -0.5678759312755668, -0.5328217352430986, 
                    0.8048408957525277, -0.9347178972370296, \
-0.1831548147535409, 0.26170894098705855`, -0.383309778357368, 
                    0.2617089131431456, -0.6639237812088021}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {-1, 
                    6}, {-2, 7}, {-3, -12}, {8, -13}, {9, -14}, {
                    10, -15}, {-4, -16}, {13, -17}, {-5, 18}, {-6, 14}, {15, 
                    16}, {-7, -18}, {-8, 17}, {-9, -19}, {19, -20}, {20, 
                    21}, {-10, -21}, {22, -22}, {23, -23}, {
                    24, -24}, {-11, -25}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 1, 1, 1, 2, 2, 1, 2, 2,
                     2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 5, 1, 3, 4, 6, 1, 2, 2, 1, 3, 1, 
                    1, 1, 3, 3, 2, 6, 3, 1, 5, 1, 4, 2, 4, 3, 1, 2, 1, 3, 3, 
                    1, 2, 2, 5, 1, 6}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.08440392622893067, -0.9347179535501668, 
                    2.137920022529727, 0.8048399484929023, 
                    0.0665908971683431, -0.7404455846557649, \
-1.337762346840286, -0.7164701925225874, -0.7164708442057508, 
                    0.16264291233650163`, 0.8048396533283437, 
                    0.05442385930298632, -0.6401190388794156, \
-0.6769070275065099, 0.48190414431957374`, 0.6433719787984522, 
                    0.08440418088931911, -0.1890901477085023, 
                    0.48190331815911547`, -1.3300060854291438`, \
-1.1450770370437375`, -0.3247971435804433, -0.9445390692790934, 
                    0.08440437325484218, -0.9445383467884154, \
-1.2387981083960877`, 0.47019164372282907`, 0.0844045341673203, 
                    1.6559887204108428`, 
                    0.48190315891603275`, -1.2388000564378157`, \
-1.2609990082675324`, 0.2617085180265244, 
                    0.26170847596941504`, -1.3554367818499244`, 
                    1.1276555460128517`, -0.7404457239870235}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {17, -19}, {
                    6, -20}, {15, -21}, {7, -22}, {8, 9}, {-1, -23}, {10, 
                    11}, {12, -24}, {-2, -25}, {13, -26}, {
                    14, -27}, {-3, -28}, {-4, 16}, {-5, -29}, {18, 19}, {
                    20, -30}, {21, 22}, {-6, -31}, {23, 24}, {35, 36}, {-7, 
                    25}, {-8, 31}, {-9, 26}, {27, 28}, {-10, 29}, {-11, 
                    30}, {-12, -32}, {-13, -33}, {32, 33}, {-14, -34}, {
                    34, -35}, {-15, -36}, {-16, 37}, {-17, -37}, {-18, -38}}],
                     "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 1, 2, 1, 2, 2, 1, 1, 2,
                     2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 
                    2, 1, 1, 2, 2, 2, 1, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{2, 1, 6, 2, 2, 3, 4, 5, 1, 5, 5, 5, 
                    1, 1, 3, 1, 6, 2, 4, 4, 3, 1, 4, 3, 1, 1, 4, 2, 2, 1, 2, 
                    1, 1, 1, 4, 4, 2, 2, 4, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAOIVGz0P1s7eas9gVVawa9n3/R1V5d7SJif2a0hckA59
+2y/xUJJURB9IejQP4eDL+0bGvfcVOLZaH9AZsNPk5dv96tErFmUbsJwYEds
YosxkJ/wTnq2KZCeUHxG/976r/s7Kl7Yvz34bP8G7y23y1cfsV+hUSTYcv2e
vUUae9lrz632Eu0Kt/dsfL7/wOmSiSFAe17cvZyjDjS/gVs61QJIK3A9la4D
qn+xz/T2Mc9H+zeci0oxAYpzrDokbQ9yz8LdpxZZPtjv0d+hFMx8dX+CaawV
yH0FDLUFzyyv7A8wNQ0KApqrUCa1Zw/vif0exyaxgPgzxMSOJoQ+3j9BJsz0
i/zr/QGf3mk94Hm4v4NfP1LK9cj+HzPN+ldYvtvvUKx0txsYPjf4fof0AukK
mQltIPEd1x8HLwfSACpLqVY=
                    "], "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 36}, {-2, 6}, {
                    10, 11}, {7, -24}, {-3, 8}, {9, -25}, {-4, -26}, {12, 
                    13}, {14, 15}, {-5, -27}, {-6, -28}, {16, 17}, {-7, 29}, {
                    18, 19}, {27, -29}, {-8, 20}, {-9, -30}, {21, -31}, {-10, 
                    22}, {-11, 23}, {24, -32}, {25, -33}, {-12, 
                    26}, {-13, -34}, {28, -35}, {-14, -36}, {30, 31}, {
                    32, -37}, {-15, 35}, {33, 
                    34}, {-16, -38}, {-17, -39}, {-18, -40}, {-19, 37}, {-20, 
                    38}, {-21, 39}, {-22, 40}, {-23, -41}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 1, 2, 1, 1, 2, 2, 1, 1, 2,
                     1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 
                    2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 3, 3, 1, 1, 1, 5, 4, 3, 3, 4, 4, 
                    4, 4, 3, 6, 1, 5, 1, 6, 3, 3, 4, 3, 1, 1, 1, 4, 4, 4, 1, 
                    4, 3, 2, 4, 2, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347178935551099, \
-1.2387989112736548`, 
                    0.481904292589614, -1.2671061166441824`, \
-0.611889229891176, 0.2740036617649686, -1.3554362173661296`, 
                    0.06659271686934964, 0.8048403900998684, 
                    0.8048399298404325, -0.6639237597992027, \
-0.3833096824681492, -0.38330934499496694`, -0.15835884750195794`, \
-1.2387982175858578`, -0.18909012248715595`, 
                    1.0709011691300603`, -0.9347179440951088, 
                    0.6397029021552338, -0.7404468551060264, 
                    0.8048394520417919, 0.8048393953994779, 
                    0.06659144299285624, 
                    0.48190338779380104`, -0.39067147302791927`, \
-0.23687890811694157`, -0.43632476038088264`, -0.9445383670980751, \
-0.3833087804669031, -0.38330977590075044`, -1.8210620322576077`, \
-0.3833097886729271, 0.48190334162362625`, -0.7164715682296698, 
                    0.06659105625495532, -0.71647138098671, \
-1.038072473901254}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {28, 29}, {-1, 6}, {
                    7, 8}, {-2, -20}, {9, -21}, {15, 16}, {10, -22}, {
                    11, -23}, {-3, 12}, {-4, 13}, {-5, 14}, {-6, -24}, {17, 
                    18}, {27, -25}, {19, -26}, {20, -27}, {-7, -28}, {21, 
                    22}, {23, -29}, {-8, 25}, {24, -30}, {-9, -31}, {-10, 
                    26}, {-11, -32}, {-12, -33}, {-13, 30}, {-14, 34}, {
                    31, -34}, {-15, 32}, {33, -35}, {-16, -36}, {-17, 35}, {
                    36, -37}, {-18, 37}, {-19, -38}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
                     1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 
                    2, 1, 1, 2, 2, 1, 2, 2, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{3, 6, 5, 4, 6, 2, 5, 1, 6, 4, 1, 1, 
                    1, 4, 4, 3, 1, 1, 4, 4, 1, 1, 3}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {
                    0.48190344156753184`, -0.1890901526545501, \
-0.9347179697683687, -0.9445390849006374, -0.740447092824196, \
-0.7164712339849144, -1.3554378811764654`, 
                    0.15914891039816825`, -0.7404454718958, 
                    0.06659270777545134, 
                    0.1558982959967723, -1.85504933329414, \
-1.9937851761325192`, 0.06659141634595922, -0.38331013197147756`, 
                    0.8048408232908733, -1.914893618042358, \
-1.9878923597917701`, -0.38331023976142564`, 
                    0.06659093670821103, -0.7392928000182382, 
                    0.39689873468629955`, 0.6433719787984522}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, -12}, {5, 
                    6}, {-1, -13}, {-2, 7}, {-3, 17}, {-4, 8}, {9, -14}, {
                    10, -15}, {11, -16}, {12, -17}, {13, 14}, {-5, -18}, {
                    15, -19}, {-6, 16}, {-7, -20}, {18, 19}, {-8, -21}, {-9, 
                    20}, {21, 22}, {23, -22}, {-10, -23}, {-11, -24}}], 
                    "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 1, 1, 1, 1, 1, 1, 2, 1, 2,
                     1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2}], "RootIndex" -> 
                    1, "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 1, 2, 4, 2, 4, 4, 3, 3, 1, 1, 2, 
                    2, 3, 1, 1, 3, 3, 4, 1, 4}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-1.4007476177258482`, 0.08440308855260936, 0.06659166996210486, 
                    0.08440490388880761, 
                    0.06659249779945109, -0.9445390692790934, 
                    0.48190264268781524`, 
                    0.8048400776018605, -0.5766611704661297, \
-0.7099513764028407, 0.26170848369117694`, 0.26170844605940013`, 
                    0.48190316218698914`, 
                    1.1970088048090126`, -0.1879192274545156, \
-1.2388000440890874`, 
                    0.8048395825423693, -0.15835942463487074`, \
-0.6755856270415146, -0.6639237694673055}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {4, 5}, {16, 
                    17}, {-1, -11}, {6, 7}, {8, -12}, {-2, 12}, {-3, 9}, {-4, 
                    10}, {11, -13}, {-5, -14}, {13, -15}, {14, -16}, {
                    15, -17}, {-6, -18}, {18, -19}, {-7, 21}, {19, -20}, {-8, 
                    20}, {-9, -21}, {-10, -22}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 1, 2, 1, 2, 2,
                     1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2}], "RootIndex" -> 1, 
                    "NominalDimension" -> 0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{6, 4, 3, 1, 3, 2, 3, 1, 3, 4, 3, 1, 
                    1, 1}], "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.1890901678552448, \
-0.9445375393131616, 0.4819042690090245, -1.7497066815672788`, 
                    0.8048396344366893, 0.08440382796731083, 
                    0.8048395026772335, -1.8210620322576077`, 
                    0.4819036182726779, -0.9445378090650793, 
                    0.643371819386358, 
                    0.39689873468629955`, -1.4042768052449954`, 
                    0.3604018476939399}, "Children" -> 
                    RawArray["Integer16",{{2, 3}, {-1, 4}, {6, 7}, {
                    5, -10}, {-2, -11}, {-3, 8}, {11, 12}, {-4, 9}, {
                    10, -12}, {-5, -13}, {-6, 13}, {-7, -14}, {-8, 
                    14}, {-9, -15}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{1, 2, 2, 1, 2, 2, 2, 2, 1, 1,
                     1, 2, 2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 
                    0|>], 
                    
                    MachineLearning`DecisionTree[<|
                    "FeatureIndices" -> 
                    RawArray["Integer16",{5, 6, 1, 4, 4, 4, 3, 4, 1, 1, 1, 3, 
                    2, 1, 1, 1, 4, 2, 2, 1, 2, 3, 1, 1}], 
                    "NominalSplits" -> {}, 
                    "NumericalThresholds" -> {-0.9347179839287962, \
-0.7404469353468155, -1.2348886012143723`, -0.9445390849006374, \
-0.3833091357124223, -0.38330966448682213`, 0.8048402398913765, 
                    0.06659178979635627, -0.3982031720471384, \
-0.7845214053319047, -0.571112723213477, 0.4819028701865009, 
                    0.08440466880028596, -1.7132949244396194`, \
-0.8146664053024129, 1.273627225385285, -0.15835837170194145`, 
                    0.08440325791707604, 
                    0.08440317684708531, -0.6466282816163185, \
-0.7164705057388465, 
                    0.8048399315679138, -0.3629793334350686, \
-1.1901669112339448`}, "Children" -> 
                    RawArray["Integer16",{{2, -15}, {3, 4}, {-1, 5}, {-2, 
                    12}, {6, 7}, {-3, -16}, {8, 9}, {-4, -17}, {10, -18}, {-5,
                     11}, {-6, -19}, {13, 14}, {-7, 15}, {17, 18}, {-8, 
                    16}, {-9, -20}, {-10, -21}, {19, 20}, {
                    21, -22}, {-11, -23}, {-12, 22}, {-13, 23}, {
                    24, -24}, {-14, -25}}], "LeafValues" -> 
                    RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 2, 2, 2, 1, 2,
                     1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1}], 
                    "RootIndex" -> 1, "NominalDimension" -> 0|>]}, 
                    "Processor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, 
                    "Type" -> "NumericalVector"|>, "Key" -> "(f2(f1f3))", 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"|>], 
                    "OOBConfusionMatrix" -> {{0.7446044355309039, 
                    0.31349816742548714`}, {0.25539556446909595`, 
                    0.6865018325745129}}, "Calibrator" -> 
                    MachineLearning`CalibratorFunction[
                    "TemperatureScaling", <|"Theta" -> 1.3294620149061904`|>],
                     "Method" -> "RandomForest", "PostProcessor" -> 
                    MachineLearning`MLProcessor["Identity"], 
                    "Options" -> <|
                    "FeatureFraction" -> <|
                    "Value" -> 6^Rational[-1, 2], "Options" -> <||>|>, 
                    "LeafSize" -> <|"Value" -> 5, "Options" -> <||>|>, 
                    "TreeNumber" -> <|"Value" -> 50, "Options" -> <||>|>, 
                    "DistributionSmoothing" -> <|
                    "Value" -> 0.5, "Options" -> <||>|>, 
                    "Implementation" -> <|
                    "Value" -> "Default", "Options" -> <||>|>|>|>, 
                    "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|"Value" -> "RandomForest", 
                    "Options" -> <|"FeatureFraction" -> <|
                    "Value" -> Automatic|>, 
                    "LeafSize" -> <|"Value" -> Automatic|>, 
                    "TreeNumber" -> <|"Value" -> Automatic|>, 
                    "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
                    "Implementation" -> <|"Value" -> Automatic|>|>, 
                    "NaiveImputer" -> Missing["KeyAbsent", "NaiveImputer"], 
                    "EMIterations" -> 
                    Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 5], 
                    TypeSystem`UnknownType, TypeSystem`UnknownType}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|"Configuration" -> {
                    "RandomForest", "FeatureFraction" -> Automatic, 
                    "LeafSize" -> Automatic, "TreeNumber" -> Automatic, 
                    "DistributionSmoothing" -> 0.5, "Implementation" -> 
                    Automatic}, "ModelUtility" -> Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType, TypeSystem`AnyType}], 
                    TypeSystem`UnknownType}], <||>], "InputDimension" -> 6, 
                    "OutputDimension" -> 1|>, "AnomalyDetector" -> None, 
                    "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"1st"}, "ID" -> 7168142382301173801|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {16.}, "ID" -> 1978735388468315165|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"female"}, "ID" -> 9071588231046195481|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.36496, "MaxTrainingMemory" -> 7111904,
                     "DataMemory" -> 194584, "FunctionMemory" -> 268544, 
                    "LanguageVersion" -> {14.1, 0}, "Date" -> 
                    DateObject[{
                    2024, 8, 11, 11, 42, 54.079285`8.48560591545275}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 10, 
                    "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX",
                     "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Value: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"died\"", "\[Rule]", 
                    GraphicsBox[{{
                    RGBColor[
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 1], 
                    LineBox[
                    
                    NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
                    1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
                    Rational[67, 107], 
                    Rational[69, 70]}, {
                    Rational[50, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[45, 107], 
                    Rational[137, 140]}, {
                    Rational[42, 107], 
                    Rational[33, 35]}, {
                    Rational[39, 107], 
                    Rational[33, 35]}, {
                    Rational[39, 107], 
                    Rational[131, 140]}, {
                    Rational[35, 107], 
                    Rational[32, 35]}, {
                    Rational[33, 107], 
                    Rational[127, 140]}, {
                    Rational[31, 107], 
                    Rational[9, 10]}, {
                    Rational[31, 107], 
                    Rational[31, 35]}, {
                    Rational[29, 107], 
                    Rational[17, 20]}, {
                    Rational[29, 107], 
                    Rational[59, 70]}, {
                    Rational[27, 107], 
                    Rational[29, 35]}, {
                    Rational[27, 107], 
                    Rational[23, 28]}, {
                    Rational[25, 107], 
                    Rational[111, 140]}, {
                    Rational[19, 107], 
                    Rational[107, 140]}, {
                    Rational[15, 107], 
                    Rational[97, 140]}, {
                    Rational[9, 107], 
                    Rational[51, 140]}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {1, 1}, {1, 
                    1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
                    1}, {0.6261682242990654, 0.9857142857142858}, {
                    0.4672897196261682, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.4205607476635514, 0.9785714285714285}, {
                    0.3925233644859813, 0.9428571428571428}, {
                    0.3644859813084112, 0.9428571428571428}, {
                    0.3644859813084112, 0.9357142857142857}, {
                    0.32710280373831774`, 0.9142857142857143}, {
                    0.308411214953271, 0.9071428571428571}, {
                    0.2897196261682243, 0.9}, {0.2897196261682243, 
                    0.8857142857142857}, {0.27102803738317754`, 0.85}, {
                    0.27102803738317754`, 0.8428571428571429}, {
                    0.2523364485981308, 0.8285714285714286}, {
                    0.2523364485981308, 0.8214285714285714}, {
                    0.2336448598130841, 0.7928571428571428}, {
                    0.17757009345794392`, 0.7642857142857142}, {
                    0.14018691588785046`, 0.6928571428571428}, {
                    0.08411214953271028, 0.36428571428571427`}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}]]}, 
                    PointSize[0.02], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1], 
                    LineBox[
                    
                    NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
                    1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
                    Rational[67, 107], 
                    Rational[69, 70]}, {
                    Rational[50, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[49, 107], 
                    Rational[137, 140]}, {
                    Rational[45, 107], 
                    Rational[137, 140]}, {
                    Rational[42, 107], 
                    Rational[33, 35]}, {
                    Rational[39, 107], 
                    Rational[33, 35]}, {
                    Rational[39, 107], 
                    Rational[131, 140]}, {
                    Rational[35, 107], 
                    Rational[32, 35]}, {
                    Rational[33, 107], 
                    Rational[127, 140]}, {
                    Rational[31, 107], 
                    Rational[9, 10]}, {
                    Rational[31, 107], 
                    Rational[31, 35]}, {
                    Rational[29, 107], 
                    Rational[17, 20]}, {
                    Rational[29, 107], 
                    Rational[59, 70]}, {
                    Rational[27, 107], 
                    Rational[29, 35]}, {
                    Rational[27, 107], 
                    Rational[23, 28]}, {
                    Rational[25, 107], 
                    Rational[111, 140]}, {
                    Rational[19, 107], 
                    Rational[107, 140]}, {
                    Rational[15, 107], 
                    Rational[97, 140]}, {
                    Rational[9, 107], 
                    Rational[51, 140]}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {1, 1}, {1, 
                    1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
                    1}, {0.6261682242990654, 0.9857142857142858}, {
                    0.4672897196261682, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.45794392523364486`, 0.9785714285714285}, {
                    0.4205607476635514, 0.9785714285714285}, {
                    0.3925233644859813, 0.9428571428571428}, {
                    0.3644859813084112, 0.9428571428571428}, {
                    0.3644859813084112, 0.9357142857142857}, {
                    0.32710280373831774`, 0.9142857142857143}, {
                    0.308411214953271, 0.9071428571428571}, {
                    0.2897196261682243, 0.9}, {0.2897196261682243, 
                    0.8857142857142857}, {0.27102803738317754`, 0.85}, {
                    0.27102803738317754`, 0.8428571428571429}, {
                    0.2523364485981308, 0.8285714285714286}, {
                    0.2523364485981308, 0.8214285714285714}, {
                    0.2336448598130841, 0.7928571428571428}, {
                    0.17757009345794392`, 0.7642857142857142}, {
                    0.14018691588785046`, 0.6928571428571428}, {
                    0.08411214953271028, 0.36428571428571427`}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}]], {
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.`"], Annotation[#, 0., "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.025`"], 
                    Annotation[#, 0.025, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.05`"], 
                    Annotation[#, 0.05, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.07500000000000001`"], 
                    Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.1`"], 
                    Annotation[#, 0.1, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.125`"], 
                    Annotation[#, 0.125, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.15000000000000002`"], 
                    Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.17500000000000002`"], 
                    Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.2`"], 
                    Annotation[#, 0.2, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.225`"], 
                    Annotation[#, 0.225, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.25`"], 
                    Annotation[#, 0.25, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[67, 107], 
                    Rational[69, 70]}, {0.6261682242990654, 
                    0.9857142857142858}]], "0.275`"], 
                    Annotation[#, 0.275, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[50, 107], 
                    Rational[137, 140]}, {0.4672897196261682, 
                    0.9785714285714285}]], "0.30000000000000004`"], 
                    Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}]], "0.325`"], 
                    Annotation[#, 0.325, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}]], "0.35000000000000003`"], 
                    Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}]], "0.375`"], 
                    Annotation[#, 0.375, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}]], "0.4`"], 
                    Annotation[#, 0.4, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[45, 107], 
                    Rational[137, 140]}, {0.4205607476635514, 
                    0.9785714285714285}]], "0.42500000000000004`"], 
                    Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[42, 107], 
                    Rational[33, 35]}, {0.3925233644859813, 
                    0.9428571428571428}]], "0.45`"], 
                    Annotation[#, 0.45, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[39, 107], 
                    Rational[33, 35]}, {0.3644859813084112, 
                    0.9428571428571428}]], "0.47500000000000003`"], 
                    Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[39, 107], 
                    Rational[131, 140]}, {0.3644859813084112, 
                    0.9357142857142857}]], "0.5`"], 
                    Annotation[#, 0.5, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[35, 107], 
                    Rational[32, 35]}, {0.32710280373831774`, 
                    0.9142857142857143}]], "0.525`"], 
                    Annotation[#, 0.525, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[33, 107], 
                    Rational[127, 140]}, {0.308411214953271, 
                    0.9071428571428571}]], "0.55`"], 
                    Annotation[#, 0.55, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[31, 107], 
                    Rational[9, 10]}, {0.2897196261682243, 0.9}]], 
                    "0.5750000000000001`"], 
                    Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[31, 107], 
                    Rational[31, 35]}, {0.2897196261682243, 
                    0.8857142857142857}]], "0.6000000000000001`"], 
                    Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[29, 107], 
                    Rational[17, 20]}, {0.27102803738317754`, 0.85}]], 
                    "0.625`"], Annotation[#, 0.625, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[29, 107], 
                    Rational[59, 70]}, {0.27102803738317754`, 
                    0.8428571428571429}]], "0.65`"], 
                    Annotation[#, 0.65, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[27, 107], 
                    Rational[29, 35]}, {0.2523364485981308, 
                    0.8285714285714286}]], "0.675`"], 
                    Annotation[#, 0.675, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[27, 107], 
                    Rational[23, 28]}, {0.2523364485981308, 
                    0.8214285714285714}]], "0.7000000000000001`"], 
                    Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[25, 107], 
                    Rational[111, 140]}, {0.2336448598130841, 
                    0.7928571428571428}]], "0.7250000000000001`"], 
                    Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[19, 107], 
                    Rational[107, 140]}, {0.17757009345794392`, 
                    0.7642857142857142}]], "0.75`"], 
                    Annotation[#, 0.75, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[15, 107], 
                    Rational[97, 140]}, {0.14018691588785046`, 
                    0.6928571428571428}]], "0.775`"], 
                    Annotation[#, 0.775, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[9, 107], 
                    Rational[51, 140]}, {0.08411214953271028, 
                    0.36428571428571427`}]], "0.8`"], 
                    Annotation[#, 0.8, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.8250000000000001`"], 
                    Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.8500000000000001`"], 
                    Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.875`"], 
                    Annotation[#, 0.875, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.9`"], 
                    Annotation[#, 0.9, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.925`"], 
                    Annotation[#, 0.925, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.9500000000000001`"], 
                    Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.9750000000000001`"], 
                    Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "1.`"], 
                    Annotation[#, 1., "Tooltip"]& ]}, 
                    GrayLevel[0], {
                    InsetBox[
                    FormBox["0.`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.025`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.05`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.07500000000000001`", TraditionalForm], {1, 1}, 
                    
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.1`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.125`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.15000000000000002`", TraditionalForm], {1, 1}, 
                    
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.17500000000000002`", TraditionalForm], {1, 1}, 
                    
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.2`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.225`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.25`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.275`", TraditionalForm], 
                    NCache[{
                    Rational[67, 107], 
                    Rational[69, 70]}, {0.6261682242990654, 
                    0.9857142857142858}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.30000000000000004`", TraditionalForm], 
                    NCache[{
                    Rational[50, 107], 
                    Rational[137, 140]}, {0.4672897196261682, 
                    0.9785714285714285}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.325`", TraditionalForm], 
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.35000000000000003`", TraditionalForm], 
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.375`", TraditionalForm], 
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.4`", TraditionalForm], 
                    NCache[{
                    Rational[49, 107], 
                    Rational[137, 140]}, {0.45794392523364486`, 
                    0.9785714285714285}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.42500000000000004`", TraditionalForm], 
                    NCache[{
                    Rational[45, 107], 
                    Rational[137, 140]}, {0.4205607476635514, 
                    0.9785714285714285}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.45`", TraditionalForm], 
                    NCache[{
                    Rational[42, 107], 
                    Rational[33, 35]}, {0.3925233644859813, 
                    0.9428571428571428}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.47500000000000003`", TraditionalForm], 
                    NCache[{
                    Rational[39, 107], 
                    Rational[33, 35]}, {0.3644859813084112, 
                    0.9428571428571428}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.5`", TraditionalForm], 
                    NCache[{
                    Rational[39, 107], 
                    Rational[131, 140]}, {0.3644859813084112, 
                    0.9357142857142857}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.525`", TraditionalForm], 
                    NCache[{
                    Rational[35, 107], 
                    Rational[32, 35]}, {0.32710280373831774`, 
                    0.9142857142857143}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.55`", TraditionalForm], 
                    NCache[{
                    Rational[33, 107], 
                    Rational[127, 140]}, {0.308411214953271, 
                    0.9071428571428571}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.5750000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[31, 107], 
                    Rational[9, 10]}, {0.2897196261682243, 0.9}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.6000000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[31, 107], 
                    Rational[31, 35]}, {0.2897196261682243, 
                    0.8857142857142857}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.625`", TraditionalForm], 
                    NCache[{
                    Rational[29, 107], 
                    Rational[17, 20]}, {0.27102803738317754`, 0.85}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.65`", TraditionalForm], 
                    NCache[{
                    Rational[29, 107], 
                    Rational[59, 70]}, {0.27102803738317754`, 
                    0.8428571428571429}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.675`", TraditionalForm], 
                    NCache[{
                    Rational[27, 107], 
                    Rational[29, 35]}, {0.2523364485981308, 
                    0.8285714285714286}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.7000000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[27, 107], 
                    Rational[23, 28]}, {0.2523364485981308, 
                    0.8214285714285714}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.7250000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[25, 107], 
                    Rational[111, 140]}, {0.2336448598130841, 
                    0.7928571428571428}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.75`", TraditionalForm], 
                    NCache[{
                    Rational[19, 107], 
                    Rational[107, 140]}, {0.17757009345794392`, 
                    0.7642857142857142}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.775`", TraditionalForm], 
                    NCache[{
                    Rational[15, 107], 
                    Rational[97, 140]}, {0.14018691588785046`, 
                    0.6928571428571428}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.8`", TraditionalForm], 
                    NCache[{
                    Rational[9, 107], 
                    Rational[51, 140]}, {0.08411214953271028, 
                    0.36428571428571427`}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.8250000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.8500000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.875`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.9`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.925`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.9500000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.9750000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["1.`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]]}}, AspectRatio -> 1, Frame -> 
                    True, FrameLabel -> {
                    FormBox[
                    StyleBox[
                    "\"FPR, false positive rate\"", Larger, Bold, 
                    StripOnInput -> False], TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> 
                    False], TraditionalForm]}, {
                    GridLines -> Automatic, ImageSize -> Small}]}], ",", 
                    RowBox[{"\"survived\"", "\[Rule]", 
                    GraphicsBox[{{
                    RGBColor[
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 1], 
                    LineBox[
                    
                    NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
                    1, 1}, {1, 1}, {
                    Rational[89, 140], 
                    Rational[98, 107]}, {
                    Rational[43, 140], 
                    Rational[92, 107]}, {
                    Rational[33, 140], 
                    Rational[88, 107]}, {
                    Rational[29, 140], 
                    Rational[82, 107]}, {
                    Rational[5, 28], 
                    Rational[80, 107]}, {
                    Rational[6, 35], 
                    Rational[80, 107]}, {
                    Rational[11, 70], 
                    Rational[78, 107]}, {
                    Rational[3, 20], 
                    Rational[78, 107]}, {
                    Rational[4, 35], 
                    Rational[76, 107]}, {
                    Rational[1, 10], 
                    Rational[76, 107]}, {
                    Rational[13, 140], 
                    Rational[74, 107]}, {
                    Rational[3, 35], 
                    Rational[72, 107]}, {
                    Rational[9, 140], 
                    Rational[68, 107]}, {
                    Rational[2, 35], 
                    Rational[68, 107]}, {
                    Rational[2, 35], 
                    Rational[65, 107]}, {
                    Rational[3, 140], 
                    Rational[62, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[57, 107]}, {
                    Rational[1, 70], 
                    Rational[40, 107]}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 
                    1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
                    1}, {0.6357142857142857, 0.9158878504672897}, {
                    0.30714285714285716`, 0.8598130841121495}, {
                    0.2357142857142857, 0.822429906542056}, {
                    0.20714285714285716`, 0.7663551401869159}, {
                    0.17857142857142858`, 0.7476635514018691}, {
                    0.17142857142857143`, 0.7476635514018691}, {
                    0.15714285714285714`, 0.7289719626168224}, {0.15, 
                    0.7289719626168224}, {0.11428571428571428`, 
                    0.7102803738317757}, {0.1, 0.7102803738317757}, {
                    0.09285714285714286, 0.6915887850467289}, {
                    0.08571428571428572, 0.6728971962616822}, {
                    0.06428571428571428, 0.6355140186915887}, {
                    0.05714285714285714, 0.6355140186915887}, {
                    0.05714285714285714, 0.6074766355140186}, {
                    0.02142857142857143, 0.5794392523364486}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5327102803738317}, {
                    0.014285714285714285`, 0.37383177570093457`}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}}]]}, 
                    PointSize[0.02], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1], 
                    LineBox[
                    
                    NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
                    1, 1}, {1, 1}, {
                    Rational[89, 140], 
                    Rational[98, 107]}, {
                    Rational[43, 140], 
                    Rational[92, 107]}, {
                    Rational[33, 140], 
                    Rational[88, 107]}, {
                    Rational[29, 140], 
                    Rational[82, 107]}, {
                    Rational[5, 28], 
                    Rational[80, 107]}, {
                    Rational[6, 35], 
                    Rational[80, 107]}, {
                    Rational[11, 70], 
                    Rational[78, 107]}, {
                    Rational[3, 20], 
                    Rational[78, 107]}, {
                    Rational[4, 35], 
                    Rational[76, 107]}, {
                    Rational[1, 10], 
                    Rational[76, 107]}, {
                    Rational[13, 140], 
                    Rational[74, 107]}, {
                    Rational[3, 35], 
                    Rational[72, 107]}, {
                    Rational[9, 140], 
                    Rational[68, 107]}, {
                    Rational[2, 35], 
                    Rational[68, 107]}, {
                    Rational[2, 35], 
                    Rational[65, 107]}, {
                    Rational[3, 140], 
                    Rational[62, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[58, 107]}, {
                    Rational[3, 140], 
                    Rational[57, 107]}, {
                    Rational[1, 70], 
                    Rational[40, 107]}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}}, {{1, 
                    1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
                    1}, {0.6357142857142857, 0.9158878504672897}, {
                    0.30714285714285716`, 0.8598130841121495}, {
                    0.2357142857142857, 0.822429906542056}, {
                    0.20714285714285716`, 0.7663551401869159}, {
                    0.17857142857142858`, 0.7476635514018691}, {
                    0.17142857142857143`, 0.7476635514018691}, {
                    0.15714285714285714`, 0.7289719626168224}, {0.15, 
                    0.7289719626168224}, {0.11428571428571428`, 
                    0.7102803738317757}, {0.1, 0.7102803738317757}, {
                    0.09285714285714286, 0.6915887850467289}, {
                    0.08571428571428572, 0.6728971962616822}, {
                    0.06428571428571428, 0.6355140186915887}, {
                    0.05714285714285714, 0.6355140186915887}, {
                    0.05714285714285714, 0.6074766355140186}, {
                    0.02142857142857143, 0.5794392523364486}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5420560747663551}, {
                    0.02142857142857143, 0.5327102803738317}, {
                    0.014285714285714285`, 0.37383177570093457`}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
                    0}, {0, 0}, {0, 0}}]], {
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.`"], Annotation[#, 0., "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.025`"], 
                    Annotation[#, 0.025, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.05`"], 
                    Annotation[#, 0.05, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.07500000000000001`"], 
                    Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.1`"], 
                    Annotation[#, 0.1, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.125`"], 
                    Annotation[#, 0.125, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.15000000000000002`"], 
                    Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{1, 1}], "0.17500000000000002`"], 
                    Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[89, 140], 
                    Rational[98, 107]}, {0.6357142857142857, 
                    0.9158878504672897}]], "0.2`"], 
                    Annotation[#, 0.2, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[43, 140], 
                    Rational[92, 107]}, {0.30714285714285716`, 
                    0.8598130841121495}]], "0.225`"], 
                    Annotation[#, 0.225, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[33, 140], 
                    Rational[88, 107]}, {0.2357142857142857, 
                    0.822429906542056}]], "0.25`"], 
                    Annotation[#, 0.25, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[29, 140], 
                    Rational[82, 107]}, {0.20714285714285716`, 
                    0.7663551401869159}]], "0.275`"], 
                    Annotation[#, 0.275, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[5, 28], 
                    Rational[80, 107]}, {0.17857142857142858`, 
                    0.7476635514018691}]], "0.30000000000000004`"], 
                    Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[6, 35], 
                    Rational[80, 107]}, {0.17142857142857143`, 
                    0.7476635514018691}]], "0.325`"], 
                    Annotation[#, 0.325, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[11, 70], 
                    Rational[78, 107]}, {0.15714285714285714`, 
                    0.7289719626168224}]], "0.35000000000000003`"], 
                    Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 20], 
                    Rational[78, 107]}, {0.15, 0.7289719626168224}]], 
                    "0.375`"], Annotation[#, 0.375, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[4, 35], 
                    Rational[76, 107]}, {0.11428571428571428`, 
                    0.7102803738317757}]], "0.4`"], 
                    Annotation[#, 0.4, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[1, 10], 
                    Rational[76, 107]}, {0.1, 0.7102803738317757}]], 
                    "0.42500000000000004`"], 
                    Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[13, 140], 
                    Rational[74, 107]}, {0.09285714285714286, 
                    0.6915887850467289}]], "0.45`"], 
                    Annotation[#, 0.45, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 35], 
                    Rational[72, 107]}, {0.08571428571428572, 
                    0.6728971962616822}]], "0.47500000000000003`"], 
                    Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[9, 140], 
                    Rational[68, 107]}, {0.06428571428571428, 
                    0.6355140186915887}]], "0.5`"], 
                    Annotation[#, 0.5, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[2, 35], 
                    Rational[68, 107]}, {0.05714285714285714, 
                    0.6355140186915887}]], "0.525`"], 
                    Annotation[#, 0.525, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[2, 35], 
                    Rational[65, 107]}, {0.05714285714285714, 
                    0.6074766355140186}]], "0.55`"], 
                    Annotation[#, 0.55, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 140], 
                    Rational[62, 107]}, {0.02142857142857143, 
                    0.5794392523364486}]], "0.5750000000000001`"], 
                    Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}]], "0.6000000000000001`"], 
                    Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}]], "0.625`"], 
                    Annotation[#, 0.625, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}]], "0.65`"], 
                    Annotation[#, 0.65, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}]], "0.675`"], 
                    Annotation[#, 0.675, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[3, 140], 
                    Rational[57, 107]}, {0.02142857142857143, 
                    0.5327102803738317}]], "0.7000000000000001`"], 
                    Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[
                    NCache[{
                    Rational[1, 70], 
                    Rational[40, 107]}, {0.014285714285714285`, 
                    0.37383177570093457`}]], "0.7250000000000001`"], 
                    Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.75`"], 
                    Annotation[#, 0.75, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.775`"], 
                    Annotation[#, 0.775, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.8`"], 
                    Annotation[#, 0.8, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.8250000000000001`"], 
                    Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.8500000000000001`"], 
                    Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.875`"], 
                    Annotation[#, 0.875, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.9`"], 
                    Annotation[#, 0.9, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.925`"], 
                    Annotation[#, 0.925, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.9500000000000001`"], 
                    Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "0.9750000000000001`"], 
                    Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0, 0}], "1.`"], 
                    Annotation[#, 1., "Tooltip"]& ]}, 
                    GrayLevel[0], {
                    InsetBox[
                    FormBox["0.`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.025`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.05`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.07500000000000001`", TraditionalForm], {1, 1}, 
                    
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.1`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.125`", TraditionalForm], {1, 1}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.15000000000000002`", TraditionalForm], {1, 1}, 
                    
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.17500000000000002`", TraditionalForm], {1, 1}, 
                    
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.2`", TraditionalForm], 
                    NCache[{
                    Rational[89, 140], 
                    Rational[98, 107]}, {0.6357142857142857, 
                    0.9158878504672897}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.225`", TraditionalForm], 
                    NCache[{
                    Rational[43, 140], 
                    Rational[92, 107]}, {0.30714285714285716`, 
                    0.8598130841121495}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.25`", TraditionalForm], 
                    NCache[{
                    Rational[33, 140], 
                    Rational[88, 107]}, {0.2357142857142857, 
                    0.822429906542056}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.275`", TraditionalForm], 
                    NCache[{
                    Rational[29, 140], 
                    Rational[82, 107]}, {0.20714285714285716`, 
                    0.7663551401869159}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.30000000000000004`", TraditionalForm], 
                    NCache[{
                    Rational[5, 28], 
                    Rational[80, 107]}, {0.17857142857142858`, 
                    0.7476635514018691}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.325`", TraditionalForm], 
                    NCache[{
                    Rational[6, 35], 
                    Rational[80, 107]}, {0.17142857142857143`, 
                    0.7476635514018691}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.35000000000000003`", TraditionalForm], 
                    NCache[{
                    Rational[11, 70], 
                    Rational[78, 107]}, {0.15714285714285714`, 
                    0.7289719626168224}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.375`", TraditionalForm], 
                    NCache[{
                    Rational[3, 20], 
                    Rational[78, 107]}, {0.15, 0.7289719626168224}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.4`", TraditionalForm], 
                    NCache[{
                    Rational[4, 35], 
                    Rational[76, 107]}, {0.11428571428571428`, 
                    0.7102803738317757}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.42500000000000004`", TraditionalForm], 
                    NCache[{
                    Rational[1, 10], 
                    Rational[76, 107]}, {0.1, 0.7102803738317757}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.45`", TraditionalForm], 
                    NCache[{
                    Rational[13, 140], 
                    Rational[74, 107]}, {0.09285714285714286, 
                    0.6915887850467289}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.47500000000000003`", TraditionalForm], 
                    NCache[{
                    Rational[3, 35], 
                    Rational[72, 107]}, {0.08571428571428572, 
                    0.6728971962616822}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.5`", TraditionalForm], 
                    NCache[{
                    Rational[9, 140], 
                    Rational[68, 107]}, {0.06428571428571428, 
                    0.6355140186915887}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.525`", TraditionalForm], 
                    NCache[{
                    Rational[2, 35], 
                    Rational[68, 107]}, {0.05714285714285714, 
                    0.6355140186915887}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.55`", TraditionalForm], 
                    NCache[{
                    Rational[2, 35], 
                    Rational[65, 107]}, {0.05714285714285714, 
                    0.6074766355140186}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.5750000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[3, 140], 
                    Rational[62, 107]}, {0.02142857142857143, 
                    0.5794392523364486}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.6000000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.625`", TraditionalForm], 
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.65`", TraditionalForm], 
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.675`", TraditionalForm], 
                    NCache[{
                    Rational[3, 140], 
                    Rational[58, 107]}, {0.02142857142857143, 
                    0.5420560747663551}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.7000000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[3, 140], 
                    Rational[57, 107]}, {0.02142857142857143, 
                    0.5327102803738317}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.7250000000000001`", TraditionalForm], 
                    NCache[{
                    Rational[1, 70], 
                    Rational[40, 107]}, {0.014285714285714285`, 
                    0.37383177570093457`}], 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.75`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.775`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.8`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.8250000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.8500000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.875`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.9`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.925`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.9500000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["0.9750000000000001`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]], 
                    InsetBox[
                    FormBox["1.`", TraditionalForm], {0, 0}, 
                    NCache[
                    ImageScaled[{0, 
                    Rational[3, 2]}], 
                    ImageScaled[{0, 1.5}]]]}}, AspectRatio -> 1, Frame -> 
                    True, FrameLabel -> {
                    FormBox[
                    StyleBox[
                    "\"FPR, false positive rate\"", Larger, Bold, 
                    StripOnInput -> False], TraditionalForm], 
                    FormBox[
                    StyleBox[
                    "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> 
                    False], TraditionalForm]}, {
                    GridLines -> Automatic, ImageSize -> Small}]}]}], 
                    "\[RightAssociation]"}], Short], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[
             AntonAntonov`MonadicContextualClassification`ClCon, 1469328, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", AntonAntonov`MonadicContextualClassification`ClCon, 
            1469328, 
            9079848422846997239283438391704792221979025390382911705304, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "ClCon[<|died -> -Graphics-, survived -> -Graphics-|>, <|trainingData -> \
Dataset[{<|passenger class -> 2nd, passenger age -> 30., passenger sex -> \
female, passenger survival -> survived|>, <|passenger class -> 3rd, \
\[LeftSkeleton]2\[RightSkeleton], passenger survival -> survived|>, \
\[LeftSkeleton]978\[RightSkeleton], <|passenger class -> 3rd, passenger age \
-> 2., passenger sex -> female, passenger survival -> died|>}, \
\[LeftSkeleton]1\[RightSkeleton], <||>], \[LeftSkeleton]3\[RightSkeleton]|>]"& \
)],
  False,
  BoxID -> 9079848422846997239283438391704792221979025390382911705304,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.932379565601351*^9, 3.9323797745575657`*^9},
 CellLabel->"Out[9]=",
 CellID->1587734295,ExpressionUUID->"39b155c6-acc6-41e2-829b-b92f45f9a0ca"]
}, Open  ]]
}, Open  ]],

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"08781a77-37cc-41cc-9e41-b607f2c712f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"ed0dbb83-c720-42e5-a688-2d599266f023"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e3d9687d-0ba1-4812-b52d-8ff7d07b8001"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"bfe3485a-48a0-4e38-872e-b99b32a7283d"],

Cell["Anton Antonov", "Text",
 TaggingRules->{},
 CellID->1384030309,ExpressionUUID->"e8c8bd21-e503-4ffb-afae-2a6bb2120169"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c51dc393-b37b-4ca9-8a52-1c22efc538c6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"976f1bba-a7a8-453a-a098-572e8c01041f"],

Cell["\<\
https://github.com/antononcube/WL-MonadicContextualClassification-paclet\
\>", "Text",
 CellID->1033783630,ExpressionUUID->"64d8beff-bc96-40a5-bfba-136d64c14dd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "002cc450-a2c9-40ce-8dc4-7ee3d9e95e32"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"79f60623-dfd6-486b-9171-c013ab2bc460"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "MIT"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Apache-2.0"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "CC0-1.0"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "None"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Other"}], "\" \"", 
           StyleBox[
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bD+/efNm+\
q0OazCbS2DNC2czZztsPZxAdANxsoL1M4EUaQwtpJg0yv9kDesjJyFZxdpI3yW1Msy23w/\
HwZmIQCGw2s+v3+jg5mmegZFC3bC1H9/Z4cTaDN/2egZQOxMBdu+\
0TAxPI6ld3I102rvkkQQ7gkyjsNrkPVlCYo/wWY0+\
ywjs9zMeTWDGIXjdPVjC492TeJTPdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedOgVKmi5WGC4MeJ3R/\
oekGLbY0gzyS1QwB8pWDfb51pBm71p94MpYCAwUNoGBj47YSAOEm0CYotacRnEkEmdp6AsttnzSwPW\
5mOtpRXZDJ/\
VPWbFooFbQ0WOOxEgY4quD3LFUxGRcq3QGUNQH7l0QD7cOb6lFamoVQhSzlhia8yvr4W69njI9lkGk\
UgExFMHDAdsxSd74lTk7xLyPhUh007Fx/cZiYo+uoY1Bt7W//fs7ojHQh85a7UqbrLGhZ2AeSruI+\
l4lajSkke+iHUmtQ1XZ4Iy6tdzJ+X022TWENZsFzcLnU+FsuxFwa/qk3OeQkC1LPDLwzvzw344+\
McWW58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VLxO7oSITpYUSNHgusuLarHXmrx3\
HwvIrWjVOuESY5zQA8v5jOw+k/J3+o9KS6yqjkq5L5J+\
iDyDhTpYFLfWu9vaGdNb4RCrbLVqwKpsftFq6VKFf7wyVBUOWtIUYbLOvcuauEGj8bocOrU6LZpnmO\
Q/6yYxFYxHglNYfuewx0imyf03lwXj9h0xao+l8GtP4Ys1yJHVYvfhtLfQH/gK4wD9R", 
   "RadioButtonValue" -> "MIT", "SpecifiedLicenseID" -> Null},
 CellTags->{
  "LicensingInformation", "LicensingInformation-RadioButtons", 
   "RadioButtonsCell"},
 CellID->253890516,ExpressionUUID->"21128389-f41e-4a93-a48a-c0fa7cab13dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "30cb3678-670f-43cf-9575-821afae8ef99"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"ff2da299-3dba-485f-9b93-d2874a64e3f9"],

Cell["ClCon", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.932378404831253*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"910de86c-ad65-420a-934e-9202dc2515dd"],

Cell["Classification", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.932378407396838*^9}},
 CellID->1626187683,ExpressionUUID->"82eafc90-333c-4330-975f-bf4b1f39c454"],

Cell["Classifier measurements", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.9323784376941442`*^9}},
 CellID->531261775,ExpressionUUID->"542d81cd-ad28-4059-a5bc-64e37ef1ec74"],

Cell["Machine Learning", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.9323784112895813`*^9}},
 CellID->1802700274,ExpressionUUID->"0b956a71-6c8b-4262-a32c-46a2cb3304ac"],

Cell["Workflow", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.93237841752169*^9}},
 CellID->793565045,ExpressionUUID->"3bb3238d-08be-4ee1-a67f-7e562fb5761a"],

Cell["Data Science", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.932378420581656*^9}},
 CellID->380059638,ExpressionUUID->"4c115f4f-c478-4192-9edc-cc79eaab280c"],

Cell["ROC functions", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.932378428547401*^9}},
 CellID->1421441683,ExpressionUUID->"6fcd2782-da23-424d-83d0-e7fa987c7e48"],

Cell["ROC", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93237840336825*^9, 3.9323784309305677`*^9}},
 CellID->2025898944,ExpressionUUID->"c6feae2e-6129-47c1-9f5c-06521b95c708"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "40dcf0d8-54b2-4e43-a47f-a16ba729f0c5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"3aa5350b-36dc-4379-a162-33d5195f5b76"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
           "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "External Interfaces & Connections"}], 
           "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Machine Learning", {False, "Machine Learning"}], 
           "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Scientific and Medical Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Knowledge Representation & Natural Language"}], 
           "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdj1sKwjAUREVaa63oSrqIEhAKYotxAzG9ajAvcm8+sntTEUR/\
D3OYma5peckpaeCrIZKP1PKKPUA+YbotsDgqzKTsCQxi3UVyRpCSLV+\
PwXkIlPiGCYK7Cwowu4Mn5exvtmJOR/MHd70lCD4AidngdWcTj1eE3NewiDnY27wHy4PQCF/\
4nlKcnM1sewZ0MUi4JJ8fjELq2d8zZ7IK06eYLV9301GV"},
 CellChangeTimes->{{3.932378445848462*^9, 3.932378445930518*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->508531351,ExpressionUUID->"96550169-b56c-4974-94d5-70ead662d4cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "457f8d5f-3d13-49c2-8531-46300a1fb623"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"190c10ee-b4ab-4069-a312-f09f22f8dd02"],

Cell["AntonAntonov/ClassifierEnsembles", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9323784493587914`*^9, 3.932378460453335*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"b78f7e9d-e4d3-4572-925d-20f65434b9f2"],

Cell["AntonAntonov/DataReshapers", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9323784493587914`*^9, 3.932378513240491*^9}, {
  3.932378629271717*^9, 3.932378629272237*^9}},
 CellID->359501404,ExpressionUUID->"dd9ceabf-a6f0-4da1-bb4e-d9822e9bc99d"],

Cell["AntonAntonov/MonadMakers", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9323784493587914`*^9, 3.932378513240491*^9}, {
  3.932378629629534*^9, 3.93237863041901*^9}},
 CellID->1386690900,ExpressionUUID->"79ab62b9-7bc5-4749-9230-a7889da6ef28"],

Cell["AntonAntonov/SSparseMatrix", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.932378632000473*^9, 3.932378657274165*^9}},
 CellID->426533973,ExpressionUUID->"b021ce93-7a69-4b81-8162-2dc7f524ece5"],

Cell["AntonAntonov/OutlierIdentifiers", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9323784493587914`*^9, 3.932378532329504*^9}},
 CellID->374586399,ExpressionUUID->"0965aa4f-a616-490e-aae6-cf2efc23cc9f"],

Cell["AntonAntonov/ROCFunctions", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9323784493587914`*^9, 3.932378467203095*^9}},
 CellID->1663701514,ExpressionUUID->"9c2083ec-8c20-40b8-8122-2287d4859a5e"],

Cell["AntonAntonov/VariableImportanceByClassifiers", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9323784493587914`*^9, 3.932378500188755*^9}},
 CellID->1272481860,ExpressionUUID->"2b3a9acd-81ee-4f95-a995-f8df8f027e6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6d799917-a949-4305-b911-205a62b72d29"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"2415919b-b6b1-4ee6-9e50-d5aa769cc51b"],

Cell[TextData[ButtonBox["A monad for classification workflows | Mathematica \
for prediction algorithms",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-for-\
classification-workflows/"], None},
 ButtonNote->
  "https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-for-\
classification-workflows/"]], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.932378576814043*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"99987523-c859-4106-abe9-58d9e5a61141"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e270ddc3-cd5d-4ee3-95d6-7558e715f22f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"9f35d30b-3750-40d5-b63c-8757e703b6bb"],

Cell[TextData[ButtonBox["MathematicaForPrediction/MonadicProgramming/\
MonadicContextualClassification.m at master \[CenterDot] \
antononcube/MathematicaForPrediction \[CenterDot] GitHub",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicContextualClassification.m"], None},
 ButtonNote->
  "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicContextualClassification.m"]], "Item",
 CellID->1760520228,ExpressionUUID->"ee71227d-d307-48c0-ac86-895b6d3f5024"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "882eb352-7632-409d-9f6c-cb666427e675"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"66fd3787-c816-4400-95ce-cc73c0c9c6f3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c74fbb94-075c-423e-981f-3a7337011a31"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"b222f3c1-9c36-49d7-8fa5-f2174e48dc9f"],

Cell["13.0+", "Text",
 TaggingRules->{},
 CellID->2002022706,ExpressionUUID->"9a1a59de-0cff-4b4d-9e88-d2600ced03cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "346c8d2b-9f98-44ca-8d21-bfcb19ca444f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"2aef9f5f-efd6-48c0-b064-17841b5bd153"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFUNFOwzAMlGi7MUB8Ab/Qj6gqIVUadJpB8JplHkSkThQ7Yvl73IeWN/t8d/\
a5u2uhASkeYTNmiVla2PbfaH/\
wfKm43jsW2H44Oodfhs2LsSN8Qv1O7qrCQXDihXa54fqY1WilL8U6qVS/\
mKxgs3eUr4vn7SGFiEkKPPVhikbcyXknZVRQG/\
qCwrpVrxyjuEDMuy5LmHRm59ODzxNxX7XwOJBgignFzETYdVQgnxg14n2fWUUDaWBuno1n/AfnUFy/\
BlLs4YgccrL4VqK+6GCsR/kDqQVqcg=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->729105876,ExpressionUUID->"580b46da-a4b7-4d95-a19d-6824523c68fb"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "14501ba2-793b-46a9-8c22-ae02a7b97e2f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"e3c4f94a-abc4-4dc0-a20a-6f1ae2970748"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlTZaym4fsfd+BEOdxDStqJ60ZwiuiBqSKHYq8fcLGwS2p/hyfI6Pk9/\
tYQM8KITt0bP1vIe06FBcsD2nlLxLYkgBiaTRsAXhpGXIwDcXdBoVPH5hc7jWytf8gwhpXpUBITpsv\
cIWdi81i+7NNEGpZOxp5j3fUHIKkIV/DmJnFpzeWF8tsISx+2+nv+nCPa06vSvuuPoSxm50s/\
a1q5yx6HiA58L0Nug0UkkeFtWDvkpndI96PPDRjjWiLPds+gAQ49WN8r2m4nYPT6VmdNYh/\
zrIcj0Em4Rh+L7wFIZKHf6KNq+1IlyK43kp+TA61B5OSMY7gZ+DDW6rWijkb1lVrDw="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->637301816,ExpressionUUID->"d462b558-f059-42ba-8272-de2a01b34083"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a15809ec-a3ab-4418-ab53-0448b73afe2e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"38c5e75e-774d-4999-a924-18db0abcdedf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFj0FqwzAQRXGxmzQNWWSXXS7gQ7iCgKEkIeMLKPKEisoaoZlZ+\
PaVoSHbz3vMm27TQgMyB4T3i0pSaWFlftD94viouP72LFwPWbFwveDEz/\
XxxvVNi7cHTYmy4Hj08egC6fg01tdMCbPMcDA0JSv+\
7oOX2SzQv1buXZJ4iswfnQpNhXJLBAWdIpuqhV0fBXPKKHYBYfVFFNDGFj6NclH6WMK5OdnA+\
BqXWq7PFMu2vSGTZofDnMqrV+sCyh/5oliM"},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->729759554,ExpressionUUID->"a885e360-f86a-4d7d-bdcf-5f6acfc91a22"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "228400a6-0fde-4de1-8d07-035d5b6b6a64"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"4bbe4495-796d-4228-b3b5-25a59729f076"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqwzAMhsearM1Wxi679wXyEMFQCC1tqPcCjqswU8cylnTw289h0G3spv/\
Tp8Ov7rnVtebsQT+dhaNwq9fqE+wNrtMDVUdHhdQ9w0zT6jtPj1RdpFw0J2QYEW/\
0a7xv3waTjPfgdwdIATz9J3d3qzzKdddZC0R/U6s3Q8IIibN+\
VzhHw2503nHeg2FJUIz1ObLDQNR0wjgXwy410MscSK1a/doHhhQTsFlE3XQhaxkJSrkXJVSO+\
lDKU703nuAHLr2pOmEobHsBQkkWPnIs7xqM9cBfyEVv1Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->960234497,ExpressionUUID->"c5e20f23-de00-4923-ab13-4f6144c432b1"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "80dac7ae-a926-4fb3-ad23-f07a734bf51e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"19a9ddfe-756b-44eb-9996-3c26867879cf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUpiFpkyZqN8CClYVYEg7ABjXTFkZqaRXnAu7Mm8Sqx2/\
kn7bDlkNwGY4Al0AsEWfg2ZmZNFWRmM3Yz+/ne9/77KPxlA+4qxXw3QvvKu+mfC9ZQXYNefHE9s+\
kJcsgdVDaYme9L3q2P/cKaP90jrdhG8x8fIaZUKyQCoLvcC5uZ3hH654dL6CslHBAhqLf+D8/\
ljZTaL0BG0NPY+TA9hNQijLskfexcKLYtcNTI8oY3Vsf8y+\
9ZIVogbmVtAwrJ1EzWbAavWGVyBQ4lksDmVM1yxEsE7pmWJA/\
sAKVwluplyz3JvwUijz80TCNpqQ2vBVLeLf/8+\
s3lhgg6PYNy4GyUibyKjGXhaS12jQdndOyQuMsywk4KwyWWx6hRQILRgS8lhkIrOTMYVu3gS61dUKp\
6EbI8w6hMMDgLoOKwt7yyTkaSHWBC7jrBmP3ZyK7Xhr0OicaRx+MqM/\
gBpQp4vfnfec5ibyeC7OkgsmzTYZoj8LYzvDje/h+bzIczEMZQjYnfN4mg+\
5klJZEIZefoZUIpdrlRAbkTZ5f7+3oyDssqc/sH82MjgPr4oqW/YXx0B0Mgw4WYtkJk7/\
mNG4irM3zuMDa+HGIb1rvEDb/\
ZJbMuvVhckglJh9R5QmSjkkDdDcOTm6E8nFAUZAvEyWza5JWEAcNSRIAU8Zz/\
irVSmpocV1UoMHMvHOo25vB9zcQp3x4aYJKXL1t3ruIOrftHfqvXmgQegVGkmDuLbvuBg+\
Ma25PcrnmfHAqlIXHpvHgpBsHf3GP9+kW/ASVL7W9N/QpP0i1A1MZyhq5Gh3pmvsrC/\
TwjBNvyTHV9DA19TbG8CbZ/ifUZJvMwdLFz2BRV/SUXcZLNOWHYV6eGmsKJzt/ASlfxEI="},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalFiles", "LocalFiles", 
   "LocalFiles-Checkboxes"},
 CellID->59412863,ExpressionUUID->"0f163e24-df1a-45a5-91a8-21d452fc334f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1SE0EQFkiAAJVcvMhpypMH8wJeqGQBTRUIlYnleZjtTcZMdtbpGWA9+RaWJ1/\
ER9CXoDxaPoM9k90lgFS5h2Smf77++\
bpnsNvnbe5KDXzzzLvCuz7fSmYg55BmT7B1opAk7ZGDBWZry3u2jq2x10D3jbG5Ctcg5r33RmdWLJi\
Q0vjckX57LK6G5hqQjHYnsCi0cECCrFX5PDtUKLVBbwEr90Hl3cZWAloTyhZ5HAonsk3cPiaLiLC+\
VPNvG8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnIS2YysgeWGa3Nlcqnr3ZuvnxnY/\
joyRRfMo/h11hGjsamSyeVZ8YuRIxgIZSSMmeCrb35/BVZXf/\
oMKKNcgdWSIfsSrlZjNeYJtr4tG5UiHOvdxEgsUAxKI8UqArKnOwWJlWZovMdOBnhzMUHKhNXfYMLX\
IP04by0SqHQpqTUUc4gJR6pCIHzpds7bOykhVQ5ik5BLpWEWrCabSWKrqdiDk0PBrqYCSaF1sj3To2\
FEfVuAtfN8ODOUMj51FKxKVHceW1FeQKXoG0Wvz8HjeVe5PxU2KnKMXl6ixDlcXjvIvz8Eb7ftwjdc\
QhDNI9Fqjwm7UbTGS3EFLj6BPUYE9Qmp8QhrXB+HWBn4J0JxMtHiukcBobEBR1bE+\
uhUWyHGZ2IabM8/AUnjmiCapzHF6DG2A0YVflNltV/\
MkyGzbmX9CjM3huj08TQrtHM0A53jy6F9nFq48LsJ1rJOY1+\
GCYLq1PNn49yrXKoczsrIAc79M6ZvN5e3r2bZp9vn1tTgHXlQ9XWWdxHrPf9v2oiUvIZWEXrtXJsqm\
zfEy77fERzGPvfPhYa4V/M3NM01PD9FQ76D0pIjPaLHFeGoM+7cbcLS8ixb51BXnJ/\
gUAOu4lHMhzl9JhWMW+F4R3F1luTk2xvDEiPlIRJWdDzex7fqj7vBe5oX9MqcLL2F7qSDpU="},
 CellTags->{
  "CheckboxCell", "Disclosures-WolframAccount", "WolframAccount", 
   "WolframAccount-Checkboxes"},
 CellID->992770807,ExpressionUUID->"9ea06b31-d164-4238-8927-62a435347584"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUJiVpkyZKQWIFLCxWgJoLsKkat4VIDa3iXMCdeZNY8diDn912uAh3QRwBLo\
FYIs7Am8nMpEQF4cWM/X6+9/M9+7g/Eh3hcw1i9yL4LPiR2ONLiFYQJw+\
wfa6QJJ2JhxST1vqc7GB7FjTQ+\
eHM3hTHQiwen956cEZqhuCuVQSFR3cmb8b2lvY72J9DmmnpgQRJu/\
J6dqIw0haDA6wBRO3fwTYHrQlnj3xOpJfJLnbPnExLjJ21Wnxu8aW1CMwvFTKbeWUNUwnLbXAsk5EG\
z2LlIPI6Z7EFZNLkzCZkDyyxWtsbZRZv9r9/+sKmckV6Bx8CoEfmLYPtstjLpffZIUuKD+\
LykIGPXpXe3AHVRzk4FpD+\
lQuLrDEUnvIqzQSYmEEqlUYxmFoHE5PYOQWqe4v7YxmtFs4GE1P1vbdO5udwDdol5fp11FgOynZMpV\
sog/zJBqGUl9z+ifDta7F+\
bhCGsyIMdWAmYxWQdxpNb5LKBQj1EWqWCWpXRFJDXOH8OMLecfA2lV5FfymmdwJEgbyibXvuAjSKbk\
HfXC6a2RKvxbpNNc6/pqNG6RcoVQOaPKs/H/Nxsz/\
gBxRo8M7qmFsaRfBAQz48vZY6yCJqOU1PuVbRiubCsZSyYIrScGmpFy8mRisDdXYXGRhw4+\
C9NfVwi0fbiY5E99LZDJzP71PuXZQDi/WV+K+6iBqzBKc8xHe2TaWdLeG626exWrPQOZMa4T5+\
tjQNQeL5HSZG9xTBrQ6pwTvDMBLDiSG7zBF22b3esclFuEKgN6XPA5LhxNCbU0XdCIvnBtvvrSHZYA\
ZI9ziCeZ7RK3VZXueROCgYDFReFZi3fgNdbbnI"},
 CellTags->{
  "CheckboxCell", "Disclosures-ExternalServices", "ExternalServices", 
   "ExternalServices-Checkboxes"},
 CellID->603047762,ExpressionUUID->"f6ba995d-3d93-4ebf-97d5-af2cbdcb1361"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVs1uI0UQxlk7sZPIQSgrLZwaBIjDWnvbwx6w4km8a8khkTsiQhyWzkyN3bine9TV4+\
zsY3DhAZC4cOAFOHGGB+\
CKuPHzDFS3PRMn2ggOOexhfXFPd81XVd9XU10HOz3e4q5UwDdPCpcXrse3ohnEc0jSt7A5lkg7rZGD\
DNPG8jndwOakUEDP9ybm0j/\
6bf7RuVGpFRkbCz0txBQYlkgvstjoVE4LK5ykVQPbE3E5MC8A6dWdM8hyJRzQRtpcIbFDibEyWFjA8\
zEPKNE1kBY2I1CKwLboxUPhRLqJ7SF5D0Ab9XH7DF64cL61Av+\
xEc2MQWBuJpGZ3OMxmbLSFJblIlbgWCItxE6VLDGATOiSmZTsgaVGKXMp9fTJ9u/f/\
sQiCxQ6shwsEjZox5SJhWIYzyAhjhLmBM4xGB+bRKaSrM/HFTPGMtALaY3O/LsIzhH2DXPP+\
81k72E7qLZMdvNMTJf8dQaFc0YvH2oT3vrwVLgZ7/IyuzAKJ5COpZ5XQuI+\
n5lL7iz5jmbCithRPtg8swXUNttDo91QZFKVfI8TVzEwLjSyU2tqo85AIASvPtjDUpN9TMHuDo9OrV\
wQV1+NUjrajQprKePPhSqAd45NgXCyAFvXUvNafB3vOzLKWJ/45OkgrO3Lxz98ev7ln337ifj+7+\
df/Na3Dz7mre+++blfleoNnO0lO55B/vZS6icW0keBndqqS6XmpTwVSeLVaA2FQp/\
QOyHOgzwH4kjHQKzztnfwTOjkzsjkGw/vQvLOYahhY8s3sq/Jvr8me83QayP984e+\
JaCkU2FDFxhpdEIpakIUkW9V1FyWKaA3TSAHnYCOqVFc60h0JrPcWDLTRvfy4kLJ+\
C7qqjsBDFGfXHxN7L0prrXienetuK7T9NpUWN/fxj6A5R0j5lQrQ7p/\
3JFOWBaunDhcsbgqP3Lga25GUSjyxXePjYWRTo2/WNdYEPF8ak1BsTaw89SKcgwLUDYNv3/\
6teVuuKSPhZ1KjdH+WtR+v9J5DeHXX/zvryuE7sS7IQYmIpEFRq0rTUcZjR1cvoRKdILa5HQhQ7LC+\
aOPnYPCmYySjG9JpnMIpKK4oOV1Ztv+2yFh6lGIP+IkLrFV4fzn4FJB7XioFQt1sKv/\
aBAN6vVetOeL+5lRSWRoVAIHNJh1jxZU5gHSA/\
H3Ivq85zSeWBLRApMUi83COf9gpJXUUIV4Qh0D7LJqq+\
GL339ltD3eppqh4caVt1psnYQJCqvh7X9lSErpGVjpIFlb1jm3bmwuyT+iBhhEWX0zr5DrxkmtF39/\
TZjebZlQBygyjWsF0uPd8AXklhwEMjsHuuTFBU1qPb4TFUiGI01j88r11aafmLH5mdG0t1s1g7Myp0\
H7NHSJHt/zghaU48px1PgX5OsiJQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemConfiguration", 
   "WLSystemConfiguration", "WLSystemConfiguration-Checkboxes"},
 CellID->481056919,ExpressionUUID->"1c9ea4a5-a6c3-41e7-88fa-a67812653457"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiVpE5JpLpzKRXDjYF6h06gFMpPSTpSZXlHsVaKpLHm0UlvzBDwcvAVHhm\
dg7dhuaQuDL17tSt/+\
fJ90PEpEX4TSgNg7j6GIIRH7fAPpFWTqGfbmGsnTnwXIUe1s12oXe4togNbPF+\
6mWlZu8frSGeVlzubSrqNcA1tFbUKiLcMyXzlTIQwW8mbqbgHp2GgJeWFkAHKoXoNyeKIxNQ6jB7yc\
ixIptWiO97HHwRiC2acjJzJItYeD95SzhtjdhsXXHb5xDoGFjUbmiqCdZVqx0kXPCpkaCCzTHtJgSp\
a7TCsNyDJQ2upqL51Rj2pnGNMNk0igFTQFtrV9Zs4zFzbgyRfAW2lY6si6DfhOjM+\
ch5lVbknrdnD4YirTq7V30WbUy/CDl+UcrsF4VX+/jrqd47q5M+nX2iJ/eYdQ+2vi/kT4/\
q36ft4hHCyqNNquFzLTEXm/iwxnOZEk9BdoKSSoPZFKA1mD8+\
MIh8cxuFwGnf6lmeEJ0EDlisze0kfoAoOKjKVcd8IRbwXNnAbc4vyD6hZkVIE0/XdlNn8+\
5dPOnvAJ5Rl/dCbjjmQFAUjAB6fX0kRZJa2lcciNTq+YIs5yKoIoIzOv4+\
LNzBptoS3uvAALfhpDcLYVqpg8qDMRgwvvCvChfCK2f15rD1tx/1dXxIslNekA2T2z67P/\
wLkd9WmmtxT030uD8BQ5DyIdO+\
LVPRqSxz1wZ2Ju8Z4QEnEwq6ReeIKuRzc8tqWIKwR6LEY8Im2cWXpMmqR3zuodwd4nZ8k3XgDSjUxh\
WRb0/FzUFzMRk4q+SN01ifnObyvfqbA="},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemSymbols", "WLSystemSymbols", 
   "WLSystemSymbols-Checkboxes"},
 CellID->747051267,ExpressionUUID->"9f40884a-fdd0-4be1-a0bb-a45899455ed9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["PacletDependencies", {False, "PacletDependencies"}], 
           "\" \"", 
           StyleBox[
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpExK1UuGEBLI4k75C1TgtRGpJFUfi7K5nE6tee/\
HYbZf34W3gLTginoHZze4mlILYy9oznm9+vs8+\
HYxEV4TCgNibxZDHMBL7fAXJDaj0CXYuNJKlOw2QYbqz3qe72JlHA7R/Ond35bY0i+\
dXMjEQmIIcrAKbaChjenN5N3b3tN7FwQKy3MgAZEg7ddyricbEOIwecA0x2UboYoeDMYS0T1ETGWS6\
h71zL7MKZXftFl92+\
Mo5BBZWGpnLg3aW6ZQVLnqW15VpD0kwBdMWgzSGznkWc0UFIZO2YFIpXQZKU4fgMVuXhIQrA5MeKDg\
xUYFidzqsyAzsozMp1cOwQBoUU45ZF5iHT5ESMkl5mwaPxfDSeZja1C3gvh0lPhvL5GbpXbSKGu2/\
87K4gFswPq2+nyftyWHV+aX0S2qCv9ggVPaKyt8Rvn0tvx8bhIN5mUbb5VwqHZF3W09/\
msklCP0ZGlIJak8k0oCqcb6fYP80BpfJoJO/NNOfAE1MXtOys/ARWkevZGohl62UxFtBhNDAG5x/\
S6HBGZQ49QjaSus/H/Nxuz7kh5Rq+N4ZxR0pDwKQqg/\
ObqWJssxbSeclNzq5YSmJIXMVwbTMKr94M7VGW2jqm1E14McxBGcbLYujP0sdid6Vdzn4UDzu3p9VC\
sXmFvxXb0SQXYHXAdTWsu22+\
8C4nvkZSbrionsuDcJjLD3wtDSJ11t8jB5tgzsTM4tbohiJg6kN4HNP6NUM+\
6e2EPEagZ6SAY9IB6eWnpo678ZYvjLY+eAs2YZzQLq6CSyKnB6ndfKROCx5jNRgnZjv/AIz17RW"},
 
 CellChangeTimes->{{3.932378548465008*^9, 3.932378548578821*^9}},
 CellTags->{
  "CheckboxCell", "Disclosures-PacletDependencies", "PacletDependencies", 
   "PacletDependencies-Checkboxes"},
 CellID->873213451,ExpressionUUID->"e91fb9e5-bc16-48cf-b236-1decc92d3d4e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uG0cQjmxSIiWCNAwXgd0cXARJQaRL4SKEuBJtApIpcIgEQYpkdTdHLri3e9gfye\
fHSJMHCODGr5AqdfIAbg13+XkGz97xThTjBCnChrszszPffPNzx0dDaIMrJML+\
zLvcuyEcsBXGa0zSj2zrTFiStKcOM5vuVff0jm3NvUS6353r63ANYrg3gyjWKhVLb7gTdNqznTm/\
HusXaMnqaIFZLrlDEqStzaOHJ8LGUltv0M6A3Xreti2GUpKbA3pywh1P921nYnhWurjTqDsLfOFKfY\
3FsZXWFiO3EjbSeXAXiTQqtDdRzmOJLkqEwdjJIko02oirItIp2WOUain1tVDLJ4dvf/\
w5OteJSAWZUHoWnSOFrRR8vXnoKRI9DgTtAr5rOyW9FeD9BV9W2XfH3jmtqktjAvegsMQ1M5igcoJL\
6EORXWpp55ieCbWuybcPYKWvwRmCw1bc8Nihsba1MB4bm8OJVm7CMyELGADlHmMEXNnowujGqDvmFk\
sAAfdJocg+Jty9yemFEVdUr++\
nKal6zBtDoL7i0iN0zzVlPbtC03DeuoWvG2IzLbUJHMyfjsuzefnF6y+//vb3kfmUv/rzu2/\
ejMzHn0D7px9+GdXttePnsCIqkAmPqtI9MZh+\
vktU86BPTeRIdsGTJNSqPeHShtzul5CP8xyJLhUj1QI6IdYzrpL/\
jVfonWuDU5Xq0JRbafB4vTTaU6g9231qeHGGVyhNWv7+GjWWvbLBz7lZCmXZg62gQV4XasvDb7+\
G3x83HvrzEIYSmPNEeMvaN0WZZnyJIF5iXTVytQ8xl5hs/Lwb2e6xdzqjGYz/IZnuCVIZ+\
CUdbxPTCe1PvDa7Aj4DGjKavtrPv4x77eQoONnk38Dc/\
LMxGzfnARuEvnymZcI0rRZ0SDurf3pFHVq6DI7gIZMiXtNUmygjEJEgFCYr9fB4qqRQWIOb5ajQVA1\
XLysY7OAcQofKnKNxxQd0B7Ny2dh6wf2nrKguaoVGOEy2jk2e7R1hRfVpIqoSbBr8A8XZ0TTVgUdbZ\
Rj+PQcaVZ8pu9UIQ+\
hPaapMbsh1SV33WBXgL2kjDuGIeUuGU0Xfj03QG2H4dNjWc61I1pujLcdlUeT0xbkox3kIg1A+\
T9ltArO99yhXWLI="},
 CellTags->{
  "CheckboxCell", "Disclosures-OSConfiguration", "OSConfiguration", 
   "OSConfiguration-Checkboxes"},
 CellID->353371864,ExpressionUUID->"3f6183d1-5889-4d6c-9bee-3ac7d4f6b2f1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVc1uI0UQ3mzsxE4sB6GVdoFLa5EQByy0Fw57IIondtaSs7HcDghxgM5Mjd1yT/\
eoqyfO7JEjRy48ABIXXoETZ3gArogbP89A9cx44lhkxQFf3FNd/\
VXVV19Xnxz2eJO7XAHfu8hcmrke3w8WEC4hih9gYyyRLM2RgwTjnfI7foiNaaaAvnenZuU/vZm/\
NTahUAxzJG8mtQMrQieN9idbU7HqmxtAcj+cQZIq4YAMcaM6/\
fRUYqgMZhawAOIFzmgTpomNAJQiuH06eiqciPewNbQiKaAe1tutGdy4Yn+\
3gv96J1gYg8DcQiIzqQdkMma5ySxLRajAsUhaCJ3KWWQAmdA5MzH5A4uNUmYl9fz5wW/f/\
sgGNxBmjlz4gsIxY9n08iULTZIIHWHhcom0TTmA1UQJXAuVCWcssmspmCdyu45dbBVtKOvYm4l5SU6\
7nzlndPlRu/A3BhX2oIQG3uV5cmUUTiEeS71cNwkf8YVZcWcp+\
2AhPJVgERszm0HtczA02g1FIlXOjzgxEgLjQiObWFM7tfsCoUjA532aa/IPKe/OcDCx8ppy+\
HIU01YnyKwF7T6hxIC3z02GcHENttZJ405+bR87MMpYz8H0rF+s7auPfvj408//OLbvi+//+uKzX4/\
tk/d487tvfjpey3AL56AkypPJ3ykb+txC/OE2UfWBbkCBKc+\
JiCIiB5tDodDX9maR8kmaAtGlQ6Be8JaP9YLa+7/xyr/aKZSyFjiylXSLW80oeWWFlVDqaQoiQq+\
0lZVeec4wdBZEUhjR0H11pedYZDpckEtKSSkFii0JEBR+wDC7qtb+\
0NnkEnnn3FgY6dj4C7PBpQiXc2syqncH22dW5GO4BmXj4vf3ce3ZKS7fubBzqTF4tFG5t6/\
VsoHwy8/+9+ctQnfqwxCLUxHJDIPmrTJGiZgDl69gLR2C2uM0GiCqcH4/\
xvZJ5kwinAzvKaZ9CqQFcUXLu91p+TtIza0HG3/GoZg0a5z/MJLWYIcerOKhTrf6D/pBv14fBUf+\
krwwKgoMjUEgST7AbiVPwvRA/\
O1AyXBJg8eyhJKhaUrLpNjnT0daSQ3rJC9S0GBL9a8HK398T7493iLtpWBd/hqf/Yu0rK5xd+K/\
tkrql16Al2e0sazrbm4ZyxYMIlm2prp9/9K0rZ26a/zdjfb07q+F5kmWaNwQSo93C5/\
UUoiC0vaJznl2hUCP3WGQITmOND2GVfBbo38HsfHSaLJ1poDFnZ7lKT2fk2Lm9PiRbys9D1EVONj5B\
0BEqb0="},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalSystemInteractions", 
   "LocalSystemInteractions", "LocalSystemInteractions-Checkboxes"},
 CellID->510770857,ExpressionUUID->"4b103da0-772a-4aad-917e-397f17c666fc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Other"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVNuO0zAQZZekF1p1QeKJFyzeyy+s2nR3ibRLV3F/wI0nrVXHjnxpN3wj/\
AWPiG9gkiZpWUDCLxnP5czMmXFmoykNqSsl0N7Su8K7Ke1HW0h3wLMXNrgXFjVh7CC32cXxnl3aIPE\
S8P4y0YfqWqlpuHRbMKgdJOww109g0TRaQV5I5gAVWdB4vl4Im0ptvQF7DAptEIGUGNxHxwVzLOvZw\
a1heR14eTRTO+\
OcMM6FE1oxSRw8OcIsUQAcOBGKMJQPJEVnsgapD8RpwnXqc1DoqcrzaH6qgrgtQ7sBorQjEotEOLbW\
e/hIxw/aQKwyvcJsbfP21Zylu43RXnGsenhnWHkPe5Amq8/P685zXLfxwMxGKBu9PSHU+pr83xG+\
fa3OjxPCJKnSCLVJGBfeRmFnGcY52wAVX6AdA0L1aMok8Abn+7UdzrzTOXMi/\
UczwwVIcGyNYrAyHjrDoKJ9xTbd8Ol7CmnFX4vzxyjb0FEV2nTdFdd8o3k07+Sr6ArRx5+\
05JHGZQEHuHqTmz2TnlWp6tG/\
i6RIdyTThuSYGmeNYl7b6YdYSaGgLWlZgAIz985p1a5fs51TOng0ugDjyk7TXxYVim3X8786QOYVRg\
vckzOx6yl8pjySeYOrV5Mc3jJp4W/0P7N0/\
NM3Z0RP28ojLX2u7NmAp3QSKwemMAhYkzOcqZL6tQV8yKPIW3SMFT70JtVJWb1xG3zWCnXjBKz2JoV\
VWeCv4ZGlsoq/qgbksacmcXTxC1nIgX8="},
 CellTags->{"CheckboxCell", "Disclosures-Other", "Other", "Other-Checkboxes"},
 
 CellID->793947667,ExpressionUUID->"d17deea9-6b5a-482f-a171-157655d314d3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "524397da-3066-45aa-b20b-26be5a861bc0"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"1bd6d0e8-6e69-416b-947a-fbb41e7fb5f7"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"2b83162b-1ec2-46bb-ad2d-c87ad12c6064"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1358, 1205},
WindowMargins->{{1036, Automatic}, {Automatic, 3}},
WindowTitle->"MonadicContextualClassification | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.932379851846638`16.34723045142104*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.932379851846638`16.34723045142104*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.932379851846638`16.34723045142104*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.932379851846638`16.34723045142104*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 14 suggestions\"", LineBreakWithin -> Automatic, 
           LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
          StripOnInput -> False], 
         StyleBox[
          ActionMenuBox[
           FrameBox[
            TemplateBox[{
              TagBox[
               GridBox[{{
                  TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "14", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], 
              GraphicsBox[{
                GrayLevel[0.4], 
                AbsoluteThickness[2], 
                CapForm["Round"], 
                LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
               ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
             "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
            StripOnInput -> False, ImageSize -> {Automatic, 19}, 
            BaselinePosition -> Baseline, Background -> GrayLevel[1], 
            FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
            Alignment -> {Center, Baseline}], {TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L218,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "2c280f99-9033-4b9a-9992-5ffa2d93dc96", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 218, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 218, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L218,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{218, 9}, {218, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L218,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L230,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "80139a89-834d-41bb-b88d-9b460a3d8bee", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 230, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 230, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L230,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{230, 9}, {230, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L230,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L251,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "e8aa616c-2c4e-4e6c-8999-96ac7f2bc819", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 251, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 251, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L251,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{251, 9}, {251, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L251,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L284,C7) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "34600925-3daf-4cbb-a649-31d9536d555c", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 284, 
                 "SourceColumnStart" -> 7, "SourceLineEnd" -> 284, 
                 "SourceColumnEnd" -> 11, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L284,C7) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{284, 7}, {284, 11}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L284,C7) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L311,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "e971207e-be1e-4d11-9bc4-6efbba191c3e", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 311, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 311, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L311,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{311, 9}, {311, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L311,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L405,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "11f8d094-b54b-4407-bf15-9823319a0043", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 405, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 405, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L405,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{405, 9}, {405, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L405,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L415,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "c6dc4e9e-7031-4176-bf0c-0d39bcc4b6f5", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 415, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 415, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L415,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{415, 9}, {415, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L415,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L457,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "8e5c01f0-bb9f-4dae-9bdb-bf7e0571fb11", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 457, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 457, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L457,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{457, 9}, {457, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L457,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L475,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "2d65c688-4e07-42a7-8b59-637605230eed", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 475, 
                 "SourceColumnStart" -> 9, "SourceLineEnd" -> 475, 
                 "SourceColumnEnd" -> 13, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L475,C9) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{475, 9}, {475, 13}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L475,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               TemplateBox[{"\"Suspicious use of session symbol \"", 
                 StyleBox[
                 "Echo", "Program", FontWeight -> Medium, 
                  ShowStringCharacters -> True, StripOnInput -> False], 
                 "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L513,C11) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "e7ded9bc-cfc1-4fed-a509-d3c5b520b49a", 167852847, 
                "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                "File" -> 
                 "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                 "Editor" -> Automatic, "SourceLineStart" -> 513, 
                 "SourceColumnStart" -> 11, "SourceLineEnd" -> 513, 
                 "SourceColumnEnd" -> 15, "Message" -> 
                 "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\"\
\\\" (L513,C11) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                 CodeInspector`InspectionObject[
                  "SuspiciousSessionSymbol", 
                   "Suspicious use of session symbol ``Echo``.", "Warning", <|
                   CodeParser`Source -> {{513, 11}, {513, 15}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-MonadicContextualClassification-paclet/Kernel/ClCon.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 4303910697145193572, 
                 "Position" -> 
                 "\!\(\*StyleBox[\"\\\" (L513,C11) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[167852847]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               "\"Converting dynamic outputs to bitmap can ensure they will \
display correctly in other sessions\""}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "86d05d4e-738b-438a-9545-ea21caa299cd", 661902970, 
                "RasterizeDynamics", {661902970}]; 
              DefinitionNotebookClient`PackageScope`seekAfter[661902970]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               "\"Suggested URL: \
\\\"https://github.com/antononcube/WL-MonadicContextualClassification-paclet\\\
\"\""}, "RowDefault"] :> DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "5760d6d0-8096-494e-8619-f9dc4c6cd6b6", 221376991, 
                "SuggestedSourceURL", {
                "https://github.com/antononcube/WL-\
MonadicContextualClassification-paclet"}]; 
              DefinitionNotebookClient`PackageScope`seekAfter[221376991]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               "\"URLs should probably be formatted as hyperlinks\""}, 
              "RowDefault"] :> DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "1ae7abb8-e408-4b91-bc81-43f98c527d23", 702019342, 
                "TextURL", <|
                "https://mathematicaforprediction.wordpress.com/2018/05/15/a-\
monad-for-classification-workflows/" -> 
                 "https://mathematicaforprediction.wordpress.com/2018/05/15/a-\
monad-for-classification-workflows/"|>]; 
              DefinitionNotebookClient`PackageScope`seekAfter[702019342]; 
              Null], TemplateBox[{
               PaneBox[
                TemplateBox[{
                  RGBColor[
                  0.49019607843137253`, 0.49019607843137253`, 
                   0.49019607843137253`]}, "HintPodIconHint"], 
                ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                BaselinePosition -> Scaled[0.1]], "\" \"", 
               "\"Related links should usually be given as a labeled \
hyperlink instead of a raw URL\""}, "RowDefault"] :> 
            DefinitionNotebookClient`WithCurrentNotebook[
              EvaluationNotebook[], 
              DefinitionNotebookClient`LoadDefinitionNotebook[
               "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
              DefinitionNotebookClient`PackageScope`setHint[
               "Suggestion", "Paclet", 
                DefinitionNotebookClient`$CurrentNotebook, 
                "3f78ca51-2e74-4eff-99c0-c9f39aede112", 938599834, 
                "StringLink", {}]; 
              DefinitionNotebookClient`PackageScope`seekAfter[938599834]; 
              Null]}, Appearance -> None], "BoxID" -> "WarningCountButton", 
          StripOnInput -> False], 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "fab8c5af-eb12-443f-8cb0-dcfb0e84f45b"]]]]]], Appearance -> 
           None, BoxID -> "fab8c5af-eb12-443f-8cb0-dcfb0e84f45b", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2023.03.03", "CreationTimestamp" -> 
  3.932248312668137`16.3472159239092*^9, "UpdatedTimestamp" -> 
  3.932248312668174`16.347215923909204*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "8f99c2b0ee5e9f24d331c183562e905b4bbb1a6f"}, "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}, 
  "AutoUpdate" -> True},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Tech Note\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2445183906026021612; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "New Tech Note"; 
                    PacletResource`DefinitionNotebook`NewTechNote[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2445183906026021612]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWHlMVEcYf28XlGM5VlcRapRDDFK0sBaLBWVXUDxTKpe4JgvoQlALAsvV
hHIoV4KK6wGiQlUqoqDcKKysDSZtPZJWTTzaxGrV2mqrNtqKB3Qnz8+Zd6Cv
tn90vkgyv+/4zc58M9/3dEtIXZoooSgqw8r8Z2l8tjo9PT43wtE8iUrJSE5K
0a1akKLXJenSAxKkZlD58h9y+X+M8Z7a/I3G7V/lHQgKp2kGmzw9rcrQb+j/
ZItPIGBvNywsVVGVJ01DWAqbpBYUFZ1hGsTYvssRqTLHt4nvoIgvbP6ZjM+I
Nt9PzUePPdbvcvX+ZwzTQ9vv8yMh6R04fFNY0/ciOkM8wzjXY4+F47xJgiPF
cqRuY3kOlnUGLFq4khsv53NPv8zd7NXs/lYsR+158Gm9l1Tu7IYwmq7oJaMd
uWMnR7jMMXLd/isYt7UXx4F9Rjtj1NmNXPPsCKyh6S9+AHzUOHEcpR3gMWM+
iQdHrq1kZFkmidvYQS633399ZBf31G21F/ZdLmmvPo0zVcyalCFg33Qr78Ce
7+qv5jdOm8W3e39u9yN+npR3ieHQ5ArlWGwW28pBIXwfilvFcESnC2eyMoS0
ii8UstncZ2XDjiaROihGjbMcyWVJLBP0N2ELC8vm229icHFPKKo+Y3zK3Jj6
q2lV3gFvZpk4BfSqKHwfFC4fLNDml3cVt2IGO7m+5sRzfoSNxglemGVV8dZT
yRXqaKeJ5V1gkWIALX5bk8r5u+3x3qEbwvuN3kJ1DN9j5mLQdz60skXIeM9X
PoPMnWYzdD4cjoGRMC3XRyI5+CNolyQhJK4A5mWdXGs7Ofs3HP+z9nz16fbf
Scz41Muf67c8B7Q7z6L5RiPMAxZxbfU1OFbDtVDNSGtmnb4qQz/W1F1ElYsc
8rG9A6BF8x1fw2zhSnbddHHHJ115kl3rJNI1mzBL6HI2x9SglrugQzHzG7Ft
RQ95IglF+DfwqylNb2gRugnWMnNteFWLj/+FsNlLyd3tfoTrTPWZV+vUcBnQ
cHbre8HoTzy3ljGYxzT2Cep3MespaibRtZWwGy9vnPmkmXPgjy1fgte7Mxlk
fhwZa/8V+9EQTZuPzwg4HBSA1J4XZqCotB1gExTO58hrYOoYM5RzcCcAHHIn
QKpPD8eBzx12GHP0PAlfjXPI3C8J7JXlSNjt9vuSYVrKkjbwUs4R2quCwxLU
mFJTZpCoaQjXuPqrgPmqhBhs7XH1lTsxmP889su24lOEZuzEyJE7ZJ3Gu23o
Z9bDHvitrb2A0Um+NedwxKO/IGzrKZhn15FnRFHeAdh2zSZuXxscCXtpGorR
kxqpRWx2zxPQsTk8/bgrxe+MaWj9UXw/be11pZih5VduxzPCqu03kiPFALPM
3VyOCV5kv9P3ovJk6rbkipI2du3n39AwLegO3UBzn0CYH3vMfzHUMeyM4Mu6
7Vwfiqr6BrRxBWhO0/suAxK5jm8fpoX7LszAz4bJStAanylcGCwiFbD9V2ja
xk4ZosmNTsc+Xv51F4Xit9yduwJbqaJ0JYEfoT4xaw9YFDaBVuaId93cVb58
MxPLsL/UIlSz2URmft3FGL2tA7YI1UAONF7HOeWnxhb6XULrJFnQsLHz+XDW
x6ooZQjcOD4DKXsvkfnu6i1kYxpaVcw/H/5QRQl7L0lk27HfLJCtp8Rw6EqF
fDe08F+54MjaC0jX8aDpFtglV4jhCAoH+44HzPvdfFuTy63xMGwd5GMpKq8B
fNTRpNZj2vw4RvznkfhoZ7A/fBO9AdzTEhrM70HiNBGj1jJcRY3PJvmSHod+
Ao3Yr2j8HVXeNXMx7Cr7K7HmHOzFZGXWHpytjmPEcXx2kIzWcG15juOYqUHk
dz+S2OwRVmFa3DkhaboljgF1R9wc6R3A/RJIz5PWe1wsNlssB0XFZgllI8Qe
TrOhxcJSPAfqIjabhOLkNYSvFsL3XlqsG67qv264eqcYuv4gI9V/bz+Kptcf
IbETz4ualXP+zf/+WMuWJO08i2J1P0qrYjJTIl2WyXx5NV6PK1C88/bR/7vx
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWG1MU1cY7m1vS4GWttBLy0dLWyhl5aultrT0C2QzM5rMIWgyluDHkMwf
YgBF9gc1cWpijDNuRNFsv2Rmuqmb/NjIYIFkG2qyAYnAljidODfdmItu+AHs
Xi6n59x7D3LH9mPnRJLzvB/Pue95z3nfat3UWLVFKpFImpX0n6qNrRVNTRvb
1mrpRc225tcbttW/tnJbS31DfZN/k4wGS+b/MSb/jxFvt7QX95R86TytXyMh
WEztye1w97v7c97SBAG2tEHIqRpXX/ksnPlnCVIiMTWXz0DMN5rZSGqX4l+u
t+wp+wn1z05Lu7ZCiIYfOjoTnf+MQfd8aFLoiZmRR4FbeEl02tQsnkFpCT/E
+1lsUtViOezHOJYzhZdSVqVt5vvLe0/ldpzk7mbZN2I5vEPAJnjPdlBpnQOJ
4s9Qb2V3SB0Dk9rM7b4xiJNJ4jigjSINiaAV3TO1FjEgSr+PWRjFcRR+AiyS
X0RxqjrnCDtNO1Bcpga5HJp8tud4m/2Yd9g3WvixZxBmqpg96SqBfmDCeXrZ
t6XjzjOaMEbvhfADYZ4UdYvhMLfhcsy8k6sl1+PvQ8EFMRymJnwm6ypRLcse
nI7rc1kC1xshk+sVRmkcn8V2AGvfi1jKy24vxhBvs+71XI4+Zm9M6XhuR5J/
cZaE54CcqoH3IS49eaWlvai74AJkIHWOE9GnQg/FPQl5kMW6zz2QfSh1nTKr
qBto2I8CKXxbbQeF0VYVB27i4828hanrhRYpq4E8dF+WOBcFe8xmZv5OcxhC
9xdiYKexjm9DSP0/AGl6A4NYdoN14SW+NqnjfkPkT++QZzD0G4pFH6u9fDvz
LiD1XGHWxT1gnbKKr+s4AX35rxtqpfHsPrXl7n4o8Y4wlQsditTIIyBl1iVf
gVXaZm7djLfBk3b1cWsdIcs5DFkMr3A5NKHg3RgH7dN5BsmUT9ETse6F34Cp
pkTBedxNkKno2hCrxZG/GIyq4mTKA1hnPJdj+6wVMEiYlzg6PX8mT2UqFlMV
cU/Q0cnuJ/8ciuYcAdGYv3H0SbPnIByuL4BVUoBFjBtQX74xeQrwZmmHZwQ4
5PrYmQ7hGSSS3HeADt0XCTicXWwdY4duOewEAIfCEMu/wYU44LmDCEOOyFTG
VphDdL+EiZU0DkQ7NEks0FIWXgRWuuW4WOV/QDCNqSTJh6Lls7DGlY4DTFuO
YyCTYPVVGFgseQX3Zct6Yy6mxyFSdget0zDa7n52P9wB31rvMERVLs9VxOPP
DOYeAOu8d9Ezor/Qj0TwML+vpapBLOlvb0ElBGlujUzF7iCHQ+Xm7xS+M3RN
/AjeTzLJth8yBH/hdzxSZfBXlMN+NHZfTvI5EvLQfic67eqzH8s+VHiRW/uF
N9RYB2SBm8xaEwTr8EPhi5G6npsRwml/m29Dv4FfA6llNxs+3yhAMrcL9Y11
4L7jGYTZoC6JffmTuHQWy2wEmG+MvvRqXaW5zdSE2Hi9Izj/wbuGV6EWVWN7
U/8S0yc6TsXux1kgJbUw6nRXOf9m2g5Ae4I01Lp60cz3jphaSA3UMNSCHPDf
gDmlrYAajk7cPlEWZsjUmjL9y1SNrhLcOCEDOn3X0HxPdOJ0ymet+4TnIxxU
Dd46fQtXj/tmgekeEMNh24+zLTgvfOWoau8wIwv9HpgAetmHxHDo1wB92nbu
/S67bW7j13gwSI0ila6+XcAmdR0qVRUZN7AzeQWKK9KAfuAW8wbwTws32O9h
pjILojIVrKLRJyoXahH4EUjE/oqGv6OKulNWg6hyfyV6roJYqEscp2C2yilx
HM73UW/+6+ZdckoTQn/3M9PcKlUa62DnNBerCXEMTHfEz5HII9gvxbCp4D0+
Zm4Vy0H3kjtx2Qh8LyShs1UunoPpIly9OD/OroytONx3La1+oar/rJHotB8N
/4F6Kv1Onkz3hx+iWPRp/jm6Y/gX//sjU6U3eK4wvsIPcjvYzCRkph3sLy//
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1:eJxkfQV0FNvSdXAIEGCi4909g7tbAhuHAMGDBwgOwd3dJbi7uwR3D+7BITgE
dwv27+qe+/Gv9e5ab71XryctR6r2rtp1rhrZpXbrZF5eXkn4nzEpvbyS8r/L
fGh5rmnazEhXNXhJlLcZP5a03fYyWWZc2P47Z870ZkTn75Nb/evG3WXnUs5N
bkaGtxdud/rmxtcaXbcuS2lGxN2Kyfq+cmN8cJW9bUxmHN+ap/Pyh24sy5hk
TM3MZsw6cydT2B03Xjb/vfhYsBnxk7s2en+F9/vctnTt8mbsrHGyZcozbuyu
MDd9gSpmxD48t/nZYTf63/9+u2BVM1pML/xS3evGzc77LjWpZAYty72tbvxa
++FK9bJmzH1f9ff+tW4Er5unvCxlRq+6hcvELeTf/4pfVbqkGY2v7n/sR7vY
p/XFUdOMEk/a7E4S7UbSNOOdLcPMaL7qTbOG49zovWfsu+PVzPg8jh8y2o3E
fnWmepczY23lUVtHDXUDtcuPrsf375sy/W/fgW7EzLk5sAnv3/vgYkveQW7s
f1O2x8KKZmwO2eYG7aDk4T65a5uR8mq+geX5+y0X8isDmprhdrVtUWOAG6GZ
zOEf2pjBt1ns7M3xiLgStLGlGWtuJdt4uKsbOzn81TuYUaB7wNftLd14/2yt
z55+ZvjNj+5Yrp4bnX0ynrs8wowbO7NtK1PRjb11SjT4O8aMZrzN8hJujG72
8nn1UWZjXgq4kadywYDqbc2Y09k04nAONyb/OnK4Rw0zlu0Jc+XO7Ma5CgOz
tgkx48ntmvkvODlfz6tXyMHxeNOq64z9FjcuONqlGE1bXm+KvxsLBm47P4nz
laT6yPQ1MriRY/DEPR1pT7l9/PRvHzeut1+x8mO4Gf2/nRxwzduNsQNyDUqI
NKP9z/rh85K7kfFOQOsi7cx4tP1BhWZJ3Bictc2BIH7vm0XBueISXcgV+2N+
TV7PLOP104WRibOKN+1txqqsuT4MTerGx6cpblZabUbxF4Med+TzVyTZn8IU
Z0bdnu7ZfxU3svXrNTnJDzP49iVO0j74YUfbWcktyJbwdVpskBu5SqU43Del
BQdW5G9Uid/jV2Lz1qp+FsTmqXWgcEauj7+NT0/ObUHKfS3uLEvH7zkzstnL
ShZjfPk9h5dPcl2PtKBBcv7wjwttHD9GDGtrwaQFo0LevHfh9sPNpy0zLfAd
vHZx0acuhNbtkj6K9rH3mfJnfuTCkgo7P/2eYcGfcolvXj1w4f2V6pEZ51gw
qvzt2MU3XShfaO+Im3MtUM8Ebp9yyYWkcXExOxZZEHfr9INsp/k8+WeVBQXr
5cux9pgL+dZ0mXt1pQUXfnXwybjfhTy21KeT8vq3PbfH/97hQsC2iHRPV1hQ
tOFyx7KlLrwdFt781DoLVhy9WXbKCBeObtzXb91yC6aV4IwOckHf6Of/105s
MfJ9ux4uHFe2dG93md+T/vuvfN35PUX91+a7bkH2EtPODmnnQuoL5lq3f1pQ
qCrfPJLvU/ztDJ+vFoi7SFuXf2/KkG2+yQptcq9u1uouPGma51HJTFbkXd6g
c/sKLtTe7Rj1irazYuroIqVc+LOfO5F2mmVvk00p4cL+s1ywWawoOXZh9p68
vt2N6rlLWhGWstLp9QVdCHrepaxa1oohlQ8NsmdzIYe8V2UrPvYeeXV4oAtN
BnoP/VDNiqDiaQfczsTvb39kwsFIKzq3L+x+Szv5Yj65ixV3vlzxSxLgwozY
dvZ6nay4f4eOy+JC8P0ak2Z3tiIkV9y8Z3YXuv49Ezq9uxVxfQbXGs7fH67c
7uyenlZcDMjYKEMGF5YdG9gvSW8rrv8tfm52KhcONjneJ5J2lqALhc95uRA1
5lCWjvz9uo8hrkyJGup67z2wopsVR20hg7t80nDm+zdzIJ+35bTlS8Y3GmKu
rPDr2diKL3duDOvxTDP8He2BLQrUy3dbM76zvhUH883NEXRNw+dTznTBtAdd
2tbwy2kNVwpP77KzoRXZbter/IO2aWnoeUc7KyIONS8atU/z+AsrZJdt2qDh
a8NFqfrQDmkxLtWMhRr2z19NV2pF2l4NHs6arcG7U/HZjzpYsT2gzdKF0zVU
i1jYEvy+/BseTTpHO2jXZa/44VYsbFdffTpGw5KXU+Y/HG3FqOix2af21BBe
+UeVHdFWmAt9rtG1m4bBhVOlfrbGil6/h9/b0kmDz9Py+7zXWrH4ab+ufdpo
yCb+hnan8EGbdkb+ux50Zlxvf9p5Gr+aMHKWFd1vmD6W6aIhIf5Y5pMLrYb/
6M7xy16/7+wJVjS80a74pY6a4RfHW2G9HPLK0lpDlq6vOi+iXbLjrqbtIjQM
lHjE3y+W9w7XYMt7z51ymBVz0hc4faqKhhUMj61GWrFTj2MacPbTg7dRHN9N
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
zrsfp87g88Tt/6LdTeIa30f3oy7G9cJb6g0/oWJ4qalZq2RV0DJjg+LbeX1Y
8hPR+Wlb3/9oMfKSikEp2scuy859J+uQti0zmU0+BY+FCNDOENnWe2FRxcDN
fL+cgn9ot/E7m3tjrIptAz5uqVmScStPeFxzXm9S836B1bTnyEDRjnr+c+0H
+h2ZxhvE52XPcAQYN28T3t3g++2R/Fh9BYfif3+IoN03NNWrv00URIz+2zMZ
baKFdEXpl9J+qLw/mPYK+b6WCtoJEeXzhX0taEPcwWnrf1LFU00QjYJ6vuXv
peL707lPD6rLuF/zaLU7HM+QKnvbfKyu4InEJ9oS9q5VVVB8CIEvf58+d8zC
d5UUeNmfnU1Lu+2bnWnPV1BgLqWtKk++IbCtSxnG4doxC0beVtFM8qD8nhMb
AssVf6iieoUcE3PzeUt+V85kfqZiiuRpmykwtbn9Z+ZTrqdRja7ub+l5/n3V
wBd8fwbXHtnJh3r71x5cu5MCRodUZR+pIHjs9rArx7vK0HmNeL85J7iTOyjY
+udii4Ov+fwbeW+m76ig1KxSPcv85n4YKkiIfs3MmfyjYjeXy5Rx/2tnmpai
2oOvKpL8TIibGU2/2qPijK+0axEmjZxGXPT6ZurjP1XD385WMK5l07sVk2kI
lQTFLAWHt4X0P5Zeg4luxIv23dIBy8oFkb+eX3fxGu3V5U0HJmoaKr0/NPP1
HAXJXi+vU9+h4WIde/eCCzg+I+fuHOJPPl2p+48Mc3n9zKomD3m/tANuP9xM
26tb/c1aWg1Zdf6poKRlTGLT1Brm3hzYxEq76qlUIfNTaEbehL9v8/F8kaIB
Gn426XTizzIFE2Th5dcQ8jFVsosLFXSS/BH59CfJl6zmeNyM3HWRfH3k+3aP
xxL3H57JD66rQdhaPO1zm595HWmi4cPewUc6r+F4d6rVZgTt6V6Fd0RtVAy8
X0fD/A21Mlxe87/262pLP1mqagisXPNX0DYFsq2Uqp7xIm6vPP7UlvGVNCN/
S9yeYXvScuG0uZoD9t9UcI8wOqGlhvpT2uSad0FBnU3v8wR24/fWT/638S0F
u+yWgOW9NZTukqN2i7sKwpLO7/F+oIaG7Wt7772nIGBx0ubBI/i+pNUhtKO0
goG7J2rQHRp/Hzjkjq97lgadvjHu9TuH1r/ma8Y+eq5AaJXzhgZXDTrM1wr0
tIq/C8kkP//2n/2oZP5XJ94rmLm47s+edzWs89lj7kybo1WtwCMN3f9k8dNo
tyZ6q8j7pc7x+H5b3i9ZzI19peM1hPvIhlPwNWWzOdWeajhyZmmFnZ8UjOm+
rOmoOA2vpsx/mPKXYvilBxpmlZOZVTx8QzN44EfyDEmo3dRQ5+NLWzLahyTP
90SDbJfbfP64LQ9fzLyiIbYYN/oH+mPCuRfbNFTp9OjJYH5vgYHlq43brmFI
vvd3B3D8dd66U4O1FQntJQX1s4dcrbpfw9tXh4u7iBsKrj4bGXmM87nywJHA
WPrXyE/dOp3i/WR/0JasXYrrtBcOzXL0uoKlks/n981ZfvJdp9sK7ozZ//Tl
Nw1Jd719tpY8qduUjE/Tervw9UXfc3iqYHuqRsNUqwtn72QKS8vx9l5442Zm
iwvt66tPs36hv3M3LfgjpQuVrZU2nPim4Lg4oiQu7Fn3ep9GnFJm/6ZmW15p
eJdaElMKch151PXZSQ3RRxmAM5C3cfu1PuGZH0XFlzzx0XcOaejSyvFjBHn9
l0fH65fcq+H+uIZ5R2sqOsZ3Gz+Z4xNEuO92qRhypPPNnbu5v5P1Tesmjjki
eeqrGtKT3l6krfsL2pmecKcXoR+rkSTfossaVpX+OVUr6/Fb+zQUanm5Z2/a
zVNdMNdap2HF/YM+C8qpxneN4f7MUXjAEuKey/bjF/z6a4h3vquXs6D6f/nE
NZJQzk/ctIbEt6OGqOKzH63j/bgKYm4M0HBe/A1xVKm1HFmuf4FD6aoQV0Rk
P5txtoZOiduc2WureNalrJp0sgaha5fqM04If1qk4ZLwysYqpm1OXjtylwan
5CsiVGzs0rz78kuakcdrStzjO6svXmiQ9HitBiqKS+I3A+crdtmL18RhfSSu
5XJh6ZDhE/z5PV0GvpmbuYwLA8L63//eiN9X+siJ8aEujCyb3Fa2tQqywdIT
h3L+hT/w/l4dOtxqNMRl8D/iLmvbq5kOD+LvJdHTW8XmTd5xkX1dcDzc/qDC
EA9O6OrCIeH3o1T079rneueOLuT7q/7+SlvKa+27u8DVvvvJWOJCyS+1d6GJ
4KuJKqR8lYX2A8nfTVOR+nTSLF3ruAz8PklF/ZDmjgIhLkSsnjrrzAQVN/Q8
jwuuBxnXxfHvS7hCB4xwuhBdZHKDCdEcP/GbuV0YdyX+QdrpKsZKHOT99LzT
VBVSNntc3+Xx9//smB+7i9RdoOLY1ZytzbVdaCg0aSHXU0ZHJ1stF04R/pqW
EEfnet1+TGkXBE48p51mg61RK+6fgVK/WkecpR3LER/kMvYDcd08wrKNtFMr
O8ZN36fC3LNswpK0LkzTCmx4dEA1+PhfDUcDs9RJcUyFX88BVVp+1rDjVO+D
i4lrcn2dfW8692/qV39tz86qcFR17l3yR0O/F1nypyYuU2Sd0LZMWLVtOnFb
8ucTs735zfgi9YbrKgRGPv2qIU3BTn/PEEcMk/wq79dzh//Ps8QBdikYvNeM
PBxxRSUBNPSfer2Tcf+s1IHvaTik80nV8PePNejpRsZ5vc7F/X1kwsHhhRi3
H0865xpyWMN6yStloB8sXGr6b+6/YzMqL5udifv63ck3s7m+DzdWynzw1TBu
aDlSN8YDCSOMq1My9C+yfpOGUc9KTNrup6EovUDbpRrGS5zl3wf8PPv29HLG
I9nA6TRcEx6whuOXI/5UcFINmSUhyvjyW+pFSej3JJHP/SblojbELWRt6uRR
Gi4n+ES2TVQRLWFvsIYaUjf6xP0q+X3Gu+oZezmH8nt1XtZeg++BiZF7vqj/
Vw+Q8HcgOX8n/LmeZuCwlNz3xbizK2vIkG1+91GpNPQVYFddA4PP6lirBklz
5CYeWOofFLM3s+bJy2qoNbj2m6vEEbL8XxG/aN2iV2bIraHJs54Nq9k0SDlj
Z7CGXGlq1jnL5xRb8OOaDRpa1Cj5q3AaxhNJ5zCuB8r88DveHSdQrEK/V/HV
mg7Ed96SQA/1xGWuG4jfJk7Q8xoHVaNuRlyR4+em1H9WE18SVuwjTnGPrGSt
tMDDl/idUp734j4aL/Xc2oyDpEEVab/Kuy9rBt5Pr6fRlt2yqqJm8PmN5Gdd
G71fVprzuqHzlwUzuI+lnl9Ugzfp38jxKpZvVs43KMT3/7r9WDPyLcO/azh4
hBuDfEqv8xDnVZSNtobvI4V+ro8AIQrc53rcNWlYIIVJ+hk9r51RQ4fm65NP
4PUqDNN+nA+f77/yleXf63Uprle9zriVfufh5dhMxKHvdcJPfnN79eP8HEff
3SRGO4ifpZ5NXPytQtnGF2hfS9NOi7qpGvyPdnSSW6/uEecPEx40RkW/bBzx
/eSJXEZx9JtEHf4T93pwOd9n3X77w+1bVANnjeN4SD5wNnmuOEqOT4jUW+n/
Jo6oenIB/VqlzL2SzuN3Jas4u+gY+sFfXiuKdBuuQmjfRv7/F6WATd46d0Dl
7/H0y+9OHyu7sZ+KT1EcOD7/ih7XVGPfdmackPzoQBVSzqveUEVr0uz9fO9Z
ydesbV1SRdZJl0uso398ffXDnGElyMeCZsal4bg1k0RGccZtSdzspP8TwQiv
67zlKP2DJMwYt8ttbB/fjf6rc+dqNRqYyDfWP1/x7TzjjfDLJCrq/ewZ3Ia8
J7zDV+QUHFfkqfc78p5VNy8Xi7uowPGZL07/9NAnLnv0JgW5c1YPLfOc771g
mWvPRAUvKuf5q75R8fV962Wphyno2oyB/QPn5fyJ+197EmedPtXwJudPYPeO
doqxjrh/mzRKP24AeZ+ex+H+DuXqvxWuIETG5a2KiIpb714hz5q2bctqO+00
oouh7TOOC/47/fXL8ItVSiso0evptmD6t4QxmY4uz61AaNwW2qME72RWMCWs
6Y9ctE9c4MSoCtxSsCTPaCF5APLuNAFjCh7y1rB1tf3PPBt5Y7upbwZm+He9
1nw6Evq7gdxmwy3kXdfUosfsxPGTXqSpyt/HBgy3zcinofPn/M6M2RQILPlJ
f5B2+trhtYoriNt17kUM/VC+bFfbdSePFDnF2Jr0pz9yl2jI79H9U33ioEmu
64/qKJhe/3nQlKae/dyCvFYSzc2J87mNZ5En5srXqtd6/r7BBAKszuRdQhhb
EKdc6dIsFe2ctVtEqe00dAvxvrG8poJ9GdDBt62G/SKoIK9t8fSSdod+9FUt
bjjy4OxNiBD5+9GSAC2koKjUx7pqEJlRK85fy+2T12XhdUnb5xnF++n1Zg1S
Zvnbnzg9/YPcU/h7v6kt/LuQh+p5S9oit/An75wkuJ08plnL2Wvi95LXNKn3
tSntYlGNZ9w6TB4t+Urardd+GbycvGWN5h8b0F2DLW5wx6zEsVWqPn2Tug+f
H/hh4Rx/FSd1YcM/e5kArFH/7AWSdxpLfz6XAYO8K+/G0cdDRmtG3m6dgrWC
H6dqkPCcnuv5oQhUaD+TPMIiBbXF/9PWeTF5ZZ1tBOa0t0q+ZwN5QblHjqrR
mqGHWa+gQrVx7v7jiBOKfj/ait+3O3LIrRDaucvZXj0iL0gf8dl/Be0E2Sf8
vm1Cgybw+UFTDsTTTrKp1cmKUzQMvbCi+jXa+StF378zQ8OkCz+yT77Dv5eq
9FzNwMc3POuXcXXftR5Xfj5TsGP6kVof52l4LbDkFXnhp8l1evLv8/Qgo/tK
XpndvuHvdA1TJZ7/IQ85FHNlBa9n+tUlc8mUnvwYrxv7SEXiNZsyh3ZTyeuk
VXHn9INs/WZ63je9auCRBeS9DHtKkIr2m65Wrsrrp49vHB5EHnBL8tnkmTf7
bjnRuSj9b8mj7Y/wfccE3LrwjThflvHGlRrEu4fRFjpXey3jFd1auwIqUkiB
dYNm5DXze3DZZvISwvSsBTz13hjNWBdZ6ddTLhqQgThGYGC+0ox/Ur8nbzPy
38Tl2wngyHOmcFkU4/XgSdvrxh/UULLrhbFXSvH9GY7qEzfV6bHnSE2+77dz
RK60s8VdrfQgr4pMkkaL1SDuMlN28hbnwr0fT2u4OGLftt70z7sWVO1Wj/aL
5IUyFalGHHus0vEZ5IU3h/WoOCOc/trDw0RmVpG2rqvh/Y+eGG+pVkdFkaSS
cdAg2buHTeiPSV/uErddbHFwv1dHFeul7kI7lHDzYC8PbzqjoV5zekDGF31d
074Q9Cx5J+L2g+JPj2u4YyWgZLx+7nXEFsLvzViBEXEXv4cweuvO/7WXkM4H
r+J4Sr2D4ynpYi/aR6TOQFyYv3xYs4vEI/J5lTn+tnJeXV+vVQ1/sUWDbIeS
GzjekblLpaB9u+yUEaad/+xBoodh3BXYeIx/P1bqk8TZel16K/GG8MyrKmKr
Fh1XZouH9xEXBHt4mR/p1i3ivAOl49eHc30dGFN1cskUxEHiaLk/Jd0286sn
n0je5xVbsF3CO8Zbjk6N8RpmS8LzJXlb0Mbl67gf1S309PdUuL7fD+3N30sZ
ezXtNuZHDQLJQ/XyPu17Ur8aqUHKUgsSyMveVBp/aijxWNo5hze+UtGj6nq1
G/1Ro1wVPs58oBr8nTi247VNadpfI3548/5Gq0Ea3mZmIGccTsjXLGIo7eSi
IyPeE1pbm7//Lx+tr+MhnrwYx7fHsqajZtDusbBioxyLVTyW/Auf37RYxmkp
yLvEfWcbSDx5a0bO/cQjQ/WEqYY+b0OadOf1AiJo6KEZuG4FeUm58F39O2tI
cU+EjuRpCa39znb6z1+q2CKANkpD8zLztrbjfHVNHzWzOf1zzRciHOX8SN6T
drqG914WP62imD8RHv39f/qLqbmaJ93F++t6B+KKTZUe9vej/erslbDzHI/N
7/MEfuDzTtBdJJAH6X6niwZdPnSf++F8ybDLvP9XwXfECTsaftlzu4Nm6DjJ
K8Le9snm3Uoz9FHE8Y1FeNpEM3SlxJnxWzrVakP8rMt0iNMd9cggavC/f4wY
9jyM8yB4jHhcl41F8vciQC1HntQj3akIvoek+b+Xpf+sdaDwFsaVrTU7zuvD
+wyTvCjXhevt1s9LS2oQWU19rqs95s6HnxM/6/qZSYxjvQiwaK/TBXIaPklg
pr1c4in9rpR/GxYjHq5OR0370qXSR06U0DBBdEFcx/4TQ18mJw/JtrtBrRGM
00mGF+//i++t19f4ncMk3cv4X5nbcFkzDVL9XxHOeL82tHGTlozz4kBpt5J1
zLhfdY4oPTUoImzgutNOMXKTB3X52LhnDJ9fRfRh5AelhWCL331DoFlGM/LY
9LtSni1VgfFV6lU7GOfaEply/KTs2IV2H0l08X4rXHt+jdmu4U+aPOFxNT3x
ajX9frueqbZyPiTNNIx2VW5PG9/ni+iWV5GXpWVE43dllbo245giOIa8Lm7m
xY/BczQUEADE7zokPJVxyXozx5FHxEN6HOH8LBf+wfXwfETrqATuo9a6/pP3
3znX+wP3wSvxy1zPy+h2C/fUsCZF3kRv4ottzuzaMa6rgqIX4P5II/k22hlE
GEi8IeX7lVynI2R8yUMvV4/M2IDrsq3knWkLLUnWS4PIE6P/46m8f9oby7uG
9Ce/Ef/K9ZRV1gntz3Ev16/n/fuvzFXONoDvt+DzwQ+tuX6FAHD/7qn6aMPY
Dh4cy3nqtbpkDdkXwd8ceYqLP2l9NO8Xvuemff3WlRvs0RXO1iDDdaGfhjmB
jEwcP5PoBnjf56Jjot8X+WmW5h4dHuOYrtPlutHr+7R1nQjHt63UG2jfEF0k
x2/5k2vFU8ZpOj21Eu/5fixzsc01ftfIVkl8iQfbc1oL0k6fNOeYAK5Tf9no
/H3phFsbEjne5y4//lbkHsf/RM2w7R01fBh1uu6RBI5HEeeN0fzOHLqD1tCz
4oyvKfmdizKtPHDkOedJ1hHHsXDE3irpHnF9hzPQcXwP73pxcTDvv7tpu01X
Oa9NvCv/dF7ieL9s/Kwnvz9y2OaE62e5L6UwyPHeu/LalN2Mu7p+muO7Tngo
42jgCvOEVSOIl+8u3HGH4zOlSsULRzmeJUW3vknDXxGUDNOwOU37SWW4XteI
UJ12jp4RLWcvYZwMzhU3j3gyeY/P3w8s5Pq3tF+7n/teVIzfJ2sGj+K+1+ti
nGcdn8705Pn53nq9l/hJUPRurqcUo4WIe/LaHJdkg7Qa0xjvRhe7fqIT13WX
SsVy912qQdx2GK+PuEcHx31jkwQjx23MQ1dk6Ariv5upj7/id48aeGlbw5Ue
P8F13Hpd87q1+R0Vt8UMOsX1I2nrNWvoLzpJJlUzeCfx1+6uijst53Xg7ie7
66zz5A/IK3R9xXrO26/apbs04vvPjEnXjX4Coyfb60Z68lcct6bv/vTdzPc7
PX1Fxyz0GzWOVrtziPssxYno/H02Mn6L7pnrotbYoeXWMP6PPzO68Eyu07xS
UKAfCZa6DXlP6N42H88Tj2TqXGBdusacf8mTEY/MrTh9Qv4GGhZKoXo3+VT7
iddr1SNuFuEY7T9fuWNr8XdSh9xLPEeYup/2ANHj7qM91btlWtq6zuYA43/d
tbeShTAOSWMF8ZfQvw35Ob+EjVeIz5SIG3lvkucNrEIGRHyl6wWcGqStYRDX
nc5702v47dtkw5rLnv1BPPKrhABL4jNxCF6aofun3aJu7axLfqjomPPr7HtX
NayUBCN5sZ/XY3MhruvZMqF3VCzu/b1jzHX6lw2JTToxXj4S4e0D+r/hhVpe
Pq6iau+o5I+eEu9e6HT0QIyKyz17Fyj2kvj+05/SYUtUlBaBx2vP+pxEfNG2
n+PuG67rUo+PDhvK+Cx9AW+Jd0hPqwxSjTjCffdb/HZXFRUZdldyX/Y/asqQ
jfgzu+hmafu0HVw4VTsVTSX/+4r4SspizVS4BffxeRePLur9vTHxl+QzaP8e
PS5l9ga8HjpgRN7Xnvmvq+Jts4bta/N9Q9osKfCnumroMmj/kX1Xy4OH+H6S
vj9XU0X9nL6D177juHO6NtJe0u0hKn/VjH6Nih4++Jd+XPSh5Afr4l4PC/dy
YVRmR80i5IOFBU8kcRl9M08UnH5aesX9Pxp+fDMH+tDOf/Xr5g2f/9l/P0Ts
KPCB+OJHrosjyKdOCr9//8+eIY0vHE8930w7baauqevx/YvWnfip6EMFwySN
yvGUNFjM3X/2keKu0AFXyd+FCNHOl/dwqRLXFOxcGrng0AvuW6kD0Nbrgxwv
S9jc+V3iFJwVvTnHY8DBNnuiaEeXXDniy7t/f79WAPOH/7WnSN3nooLCIiz+
yPWyeWvVurTDFtx9V5PfO0X6TmjP4Ha9/4t8UoRTzz11ZtpJBXe8VfCgbZNi
GZO6IDLpzdcVQ8eewoXTMc0fRR9VDBxA+2+0b5aJ5NPHRHjN3+v8cb6C1H92
TbP/5L68EJay0lyPvuaH5qk/KoZO4wvjqOhEZyk44tHZZ07SocOt8QpEnvOW
499aCqJjFGwUPRS/v/Ky2bVy0W4jdEd094XRfg3vr/MLxg2rjB/5+uNf1bOV
5/7ZGJ7lV+1DipE3uq956pkqJH2/4e4/O73oF2/+s99JHvKWZuQJLykGXrtN
fq8nkjl/I+lweb3SBW6AUwrae3UZlvyaB3fsVwz9Kvf3kzpeE9seVlBUCBP9
hcjF2pxTYM0R+2M+/YneT3Ce4y35iIfE1xJXbymGTobvr7dL3FOMPot4Dc+m
lg7qG6+gXN/t3Y5z/fErbI2e/LP1Ov7zf/aQqGnOD1yv90V+z/EJbNncfvId
16/oD/k997uJAJrPE92Q1O0Gx9ddQTtFYM4O+c5rKCL9Klzfej2bOIGrdeY8
vk/t2ySaR+mHZZ3fUID6jbce2u/pa+D7J0ofG/ljsDR2XFBQqmeZQWcZP/oK
bjygYOL3sHP9Gd/O+Mc/1bh+0vXmCmI8SpB8w0YFmwljFm309A3Qpvfr9Zvx
4+3OtOd77VXgJf+QLw6Uuhpt39vd85xgPNFlSzEKMovgjv7/58aF2dKsVbB+
ZppDcYcYt949nPZ4kSe/Q/9v6A0V/BHgRlvSMJ9nK6iVa9d2C58n7THphyoQ
OW4T8lUvIQ5DFFyju2nO+HNS8hS0dV7I5+n6y84KzgixEP6dZEzNlb15v5Mt
U+Y4pkG2wbgOiqE/YLwp9zd5YM5GnJ/fdEAczxNSt66lYN+Im3PLEsfo+od6
ClotYAA8pRn6hVYKLuZXBhwg7tH1X7RPCnG59M/W8RPjiSOAjCOM8yf1E67P
TYumxxcN+7eepbwRRbvgoXnJkj+mPxGaWl5BzsIDlvjT/0v4z1FAgbQVrH3h
wYHFPDoCxgOiiD1HSypQn2a9Vor+MUTypCEK6tYvdfaT+E+p//L645Nz9s2i
vVf6EIr8u67j80IKbLIfaM97Zl+dwPvv+9hwUapvxC+Sd6et4wf6M2l/elxZ
Qc0k+RaVob94KvLgZgo6iv5H/FsL/y6tIhRcEeEb/Y2kkzu0Uwx+zXixTeeV
CsaK/jqZ6/9soa9vU/6zTfID2h/mDDvzvRL9l+g9UrswdfDPEl3zKPj4ToTH
LuhtTU6Ol9RtUrkgvZ1eigJpR4hJ9r/2MdHFaYqhN2C8ejA6aHM/uwKusge5
aQ9M42+LCFJg1wvJxFPynb70/6LfoL1c+sVov05Msa8F/euQ/fU3VuPvvywl
ImZ8DJTEs0kx8v4fPbjSoeDZtuAMbxlPhL6/4PNaiEPkfI6Riffjes5Chs35
1mk/79dWhCr0r82/j51jMtO/2scnHUT/MUkS0Bm5XwbFjkpGf0XUUjEkuYJf
t6L9ptLWZem0yUYyN6B/FZnh6mQeHR3961shpGkUDLkV0q8B7Sv5BpavRltf
B/SXuzD80cnUXM9S7+V67rWFgemPE3UFx9E/6XkW2v0brCl8nuvfNS6i4tZf
Tgic+sz9/Uj8fj4FO6R/k/it26vOi17Snt7kT7lE4r8H+S4rKfIqmCv9QMSL
JXal+XYmF8fv+4HqQ3Z68sU5FKyURhf6rx4ChDjf8XMWbTlO+27LF+UCC/3z
NwOunRnZrISCjALkiFflde6WVZC+24YJd4i3E0uP+fGR86G8q5fTl3j5cRJG
NI7fhSIMCMT/z6SQ+taJT6SXq8jrpC3telrF6NMjvv+Su8feXCk9/ob3uxpw
43u1r05s53ReIF4P3bq825r7TryeMHLnAuL17KIzPO0Evf2VI7x+JopMZ5PT
2L/0r6uW3KlqWe7EF+lLJF8o0nvcy41LnZ56u4bj/ZeHz+nsRLc+1zvvI+/x
7Zt1saOk0/CP9Nc5ZUJTOZFEAvZizaP7dhg6svmMf7IuBzjg5HK9SD5DlHyk
UJQDrwJfj+7E95Oy4u6aDqQTgsv3CZbE7h874kUwsox8Vvo1Eu1G3YC8Vo+z
P+zIEDqn/c/ZnrzOX7vxXNoiB//s7YDI5zBHw6m3STOnyOLAO9Hv8O/HfrM1
mAwHzu0h0OH3ldOFyg5D77LMozNq7DD0hbPIrwkDHwY6DJ0n50fKZEtMDqz/
cKV6JPldXdFnZXIYcZD8b6rUbx0O3Hr/ObQh+aGe9+Xf+xqCGgxOGJ44i++f
X/oGRnJ+5ncf1Ye2S4TvEz319Yd2hAjfJ49MbDPfevWqHQ0IW0pHk69K4+Ym
O/qIXpDPqyW6p2l2zF0Tb7k5XjN4RE87hgSpwbfHkndNTm6JamTHgW2974zi
8we2jl/3CnYUejg7sd8Ij+4lqx12EWYN8dTHPtiwo9vxRgP7e/j8Zxs2TPk4
vQOvh0kDNO3id+7OWTRUw819pePXf7VhheRf+D3TxN867FgiggM+b2/HND+W
8P467+f7hIouKqUdIiPKNp38SgJlejuOSx/uNA3SZbTjiA3XpF7G3+tp7S42
o57H5+t67lI2vLtwu1Mgv1foZcxHK2wi7JF8qBQ07lgh7qAk+fyo9DU2z3hq
hbQpdOqnwUw48fuyFUssRHa9Gd/uJ26JP2XFaNE39GR8iLh+POkhK3JLXZ/X
30q/9V4rZhdvGuBLHn9P34dWVNX7hzRj3BZbUVzyjl01Q9891mrUEclzw0gj
C/ewooKe8Ncw3W4d1rep1ehzIA8fUY0DGm5FZ9EjkSc7RFBTygqRnWzvTP8t
Qt2yVmSS+kZbDWk9fW8iX23cknhELxdaUdj9duvnFp58p81q+GPa70nHG5mt
uCMCjlYaLkcMCv782wK9jaaZhmKLLg7t/9iC8vu8s5duyP0jPPKMBas3DZz1
vJanHnbQgg1/e8zJW0PDt5UCCC0oIAGrnGd/zLYY+L+ChmNzm51PMtyC+Xrj
H+8vdZchFkwSvlJaw2cR9vax4Gxk5KduIf/puiyGH8hHviF60QiL4V/Iwzvq
ena+b/5kMz/kJT6YN23DsfwWQ6eUnevX9/WhC+kt+HE/tHeUWzP6UF6YUUTO
JVA5H23Sx9cfZYZD5umdilM70xWrmt2MFiLA26Pidp8K7w9dC0J05J6V18iL
X/j2m9bzTRDSST5pnIo6l95knvQhCMVErz5MhXE+g9moQ4xUMaqStdKGzGaE
Sh1qjApxVyUKmzGgyPpS9SeQp49z9zdXMCOhAwk/efhB0TvXM2PtkULpnFNV
SDuKTyez0X8arUJg7vnxZmQUQcxsFV1FL7bUbHzfDBUiP/y01YwoEUpNpy26
uhgzdki/NZ+n56dPmjGtPBfcZBWyzetcNhv1Cd6/g+jR48yoKQc68O9ltorf
Nht9cnze6D57xr57YsZobtc1fJ7Rz2xGga0/dhehfevVPee7L2aDB85SsZ1u
5Vmi2dC/ziFvGv8sSa6kFvhIAwDthen4P1JZcLPawVvP+PuCcn5CMovBh3i/
5qKj5t+vbvKwaZ5pKuJ0gGVGKe8by7tyvHSdwTcz3oiehd8Xq/dhWoy+T87P
18trcy5OYTH6QceruEs4EOFnwWspwPP3fx8RB2SwoEeeE/Va8/tHbx2lpMps
gcg3s/D7g9J0Kj5bsyD5zA/vCnK8oidh/yanxdNfzPlP2B+bJ5MFH8U9jVUh
sEfj/aoVHVem+SgV4YStD3y4X3KVs70azvuJf+HvowUXDfXoAXk//XwMXpf2
+5jCFoyV/oIR/B7BNbAY+J7rZ9NOKRxbUFzq4vx7XT9c0mL03fZXIbL7jiUs
yKM6P0f15vxeJrCtZYHIIRK6c31JPay1BSKnS+zpyRt1tWB/+S/XD/P3IofK
Rtvwd6qn79ECaXtpRzuP5NN6WQwdTjcVkhaI6mEBvNZWXxClwmL61iCRf//r
8YEOrWurKCpCzaEWTJCNX0tFzIjQJifHWvAgqkfL/rx+OF3s2PJTacvxIbTn
CaGfazHq7/y9rpOkP9H1hdVVo29vugWVxAFVUrFG8j9L+P52ETiq6CmAgP5I
ZJs+Zfi+id5XJp6wYIHeuKIa+b0jFpQS/plLRUqpb72xQNxL13xcD3SHc99z
PtNZErNmUw1/bLciKPxDxWf5OR5Sr8xihcgvc2f19Glkt6JQu4TFDzQVHwfM
//O6khXilvwyq0b/WV2rodNQVXSSRHKkFSX0eVcRKsKJNlZc+hi8u6SV1yfQ
c3a3GucjWD37s5sVraVuGeDpS+hohZxO0TyTiuDh1uyNW1mN/rV0nj6Txla8
C6hc81dqFZK2XsT4IV9VNb2KVCK8rGqF0IRyGVSDNxW1Qrr97vH6MfnAAla8
kPwz7/fD06f+X9/SL32BWzHocceLudKomLh0Qbv6qhUbpC72V4GUwXszPum8
4bdi9B8GWxHvTjls5ifypJoPU9fmeI3WC0AKmnS/m93OeFRwhu+bHNsVHBS9
n78VR3uQeE9XMDNT4NCKjE9f5fiZ0QoGjLdpnR1WtBCe0U+BfMZf6Xv+dMqZ
LkpBbxEC8Hqc8IT2CnpI3tnHCilTOclz70g9hvc/vYoOhbzvgxxHk82Ki5zG
F6HkmUekU9pq4FHieJFF1oiwGn0UuRWM1xsxiCekMTCDAmmna8D5aSqNQFYF
NSTAjrCilvSBJ1Ug7YyPR1mROvWzhA8/nej6nkBnmBWtpG1it9PIL0/i+DTc
96bsNqeBV4kvVnQVYY4Tt1IfJ0S24eTnkZkdUIw8lM2G8hfbXHuew4m58o/5
n52VYc9MW9JvM+s6Ie3X8ZoND+QcjAJOo28gjw3tZF+Vd0LSQa1K2jDQfKJ7
1ZxOSHty3nK83+h6+6eanVitF9pt6Dk5ya1Xvx2GLru2DUd1okLcmzO360tn
G54cHTYl1wMHcsmBD2NsxvkrJx1GX888G7bI+Q3reV2O31htQzYpnM9xQGRI
p4bZ4KUvsP+1L3mna3hvvA0xx5pNLzzeAWlLerHBhtjuDFhTHUY/O/HgNMm3
DnKgy75LTVZf5vuslYYD/r5QpiLB92xGnjLCgUayzt/YkCB5sTAHtkaHNf3x
2oZWIl/P6jBwxDsb6j5eOf+4wvtLXv6jDZOlX9vpgMs/NmD4Lxu8RRhtdhh1
Nx87nhB+Rvs48LrQldr9rHa4pd3otd2omxS3Yxa/5s4rO8YO7vT7c2k7JsuC
eWBHpT/NH+ypZMddaay9Zscj0ePWtKPJ+PVnDp61w9b7fv7gcDt+JcTNvHjF
jjq4/dersd2o4922Y+PhKdc2RtjxR6bjkR1OwYe0pcwUxue/aCwZGzt2pz3f
y5LGgZ7cpu9K8boIFX6RZ1y4P7Ks2452UmDydxhxwmQ36sVFHOgtQi3i7zmS
4CIP6mIacfhMEruRryVv0/u9n9pwSeTb4xy4cjbbrMa3bcZ5Ghsc6NuuwcS9
120Quvz1mAPjT1ubPztrM3Txtxxoqp9fYsM8ORfqhQMpRTe9nutD1vEPB8Sd
zZ9jw94lB1uHfeMOECI42YZSMrDpuX8Sd3yRvv54wd1uJwo0sXt162ODwNMj
IU7sEz1bLz7v4vzxdRs48dJr7L7+tKd8WzczTTMn/ob0fXOltw03GzVzb2/t
RDn9nAp+jwhsOzoR09KVcfMEG97O8Ln+t6ET4lbGrbBB0qWNmnA/6cJAm+EH
ajnxTjbMaRsaybBXc2LY342tTsZ67sf9dchnQcFlcbyu51WcxnkgD7i+rte6
ljyT09O/bUPl7vS8/N6sY/dmwEvuT8K8JC+5H66Fv8770wZpx17E8RssetQ0
dqDxhZW7z3C+Xkolh3xX1+s4jP4P1Q5vkRns9cwfbX1/73HAPiPf1a957cZ5
M+TlG6ShnnaA4BTur//6wmvrjftcP+efzO/UmfxN0gK9HFjyybKvfC87OgSV
0la1Io+ul9N3cHs79kpiItxh5OP72PH+4bTHYVUcBh4bxfVTjMCgpAPRcgDX
Eju+czoOFXJA5OlfttgR2q3erT70eOFtQl91uWXHFl3ozPV9WDs0+DvXr65P
5T6TvG1aBxacLkrGaUfDQgsXpuM+PFUzbPv6KXbIsRrLrQ5Iuu7ZODtSlo0Z
msbm6avmextt7g6Mlb6UlnZDp5/OYfQ3kxfPDi/3yMH755jVuFH6Kna8ksI4
7Wmik+M+2l/i5NDX3DfvQ/RIZvhtlwM7GXbe0nZn3PwqMJfDqIf42w0dThPO
m+SBvO0otjRjkjFdHZ75tiHgw8I5X4Y7jPOO6JckfPemnyxULDRi4WObobtb
7jDOPXlmQzOhV5zXlyLcpJ/T/ddFB2KlvnKFfk10Jjfo16QQxnX67E3q1Sne
8f3eygFl3Deir0vGfSNubxv9qBwA5+PEGdHfH7BhvZynpjjRRoTrO2zIXNZ1
c3cpp6GHWW7D8QpvX7yMcKKa6NGn2zznrzmxW/QujAO6/5jkxHYZj3H0u0pC
u3rznYjzGVL9+ljy+FL2aPMap6GjHmlDj8W2FGNjnEb/9yAb8u8asKfGQSfk
eIyLfW2GfvmMEyYp4HHf7t6c7PnEBKeRJ6ZdWvpu3jhRWxK4U2zgal9aIaUC
kf+vmGoz4l3af7bIFPdnUjBRePJQ+iFZ7uZ/tsDocPs/W9dLFvln69shmLjn
UZLWdRhXJZ2dvoGCaqu8K2b2t2FQ6cIRe4lDlkQSgTKOV5X+g14KvKRs42Mz
dNmjPfltLxvk+LChUxVI2Drw0YpDg8emD1ikYB7DedwLK8oMOrsgz3oFsqxe
P7NCP8Zns4LQH1V21HhuRXuBSTsU6HLBt1ZPXUOBo1jb8u3fWTHpU9GlGY8o
sEm+hPZi0SnEKmh+cL/Xz1NWo/5KXLZFPzfEirEV+2Qs+VgxzmNYaoWl3uhu
RRMUZJFEy3wrslhWPMj+WjH6tqdakUwG8K2CkeL3RltRs87Z64kfFTTSdcnE
jYOD1OCX/B4Rhje0orII0L8pqDw3fYHTla1AtaOjghMVLJCDI6pYcW42Ax1x
ZKTgPdp6HcdLRaT0LVf+Z1eWvhni3GFJ3z25Spw6SxpTiHMrlHn//Stxs8j4
3hCHimyqEHG4LhzJZcVKyTe7VKwSoQxx7V3S2YpuFRtEkJTJCus+EiPygoEd
m69PntYKOe7hRUEVp6S+k+R/bYF3RyqruKILJayQ8nr1GqqBj7ysRp48nLyp
SvaErx8tnr5k9f/OY5P09UHyqGWiL7hmwfHXre+070HeIYSH1/V6R18V62Sf
PbBgu/RP91OhSZ6MPKblnpXXpvB6uACAtxaMETwnfx9IIvvNghqCS8kDGS3W
vf7J36f2mhwyQEVvWcjEyWQhHXeRt0o6aTZxuRw31X6qimr6QXhWox9t3j9b
2tnjydNt0s/E79fPWVvE+amQflWL7+RtIqRbqBp5yk8Wo/9/roqXix9EVuD7
6nGBtl63SbCgk3qqTJrlKvqLLvGuBculL26lauj74z3n5/H6CilwxlmM8y9p
C+2dt8sCQS3dYlTIMZZpyQPHScM57VnSuDHfYvSl0NakT2Yiea3s0x0qPkt+
e5TFyLtuV/FdAB557aEOrY/m5fX+En87WIx5PKwiobYI1P/Zev9orX+2nmeq
YsEB7fv90J2qgbeCLbgliSnauwXgFCfPrPhsaund5K163cCCiyJY3afimYxP
bgvyiV6dzz96jwQhqQXPBBhyfHV/42PBbV2nrcK7XoeveGVGcjnQcZKKriIc
u2yGyB0+jlYxuJ8cUGPGBqlvd+Hz6S4D1phxf8yIkdlo633JA2gvm77yekc+
v36Poc3DzNgvDZWtPX1kLjMk6telDfGz6c0Q2X6LNqqhy/gQhJpSd+P6+hNO
5PQ+CBldHOg+XK+SD6et9zfT3luk7sRP34I8/YvcH3pcCoIck1WW63F488mO
QzeC0LfC+0MzuR/WVV9w992lIAhs6ddKxc6MT5aM3BOELY2TxyZy/+j6hA1B
qDsuZteMxqqho18YZPRtNFKh6PrdIDT/26vz7SYcn4d0PV2DcMMS+qYC72fg
lSCIrHooxyMsd+NXE8oHodCOqI15+T1PpE4E/r3gee43kQenKRsEaU/2H/jf
fAZh4uLYAz8GqYiQcxFyBMF6r8zrasNUnOtlab/WFmTUcUd5+jgzBhl1rrGe
8658gqDL6yerKCFC5AxBWKsf4Mn9a/pY5mLKILSP2pziwGx+rwCxN4HY8cjq
vZj766jQ1quBEDlqvWUqhvp8eppidyD4Fi/PrPbo0ecGGudNbvjvPLZA4zwB
7oe4coX2jmgQiFE355Z9zvVm6F0DYRVce4Trh7DXXSIQ4s412mNFT+b+Zxvn
qQUa+ZID3O/5n23KnDzw/85Ty5Yh7Y5VPwKQ5Hb4tguX6C9F/3U/AClDvXMN
fcj9QXr++VwA7g3Y/WT3JxVSLqt3IsDQ5/xWjXNSjgZAZEappW/vauv8W/fw
7+WAm/QaRLY0ZUOAUf/213BGGk8W8/ft47uNd2gIknlYGoDmutBPQ4TA4nkB
GDl/Yo5jxTQ8ut+2SbEpAegy+Fj5EeU9Osn+AcgifVWhmnFuVUQAWpZSLs2t
phnnbQUH4P3tlenHVNcg7S9jLQEQ1t6V9gIR7n33N/qL+ftlkih64g/Zjr3L
e/oYjvpjeRE5oUNDd1mPW/w9fcoaNgivW+Rv9GnR1nnrJH/UEtxSRjPmo78/
8g2PrbaslIayEs+i/CFp7TLBGnoLX2/qDynbjy+hwUtvjPNHVkkf0P5ehwS3
vD98pE5WlN8jG9zmb/QD59TQWeoPyfxR4cv1w+HZNSwR/ep1P0NXmU1DgP30
09LH/fBU+mudGgoU5D/b/PBzVvGmAS4NdUXXtsQPnUdb3/9Q+bz59Awj/Iz8
h+rp+2nvhyd+vBH/XpexhPlB2macFg2Hxe8W9kM6/aAYDfkkL+zyM+odJn6v
mtRnqbcf5JiDqEwa5BjaeSn9oG8rHw2hZXbNLkQ7dR9p6OT3iIwxqR8qiSAm
Nf9eDtz66Yulct5ECg0vb21IbPLGF9IV751UQwcBiE98MfdGpjFR31XclfOg
4nyRYe/Icl0+qOgucf2QL6RN+OcbFYuuHEksvdrX6Ct4Tf+8q39Y/8W+mCH6
OV7Pw2E6NNrXOL/lnWqck0L7KunQU97vIOmxa5QvWnRffqoR17+cDtdtmC+O
yDKg3Vd0PYN8cfRwj3cPP3I/SQK3vy8mVbh66/R7FftFl9XHFzFV63ZJz+cb
5+/6Yvc0bsgEFR1Eb9TaF1KuL/ZYNeqRTX2NePlIRamfU7UC1XxRSw4moL2O
r70Qvugh53HeVzFH6rU5ffHVVaFVg6cqLt3uFDiPtt7/9oL+TfogcvviDT8z
yysV4939zScK+Bp1G75fnl3bLaaivqgm8eOLilySt6d983B4moBvqtFPzt/r
vOarCq+sftqDfL7G+Sa038p9+TxdJ/2S+GgVI0UKXyQVQsn3Kybn0z0wQeRk
Z6+oBo45YDL6T08xXgnQ3GdCL73xTMVoOUeirsk4r5D+K16eX9sEOd1i9F6O
l+RDrmXCIIn7/589RPj2Hn7fju9+XuVMmDuajpDXIyVhWtQEKVtu4/3C45pb
RncxGbpP2q2kEb2tyTjP75CK6zpPMBl54a0qasq5GN1NiH7y0Xll87/fyzGp
2WmnFt1MYxNa63lDjp+cg1jfZPAA4glpVw0NNeGTFMh2EZ89ZUCtYDL6y3hd
2q+eVjchrxT4aQ+2kxBUMWGUnKNAf79lRuuxLUP493JAwkkV+SSuVzQZ9dtY
xoecrc2PiplQTXSlJzhe6wkkCpiM84jp38dKPreQCUITVH7vGon3+Uw4LH3o
x1VMlG1Me6WZQJG/1/lhVhPSCvDj+AVLY0FuExZIfyy/L58QNbcJDaV/8aBq
nB+imHD1Xq8iT/h+w/s2PdQ80IQM71eMkvmWYwvj/ExIUetbksr3VGzXE0gm
o2+F9rKT7zol+pog8KJxPN9XhGi0Zdkc5n7Q61f8e10XxfUaKrpB3l9kZnPf
eM4zTGGCJueg/fb0xWbifIiukPHoaNmN7eNp6/UF+qNYyT9kNEHSly/T0F/q
eh4T5j9MOXAw/Vmc8N7UfJ/AcsUvMz5JO3+LNCaEZSt/WHVrkPayHek4PtIH
znh1LpskIEywSV9DPg1d5zIA8nl6/z/9t6SJOvB7pghOZjz4Oi22nd3fZNSJ
wzT4SSLaZYKPnOPdQEMree8sXA+HrraKbfzPRo1kKas003BF9D3ZTMa5spGe
vqGcJrRZ3mPw+DqMd6JHzW4y4i7j2WvR7/O6KX/maQmFNdSWumh+zl+tEe2D
8mhG33VhE8QsVYDxTAhINRPkGJweWRmfREBY839t/Xwijk/s3R0jB9b07AfG
C72s3MiEtY/zJ5vJeHJOzj3oZDL0u27P+Ru0/zuv1kfOq+rD69LnWJDPF333
IJNxvgfHS9d70Jbs/hvG4wV7PzZcNMYEcVvfpE4teoYpJkRKoKe9YHp80YOz
TEY/GON9Cb8UieUXmYz+bo5vpPDpNVyvUq9sp8Ei+q0tJsyS/rIOGiS9m/Oo
CeflPKEozXMOoAkNzhQ4vpXztUISbMdMkDLi05qaoXeO5+/Xl1ifIlxDciEK
b02ISrlbaRyhGfmcHyYME9zcVsOsNIfiLv40QY73T8L7OzLR0/wxQeDtxSEa
4qePGdXoE/2lCCSGa0gtebFfJgzq3O5M2BiOt37+gy/U6AcVz0xmfJf6jNvX
6Euao2Gifo7S/9qFJQE9VUMh0QcW9MUvwZfTPO9T0hdyjHocf6/rHUv54nKK
L7l7zNPweXKdnm7GgwARDC7XIMcAHCvui8OvGdlXaOgvB1eU8IW34Pl1xGMy
kaUZb6SfgXY7qY9V9IVbDupZrxm4nPFM55VrNFTUG/190U7O7VqpoYkIPqr7
on7a1/lFRxRpGR09ltcLzz/ZIt/if/fT+1Lmc7z2zl9doryvoSefRfymB0Zf
FKtQqfuPaA3VokptSl/PF3UkjzOF4yH9ii18MTYtlvfkeAzW80C+xvkRM7j+
RK/TxRdyDNZNjkdyOT+pM+8vichVGn7J8ZM9fA39xGriGemTauuLA3Iwxk4N
3sm4ADr6IiEwc0Le/Rqm0e2U4d8Hr2645N4R7j/p1+XffzomJyVoxvlgxAv6
uaEneV2vU/kaebbzGtbIPprK8dGFnhoGykGe833RXfo/LnI+ZHzW+kKO16x7
QzP85XZfvJbzdF5xf8h5c1t8UUXShd80Q5+7xxfF32QvnjWlC13lHLrDvthT
q9XGpX4ubN9xsHK7s774LXpRzYV5Ioy47YuikxtMqJHdBTk+eQfx18VhT1Ob
87nwSMox730R+s7abEARF1LKeVG/fFFm5ryQSyVcBr5M5ofMqJ67cUmXp97h
hxdyIECwC+0ERwT4QWTFC0q5jHM2NL//O3++kQisrX6QY5/GFHCh8o4aJ1tm
8cPaeMvNHPldCJA6biE/498HwOuvRfdTwg8JP9d+uJLbhT+tvz1pUcbPODcm
p8uod5Tzwyq+9hZ+3wrpkyrvh6hyJ4oNcbkMPF/dD3vF7WR1Gf8+hLp+kPKS
rZAL7+V8sQZ+iNAbsF3wGlNzZZsafN+0EZ/9y7uwKkPTmvdr+2Fd1dj806q7
IKpsJ+21N+fcyFSf35c9xb0I2vr5fc15Pc+aLnPr+KFHqq0FRw3m+05oe+lS
Mz8M1nVgLjwQHcAUP5TPMTF38rmef//BDj9UkTi42oVEWY9X/TBCb/hyG+fb
v/XDATlHyN9trD8ff0OnaHMjQfJaDn+IjPRCBzdGih4k5T87jzRGB/yz2823
XvX9/2z9fnn8jfN3c7uN/qoy/p5/n4AbiVIPq+0P/fjfEP5+98krYzr7G/0n
QW7MkIPDJvqjnOinLW64JUCs98fFsVfiH1jdKCL9xofJn+R8zORuIx6v8Tf0
2D5uRBK2zNjjD3H7W/zcWCH/YpDj/pC0XGFfN/YKTo31h07DzG4skLh+k88X
wX9WN0pJf9svfzw5IETGbfQxf/qPv7lxUOpAfgEQmX5EOT5PBK5BAca/L4XX
vaRe6QiAfix1RTeW6XnKAEOXXMONpHJOS+4A6J/RwI2aos8oFIAgwolNkW4j
H1Y0AMn0AgfHhzRieqkA+Oh9i25sSfZ8YrbqAUaeZzDHV/remgdAL+sPdeOw
zGvrAAhNCKEtZZXJ3fm+mY4unzSC46kfdB+AqW8Glv5/XZ3PK0RRFMc3kvIS
xT1v1s6zs5SFzXfhL5CFMmVDZCdGlBV2SmbBYko0YlJDZJKJMAs/kkyTWDCL
MUI2FsbYGd537qwsX69e975er3Pu9/P9nrZ5RT/1gUUDLvM5rLZfjxrLHSwr
8izAUwaj/FBX/PWQi74xCNCvG1VQhqzKGmSd9lxhTbHPc813A9o3i+tquaii
gcO8jE3FwoXTff5rQJz6ZEtxz3znGsHrpN/Abisccg61Ao4JuNpVlIbr6q8b
BLGxnVLav/5inSti/cp+rVD267UIevs08XLk36cfd1AQ4v/i2N/vz3coNyV2
XsmpoizDRwRJ5nod+O+PfFLUfz4PnlKKCHX5pFT4WsU0c/DPBPGJ5sJlWm29
diuYPdwbf7xTEL/OPwkywVh46UHtPj4ETP/cyCoor3V+is3NyCl6CNCXpJKL
pEg4I/G5Dtf66x3P8l8zrs09avTAcSMDGdf6C4xX6XddrLa+dQWbPAxxPkl1
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJx1eXk4Ve33vimhZMyQ6czHcHDOTprtJSpNaBJ56xUpSUVJkwypjBUVigxp
ogFNUtFLSpNCJZpRhkqlMoXyW48+XNevc33PP6772GfvZ+9nrXtYm+m+bp6n
lISERJOkhAT5u1IhpbpmFwUs5ZxPmi0a8NTEU7s+ggK5wCAt5iRNeD2UcTky
mgLZdtMN12I04cGP2i9n91DQHGP4WfGNJlx9e9SwYh8FpRz2ymXmWhDk//H+
yjjE/5Xn+4ZowdLLVF3ifgp+j5gaalWpBbHpXaLGVAp8ject86nTgtBYgZtU
DgV2j26mBnRpwdgbHWX7iyhQ3T9kdq2GNqgtK3liUkVBoGB7844J2iDR/xkN
jr7nM2QP/N94cd4zTfk1o8Rw2aVfJuR8qjPaqKjbowavl3Rwx1rzD6NAf43u
eQ1cT01muJf/UB0wTXpkL5tGgQzP99NafR34vNz3YAHez6S3DnsSzXTA72z0
S69YCmoRrn2sA/+czSy2iKEg40PLcl9/XZhcOC+BuZsC755FTknqejC1prVt
Jj4ff+vtD46Y6UG1U4v5dTy/z9wVYbPn6UHq5ZdmFnh9mQvV1+kgPQjKznMP
LqbgpvGbu5Mu6EHDP1Fn7jdSUPY+ec1agb4YnmIiXL7xJQUTAiI/npM0EMMH
3uAdn6WgaMSR0RkWBnDXYPikzgR8HvNZkUunGcAShvU3j50U7AysuOiy0ADk
cPsPbKBAitz/UgNY1KQVW7iCAvUsYZ7ycgOI+PldqsWVgvqce6PaJRggsBut
MceBgo0PcUH2DIgJTvOrAwpsz61645fEAK0L16o2zKQgXv6/p+VnGFBg2/6s
yAnvv1wg71jCAGrczKUpHrje/Q+C7d4ywCd2xrRH6ynwW/+fzVwJJsQc2TX5
Mz5vTuUDw4RZ4ph7J+Vx8VZcb0dllkmOOJ7ClBpxFK8/kmzUJSZcyJB9IrSg
IKKO7T4T8dOCd+p6TApO7GE/q7/IhOmNcbSWMgWWe52jHc4zoTj6xg4LaQqc
71O3zmfj8Tz7L5taRbDjnKpgRCcTNEo1dui+EkGAj0z9xsksaFfe84VRKoJR
Tt+mNYaywOvixw2XH4rgevKpCe8TWKCvE7p5SbUINHfoHhReZMGVYQ83jqoT
wUhynqcscN30Y0F4iwgCC3veFXazoHJR7AqBFAVjI63dGhzZYvjLp6Lx7HoR
BGWljR2ZJY752uOHbbsgAtumMQGRSWz4iGV68IgI9mI734hlg83cdIf3kSL4
nnKo3T2CDUlT8MAtImigj7+9EcQGNVtkhDUiaCuRq6sMYMNP21TOkvkiUCuM
cb96mQ3G66aPMx0nAm0ZpxGm39nQsjb1Y6yOCDbD84MmAg7opC41esAQgbdJ
R+JrGw4ssqnXn8UXQXjby+pQDw6sak6rdTcVwYzfbrVXwznAos7W77EQQVRD
gpPNBQ6URo2aXQIieC9oWRWuxBXDI7p6hVO0RFBF9sVZHG+9qapk+EkIpkyD
Nh9L7p/6eyaEbkF52HU2F9SUDJPX3xbC68fedq/UuIBdSa3PE4I92zT+ijQX
Kr5Pyp94RghtSIOvOzjgkHPQMyJaCBcvzd9w1YgLpKyTvYXw9ezrgKMuXLiy
cazDRjshrHzxOz5+NxfKk6MWaM0SAu7Ci7o0LqjcPLaHbS8EnW5+vnMxF6Zv
Up4431EIM70eXFVv4oJN+YqqpnlCKDp3fctpNR7kSjfFGC4UwrE7X9d0bxDH
Lt0VQ9q5QuCRfT4tjnmkH7rNwYzcfwAP2iInzbj2zBy2SmKDuPIgxTEixCbf
HNQUVHzlpvIgu33qFNdUc7jnUvNkhDkPrG36ZDSjzYG5tNq8Ro8HPf6TVqRP
MQeLr+OmTp/Cg6rNH3iiLjM4GqSZt8IDj+/Y2nnnjBlk9UgctwzlwQUPtnIO
4n/x54rJPFj69ffmnNNm4Er4uZAHqduUEnVPmYFjr9aG6noevPGL2vs+wwwW
PnUbtVuJDxEeS15NO2AGcUpbLc+sFcflL9ZoJpmYwd1d0kyXWHHs2dsTM6zJ
FHKjxlL7ZvNheO4++yX3TCHx9q3Gd8Z8KDWbWzgm1xQYKde+u4zgw7b5cQoe
yabg6Fwv6fmDB4+0577QiTGFuPw7j8Pf8MD/7kNfaStT2L1Xb0H9dx7kIA2s
/CIAe9np985I82FT1+oL01IEQOjyvTIfUsyiIx8mCuByyb8HxuD13qfvPJy3
TwDxVqgIs/iwSqhYMn2nABrsP7j9WofrJTcYIIDKz9w9lUl8KJZZ+/rhfAH8
R/i7TRynGvkv9Wgy+Z/uGYrhElTZ1RdMYBERvBw+fNpcBp5HTKCKFGYEHx73
lFanRppA+9ijypIr+bD1RV3Ova0mkH+65TrLjg8LvTvAxNcE+qze3QwV8uH+
yDcNLH0TSO99PdHbgg+yqup0aZkx2Ju6fopGfPAK+4hGoDHcrivLacTjo7vs
y7b6GUOQsPXVNjxfT7bc7yvuxjAjI3GuAK+n+6jXe4Sj8eB6DqXm3pKeYAwN
3w0er8P13lC7uHT4EOPB+/kbG8bZmh87ZPRHb/F5/I13KmLHbjSCbeS+8HmG
eJ6YYeRlBPsmnghrx+fdvP3d6vJ/jIBtGBRzFfdDhNtxa4ERfJ4edTcX98uJ
8JWDEaDqS6xT4YMzWfBvQ6DO/8y3lOEDsTNXsg3BYk3f/ZlYL3vK2MFCN0OI
JfWJ9fLbpvvzJ0dDiCB8h/8/v4sxlDvJEOKWjVy3HOsNVxE8gm0IUy6EyL/C
6x01bZr3zxBDWEx0AOv1nbPmlcoiPkg+mHlgXqw4zjO8aM1z4cOk3jEux9aK
Y2x+OnwGHySKdScHYT+p5iNBTcV9aH4aX479ZnFgXd5Vaz64Hm6d9auAB33l
y24UAB8u5Z7S+53Eg/r3QeEZiP0CPx/mYj/v3hdhFNfGg6I+pwse2O/DrhUe
FyHPoHl8MQ75YN1y/Z9hy3gQUHtE5QTyhUvmmIcT7XlA6LzejAcj9e410BY8
2LXpasRXWx4UZNntOj+SB5wv59uOIh/F+DT1ZH3jwnPFlxqeyFcSNNZdOhcq
h6AhPS2O5wquXBo1hQv2l87Eft8gjgXxWJDTuLA6adORDORT9tTlzrdncSGM
6Dfy7R2V1d+MHLlQL4sGGPkYWS94jhP3T/0hXz8ifOLKhV0oCxrI5yZqqKya
XOi3Mcj36T7YEVUc+LxLKi8M9aCAfnPGKYEDBZ+nbEhBvfBzvDn7ZTAHfGxu
jwtGPakNNnl+fhkHXpNCR72RsltT/96KAye0o09eRD0i8qOhwYGZlx3ueKBe
LalbYlZ/nQ0hhKCdxTF2addbbzbs1c6MCVYSx28Cjl61D2PDqS13jCagnpKv
0+LY4Lk/7mIu6u3GBWOsn6awoQjLYx3q8aHMN6NqTiNuCle5iXq969+PTXNQ
5+OTJlcooJ7bZD+9yAhkQ23Xi9GzUO+P3V1skzWVDV78sGPv8biT2YEJTSps
mFk9+8Zz9Autt85q2vxkAbF1N9FPeAQ/n7ylhgVXJ66+sgT9xsnOPTmT0Qf1
Xdj2PRf9iCCtYYtvOAvy/G4tDkS/QmID05AFraPNdOWyxPEz5tgSxWYmZKlV
2NY4iuPiet/GRWos+EL6Gf1Uf70asyDc8cQKJfRbLu1XX0Shb/NpUa1yxXWU
rrEIueLIAoHJnJnWiSw4TYzrvyxAVjhot4MFFk8K7T+OZsH9o1PzfuDvuDmP
RIxhLAiNt4n2QT9YoHU/MqCBOegXOaTeHjABU8icmegnbdbu1mnNYsKby8Rx
MwFdiqHCTiZ0o2xMRj+aijbMcBETRtKlry4jXoF01dzBAP8Qt736OeL4cPeW
+XH3GRDvulgxcpY4JjbziSwT/BY+3zQV/fScklYVEZcJZ3UXL5+IfvseMXpW
zEE/rvQFKx6vv3XjXsnn6NflM75Ix3oz/7cfDGhI07411J4JUt+uBRWj309z
PnW/04IJ/XFCkgETyhI13QyYQC2evlAN88Kshs9yp4YwITa5TjYQ8wR1765L
zTsGpBOew7zBaPNx2n6DAV4CDF6YR3r0oqS272eARrPalv2YV8xfc2RDxzBg
r4OkMFVSHDdu8d30TJ8BLCIMmIf+xv0xcBXmEOJPMU/16/deBiyOxhNg3pLR
NPEWnmNA7Q80uHP14PAqFA58fjJosz6b6kGd/iyDa7UMiHg1fGytmh5sCzOf
ffIFA477TlaoLtGFVWjbFlUhJnW8QRfQnbaqVDL+9AFTFx6WkQ8Dznqu3h5X
oQOG3zkfku4x/vjXYB3wxHg54Q4DctE+XsV8Gfv9gHdaNgOsbq4qjsb8qX8t
/YYnrpfQRBDmU+sriRbTVjPgCAm4mF+j/H7z1KcwQFhkNWEj5luP/oBvAIsD
FUK++fzf2NGyQeHrfm0xPHC+Q8RgYv4euJ6q8/hLdzGf+7vM9rHC9TyzsbgW
hvmdyK0zrjezdNbYSMz31auOn/heyoC1ij7xbpj/D2RqBiY9YMDdI2iETLXA
QjGqUfIpA+SkywvDozVhHBko4POd8s2jbMknDSA0UoXPx/KM1SLXSg0Ysvvs
2vazDJiUvDDtzDmNwf3LnPB+RX6oxuD+Nhe/drk+R2Nw/9+QOcaTkWJ4oH4C
AjB5/lYXw5EBI+cFYf19fG3wdeED9cH6TDqMn6vqQOLvMaxfEo9TT6uDWvK+
1TZY3/33f1QdpD3nZ7fqMyEB6aApWR2OQdrdA9gfMlZ0jPJvNYiv8p9cOQf7
X0o+ysBDDRIspn3KxP7i7G/2VH+gCqHlSuyd2H9BSJPOmaow8XQS4yP25+M5
7srOW1ThP2/Pm+bYvwu2TLy5yloVqlW/W5djf7/Pnz/BuU8FhpF+xfoN6Zng
+8hLHNcgLTcif9w6b7b22FFlMTzAP6lIw5sSlKEovqVGDvkp/0XUL89EZdi+
jFooPM2EkB3RI8ccUob4Ec/6xpcxYXEo84xrijKklwRukWxkwij5NeMTM5Sh
xeLxvC3IjzennFv1RkUZLEJZGiILFuRGHujRU1D6s/9uLBC+e7vyny5FmO/P
SexD/s0skz28/LgiNPc3Fv5/NPkoQl6/j2bBOPbMbWE5w2E14W3k90yk41/q
wyEE5VUF+T9XI03KrUBBDE+X3jyMg/oRG887ke4qL4afkTkQ6s/m1Ieny+Pl
wRFpxhp1wavfH8nD0+0S85JRvypKyA3Jw3Yyr0F9K3reWNomowC/5tHrjFXZ
EHFvQXEmRwG+669MykV9HDd9/U8lI3l4iHZXGfXTa8/WiGlj5WD2L3RAqJu5
40E43WEofE6dJHiK+ltLjGSr7KA+C4fKNTb7yf7ZJ9TvzWSwUTcEHPU1vOeg
vnsRXbAcAgkk16D+d5GAXSwthuU+9ek2on+QIPWYKiWGTZ0weKH/qOk3ktJw
dq5SZTP6E1/uREspP+n/+TvOn/XlSsOdbVX3d6K/0SK8900aiJ39Ec8B5x97
cStlYBeZK6E/8nqZUSbrIg0pZN6F/smt5ImJ52EpADsNYSj6q6J1aDAbJEGl
dx13Ivqv/rFQiCRILMIEif6subV6+Z5uiUH/1lWlyzjkITHo74QhV2CHex89
4P9iN/rpKLr1iuEB/+iLsVXubLcYHvCfkNXxYfPsXnrAn1acpHviWL/o3YQg
0b+GpAzfu7/6Fx3QcHGSEvpbt35C/03XJaIAo//NLbYYbqDSR/NXFGrdz0Lf
Ot5w2cnPv2h7bOPx6J9zTXb0nXvfSw/4a9+qJm+Tjh56wH/ndvre8+P30HNt
dy8sQH9ei12WqNlND/h3YQUflaSLHvD3rUofruSEddKG5Hv0/wxLg+rdUW1i
eCA/SBRtllXc/kMMzyaDJcwfjCWjf65IbqcH8knrLlLQHfRHGQsVS8wvufdG
tSvv6aQtiXDONQTAeJe/vIuu17Zoc8D8wyB+fthPOpvkY8xH6aSQvLrojYS/
MT+l26oWxtR30hMnautyMV+5mVoNKdrcSasP6bZNxfyVXpGwwSi7g0ZVa7iI
+ay1cE5wx7F2ur9fMb/FkvwW3EbPOsP024f5TmhbxFxg9INuNdP8loL5DzZf
QsfSKob///wojgfyZy3GvdCd3+n1aHsUMJ+6EX4r/EGTsVsF5tfWbcm/W+60
0W/dpyqexHwrJDx9o53evPWEwAbzrzK267dtHTSRuVmPjIGB9uj8Px303cfh
ZpkGJqDcT5gd9B0yp8B8XfvtUOj9zR10uW1Naxvm71iSowvaaXR5/13BfF5E
8kRpG229Dh0w5veB9fS+K/T2xHw/sN4fGFv+Hcz/rWK4ewYGi/kCKOLAHFNX
cSzgYaEECEAo+BZyAZ9nBiGgnQKIZT+rnx/SRt+9fNT9yD4BVNwgA4h2OoR3
c/epRAGk9w+sOmjX1owcRgo5/mpvuH8n7YLlJfFFACFEX9900ph+yy5NNgXf
BJnMLM8umr1ymcPEGMTEVyn8pC9+jaoNTjYFNzKg8cB66p1jaJtrCsrm3QqP
YzrpoEUyfa73TCG2f77ZQffPYZtMgUF4AevVekf9nUMmZiCBZ1+N9fw39kGb
bXvADBj66HiwH/7Gjtp9Vu8yzKC1U1tzxM5OWpm9c7rOKTMQ5jvPDcN+658L
nEY8Zlv6SK1umjPsUNG5M2bg2z9o7KEH5l+xxHdjP4/40TCkphPPJ0kcXC+N
v44aO8UcoFPfbPyXXzS3/7rmUEFeTKj20SQ2mKUitkPnHPGbVrohPGycj5j4
rZpf9ArR+Z/5zxDv9V3cinx0aK1qWFE3ni+OP6Ma+eoBySVcIRRZjj3JRz77
G2PVTOYvFIJbOBpa5MO/cQ+LTCCE4OtElK2PliBzBkch1C59rHUO+XZlvmSa
gb0QnH8KysN6JP7ML2YJwW5GSghvhyQYSZSO9rITQk39fImYJknoIfXpLYQK
uvh2VJLUHz8ZjceT20E98GHetZY/IwSJpYT5ZUBF2+nbtDwhdB1/ceod6kl/
m9zG9ZzPkH2CehNHcuQzITCI3qAeYUqWNf4khHySu1Gv3pF60RJB7vI70xio
Z3/jBe9OJN8CEfjOdnCuRz38Gw/Mn5XLKt91op5afUbhMRUBY1VWgR7q7cD8
Op3IwXpZmHZYkbrHEEEmyZuo16Td9+qIwNnuJ3bWUNiL6ZYzTgTC8rDrFy3l
YEnG1tVu80VQc+HyDTtDeUCVKYM1IohYWBC3Bf3CqOiTFw9swfXEPJtbhX7i
cOj9rs5I0aDfKPp2eWXCERHkN0oU6xbKQy/JSxfwfJ/QsKJfCbSdHcmpF0Fz
veWoIldx/G+uTp6pFAVdHjmbgtEP/Y1F5ActIpA4UOqlN3I4xCjrr9GtE0Es
llsG+q3+uUg13o9HpX8ApQheJD48xONlry97maEIBayutzNL8fn0v3hSBDIt
pV+JYDPxYXJKcOVDedDxVhEsyEZmRj84mgimNAWZRA/QL04j83BlatBP5rsH
P5/MpODImrWzHdBvDry/cZdUy9+IfnTg/Y7y6actoehXB97/rCUG5qg4ntr6
X3xLLAXGrBLjN+iH/8YJZGC5noL1ZrcXeqKf/hS9M++IBwX1X86+DkC/nd39
z5rbThQETtAf7Yh+PIrkBby++5fFU6zQr/e/nwIKWtq/7Ou8rwo7ZG7vEzlQ
4NiJBOCuBhwyZ3SlIPugZ4THLzXwH3p+9K4VFHCCha2vMC8ctwe1ZRsouDU5
wcof80RXxCHVGTspSCC5HvNG6IZpBzsSKGgl7xswj5BxEXm/ByQ/YV7pCfIu
8H+J56/5N8Dhtzgm8kbeH1roLN8fh3nob2zZH+wpsKpiji3BPLVIXiN8dA4F
pI2KMG+RFJ2ShuebXrdVPVsDhjfYXleIw/0bQghaA/5+v/z/ADhf7kk=
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> 
           DefinitionNotebookClient`FileTreeOpen[
             EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
           Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X ARM (64-bit) (July 16, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"8486d0f1-fc0d-4c2e-b76f-f8cb9ff35528"
]

