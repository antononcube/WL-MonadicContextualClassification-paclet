(* ::Package:: *)

PacletObject[
  <|
    "Name" -> "AntonAntonov/MonadicContextualClassification",
    "Description" -> "A monad for machine learning classification workflows",
    "Creator" -> "Anton Antonov",
    "License" -> "MIT",
    "PublisherID" -> "AntonAntonov",
    "Version" -> "1.0.0",
    "WolframVersion" -> "13.0+",
    "PrimaryContext" -> "AntonAntonov`MonadicContextualClassification`",
    "DocumentationURL" -> "https://resources.wolframcloud.com/PacletRepository/resources",
    "Extensions" -> {
      {
        "Kernel",
        "Root" -> "Kernel",
        "Context" -> {
          "AntonAntonov`MonadicContextualClassification`"
        },
        "Symbols" -> {
          "AntonAntonov`MonadicContextualClassification`$ClConFailure",
          "AntonAntonov`MonadicContextualClassification`ClCon",
          "AntonAntonov`MonadicContextualClassification`ClConAccuracyByVariableShuffling",
          "AntonAntonov`MonadicContextualClassification`ClConAddToContext",
          "AntonAntonov`MonadicContextualClassification`ClConAssignContextTo",
          "AntonAntonov`MonadicContextualClassification`ClConAssignTo",
          "AntonAntonov`MonadicContextualClassification`ClConAssignValueTo",
          "AntonAntonov`MonadicContextualClassification`ClConAssignVariableNames",
          "AntonAntonov`MonadicContextualClassification`ClConBind",
          "AntonAntonov`MonadicContextualClassification`ClConClassifierMeasurements",
          "AntonAntonov`MonadicContextualClassification`ClConClassifierMeasurementsByThreshold",
          "AntonAntonov`MonadicContextualClassification`ClConContexts",
          "AntonAntonov`MonadicContextualClassification`ClConDropFromContext",
          "AntonAntonov`MonadicContextualClassification`ClConEcho",
          "AntonAntonov`MonadicContextualClassification`ClConEchoContext",
          "AntonAntonov`MonadicContextualClassification`ClConEchoDataSummary",
          "AntonAntonov`MonadicContextualClassification`ClConEchoFunctionContext",
          "AntonAntonov`MonadicContextualClassification`ClConEchoFunctionValue",
          "AntonAntonov`MonadicContextualClassification`ClConEchoValue",
          "AntonAntonov`MonadicContextualClassification`ClConEchoVariableNames",
          "AntonAntonov`MonadicContextualClassification`ClConFail",
          "AntonAntonov`MonadicContextualClassification`ClConFold",
          "AntonAntonov`MonadicContextualClassification`ClConGetVariableNames",
          "AntonAntonov`MonadicContextualClassification`ClConIf",
          "AntonAntonov`MonadicContextualClassification`ClConIfElse",
          "AntonAntonov`MonadicContextualClassification`ClConIterate",
          "AntonAntonov`MonadicContextualClassification`ClConMakeClassifier",
          "AntonAntonov`MonadicContextualClassification`ClConModifyContext",
          "AntonAntonov`MonadicContextualClassification`ClConModule",
          "AntonAntonov`MonadicContextualClassification`ClConNest",
          "AntonAntonov`MonadicContextualClassification`ClConNestWhile",
          "AntonAntonov`MonadicContextualClassification`ClConOption",
          "AntonAntonov`MonadicContextualClassification`ClConOutlierPosition",
          "AntonAntonov`MonadicContextualClassification`ClConPutContext",
          "AntonAntonov`MonadicContextualClassification`ClConPutValue",
          "AntonAntonov`MonadicContextualClassification`ClConRecoverData",
          "AntonAntonov`MonadicContextualClassification`ClConReduceDimension",
          "AntonAntonov`MonadicContextualClassification`ClConRetrieveFromContext",
          "AntonAntonov`MonadicContextualClassification`ClConROCData",
          "AntonAntonov`MonadicContextualClassification`ClConROCListLinePlot",
          "AntonAntonov`MonadicContextualClassification`ClConROCPlot",
          "AntonAntonov`MonadicContextualClassification`ClConSetClassifier",
          "AntonAntonov`MonadicContextualClassification`ClConSetContext",
          "AntonAntonov`MonadicContextualClassification`ClConSetData",
          "AntonAntonov`MonadicContextualClassification`ClConSetTestData",
          "AntonAntonov`MonadicContextualClassification`ClConSetTrainingData",
          "AntonAntonov`MonadicContextualClassification`ClConSetValidationData",
          "AntonAntonov`MonadicContextualClassification`ClConSetValue",
          "AntonAntonov`MonadicContextualClassification`ClConSetVariableNames",
          "AntonAntonov`MonadicContextualClassification`ClConSplitData",
          "AntonAntonov`MonadicContextualClassification`ClConSucceed",
          "AntonAntonov`MonadicContextualClassification`ClConSuggestROCThresholds",
          "AntonAntonov`MonadicContextualClassification`ClConSummarizeData",
          "AntonAntonov`MonadicContextualClassification`ClConSummarizeDataLongForm",
          "AntonAntonov`MonadicContextualClassification`ClConTakeClassifier",
          "AntonAntonov`MonadicContextualClassification`ClConTakeContext",
          "AntonAntonov`MonadicContextualClassification`ClConTakeData",
          "AntonAntonov`MonadicContextualClassification`ClConTakeROCData",
          "AntonAntonov`MonadicContextualClassification`ClConTakeTestData",
          "AntonAntonov`MonadicContextualClassification`ClConTakeTrainingData",
          "AntonAntonov`MonadicContextualClassification`ClConTakeValidationData",
          "AntonAntonov`MonadicContextualClassification`ClConTakeValue",
          "AntonAntonov`MonadicContextualClassification`ClConTakeVariableNames",
          "AntonAntonov`MonadicContextualClassification`ClConToNormalClassifierData",
          "AntonAntonov`MonadicContextualClassification`ClConTrainClassifier",
          "AntonAntonov`MonadicContextualClassification`ClConUnit",
          "AntonAntonov`MonadicContextualClassification`ClConUnitQ",
          "AntonAntonov`MonadicContextualClassification`ClConWhen"
        }
      },
      {
        "Documentation",
        "Root" -> "Documentation",
        "Language" -> "English"
      }
    }
  |>
]
